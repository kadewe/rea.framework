<?xml version="1.0" encoding="UTF-8"?><apiPackage id="MainApplication"><apiName>MainApplication</apiName><apiDetail/><apiClassifier id="MainApplication:OverviewObject"><apiName>OverviewObject</apiName><shortdesc>
	 the handler class for an overview, where users will choose their next testcollection by choosing a dimension and the corresponding level.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>Interfaces:ICustomModule</apiBaseInterface><apiBaseInterface>Interfaces:ICustomEventDispatcher</apiBaseInterface><apiBaseClassifier>Shared:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc>
	 the handler class for an overview, where users will choose their next testcollection by choosing a dimension and the corresponding level.
	 </apiDesc></apiClassifierDetail><apiConstructor id="MainApplication:OverviewObject:OverviewObject"><apiName>OverviewObject</apiName><shortdesc>
		 constructor, initializes view component.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 constructor, initializes view component.
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="MainApplication:OverviewObject:getClassDefinition"><apiName>getClassDefinition</apiName><shortdesc>
		 returns the package and calass name as a string to allow search within the loader management
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 returns the package and calass name as a string to allow search within the loader management
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="MainApplication:OverviewObject:load"><apiName>load</apiName><shortdesc>
		 loads path urls and labels from globals.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>_globals</apiItemName><apiOperationClassifier>Model:Globals</apiOperationClassifier><apiDesc>reference to the globals lib
		 </apiDesc></apiParam><apiParam><apiItemName>_tcollection</apiItemName><apiOperationClassifier>Model:TestCollection</apiOperationClassifier><apiDesc>reference to the testcollection lib
		 </apiDesc></apiParam><apiParam><apiItemName>_session</apiItemName><apiOperationClassifier>Model:Session</apiOperationClassifier><apiDesc>reference to the session lib, not used in this class
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 loads path urls and labels from globals. Makes a reference to testcollection, because we need this later for session building.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="MainApplication:OverviewObject:returnLoadFinishedEvent"><apiName>returnLoadFinishedEvent</apiName><shortdesc>
		 allows adding event listeners because get function will not work for constants
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 allows adding event listeners because get function will not work for constants
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="MainApplication:OverviewObject:returnModuleFinishedEvent"><apiName>returnModuleFinishedEvent</apiName><shortdesc>
		 allows adding event listeners because get function will not work for constants
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 allows adding event listeners because get function will not work for constants
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="MainApplication:OverviewObject:returnView"><apiName>returnView</apiName><shortdesc>
		 Returns a reference to the view component.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Object"/></apiReturn></apiOperationDef><apiDesc>
		 Returns a reference to the view component.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="MainApplication:OverviewObject:sendTweenFinished"><apiName>sendTweenFinished</apiName><shortdesc>
		 not used in this class
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 not used in this class
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="MainApplication:OverviewObject:unload"><apiName>unload</apiName><shortdesc>
		 cleanup event listeners and references 
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 cleanup event listeners and references 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="MainApplication:OverviewObject:LOAD_COMPLETE"><apiName>LOAD_COMPLETE</apiName><shortdesc>
		 representing the event, where this class has finished the loading process
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>loadComplete</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 representing the event, where this class has finished the loading process
		 </apiDesc></apiValueDetail></apiValue><apiValue id="MainApplication:OverviewObject:debug:get"><apiName>debug</apiName><shortdesc>
		 gets debug value 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 gets debug value 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="MainApplication:OverviewObject:soundMode:get"><apiName>soundMode</apiName><shortdesc>
		 gets sounddebug value
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 gets sounddebug value
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="MainApplication:StartAppObject"><apiName>StartAppObject</apiName><shortdesc>
	 First module, loaded after initialization of the application.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>Interfaces:ICustomModule</apiBaseInterface><apiBaseInterface>Interfaces:ICustomEventDispatcher</apiBaseInterface><apiBaseClassifier>Shared:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc>
	 <p>First module, loaded after initialization of the application. Includes a VideoPlayer for introducing the applications funcionalities.</p> 
	 </apiDesc></apiClassifierDetail><apiConstructor id="MainApplication:StartAppObject:StartAppObject"><apiName>StartAppObject</apiName><shortdesc>
		 Constructor
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 Constructor
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="MainApplication:StartAppObject:getClassDefinition"><apiName>getClassDefinition</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="MainApplication:StartAppObject:load"><apiName>load</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>_globals</apiItemName><apiOperationClassifier>Model:Globals</apiOperationClassifier></apiParam><apiParam><apiItemName>_tcollection</apiItemName><apiOperationClassifier>Model:TestCollection</apiOperationClassifier></apiParam><apiParam><apiItemName>_session</apiItemName><apiOperationClassifier>Model:Session</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="MainApplication:StartAppObject:returnLoadFinishedEvent"><apiName>returnLoadFinishedEvent</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="MainApplication:StartAppObject:returnModuleFinishedEvent"><apiName>returnModuleFinishedEvent</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="MainApplication:StartAppObject:returnView"><apiName>returnView</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Object"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="MainApplication:StartAppObject:sendTweenFinished"><apiName>sendTweenFinished</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="MainApplication:StartAppObject:unload"><apiName>unload</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="MainApplication:StartAppObject:LOAD_COMPLETE"><apiName>LOAD_COMPLETE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>loadComplete</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="MainApplication:StartAppObject:view"><apiName>view</apiName><shortdesc>
		 The view component, which will be linked to the display.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>DisplayApplication:StartAppView</apiValueClassifier></apiValueDef><apiDesc>
		 The view component, which will be linked to the display.
		 
		 </apiDesc></apiValueDetail><related-links><link href="MainApplication.xml#MainAppManager"><linktext>MainApplication.MainAppManager</linktext></link><link href="MainApplication.xml#DisplayManager"><linktext>MainApplication.DisplayManager</linktext></link></related-links></apiValue><apiValue id="MainApplication:StartAppObject:debug:get"><apiName>debug</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef></apiValueDetail></apiValue><apiValue id="MainApplication:StartAppObject:soundMode:get"><apiName>soundMode</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="MainApplication:MainAppManager"><apiName>MainAppManager</apiName><shortdesc>
	 The core controller class.</shortdesc><prolog><author>Jan Küster
	 
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The core controller class.
	 Manages the loading and unloading of the modules as well as the communication between them and the model related data.
	 Modules a loaded by name, their functions are accessed via <codeph>ICustomModule</codeph> interface.
	 The view component of the modules get connected with the <codeph>DisplayManager</codeph>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="Interfaces.ICustomModule;.xml"><linktext>Interfaces.ICustomModule;</linktext></link><link href="MainApplication.xml#DisplayManager"><linktext>MainApplication.DisplayManager</linktext></link></related-links><apiConstructor id="MainApplication:MainAppManager:MainAppManager"><apiName>MainAppManager</apiName><shortdesc>
		 Constructor, no parameters.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 Constructor, no parameters.
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="MainApplication:MainAppManager:getView"><apiName>getView</apiName><shortdesc>
		 Returns a reference to the view component, owned by the current module instance.</shortdesc><prolog><author>Jan Küster
		 
		 </author></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Object view object, usually a group based mxml component
		 </apiDesc><apiType value="Object"/></apiReturn></apiOperationDef><apiDesc>
		 Returns a reference to the view component, owned by the current module instance.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="MainApplication:MainAppManager:sendTweenComplete"><apiName>sendTweenComplete</apiName><shortdesc>
		 Sends to the module instance, that the display tween is finished.</shortdesc><prolog><author>
		 </author></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Sends to the module instance, that the display tween is finished. This ensures a delay of starting animations or scripts until the new screen is visible.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="MainApplication:MainAppManager:LOAD_COMPLETE"><apiName>LOAD_COMPLETE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>loadComplete</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="MainApplication:MainAppManager:MODULE_FINISHED"><apiName>MODULE_FINISHED</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>creationComplete</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="MainApplication:TestFinishedObject"><apiName>TestFinishedObject</apiName><shortdesc>
	 After finishing a test, this Class is loaded to provide functions for printing the evaluation and choosing the further activities.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>Interfaces:ICustomModule</apiBaseInterface><apiBaseInterface>Interfaces:ICustomEventDispatcher</apiBaseInterface><apiBaseClassifier>Shared:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc>
	 After finishing a test, this Class is loaded to provide functions for printing the evaluation and choosing the further activities.
	 
	 </apiDesc></apiClassifierDetail><apiConstructor id="MainApplication:TestFinishedObject:TestFinishedObject"><apiName>TestFinishedObject</apiName><shortdesc>
		 empty constructor
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 empty constructor
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="MainApplication:TestFinishedObject:getClassDefinition"><apiName>getClassDefinition</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="MainApplication:TestFinishedObject:load"><apiName>load</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>_globals</apiItemName><apiOperationClassifier>Model:Globals</apiOperationClassifier></apiParam><apiParam><apiItemName>_tcollection</apiItemName><apiOperationClassifier>Model:TestCollection</apiOperationClassifier></apiParam><apiParam><apiItemName>_session</apiItemName><apiOperationClassifier>Model:Session</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="MainApplication:TestFinishedObject:returnLoadFinishedEvent"><apiName>returnLoadFinishedEvent</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="MainApplication:TestFinishedObject:returnModuleFinishedEvent"><apiName>returnModuleFinishedEvent</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="MainApplication:TestFinishedObject:returnView"><apiName>returnView</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Object"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="MainApplication:TestFinishedObject:sendTweenFinished"><apiName>sendTweenFinished</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="MainApplication:TestFinishedObject:unload"><apiName>unload</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="MainApplication:TestFinishedObject:LOAD_COMPLETE"><apiName>LOAD_COMPLETE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>loadComplete</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="MainApplication:TestFinishedObject:debug:get"><apiName>debug</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef></apiValueDetail></apiValue><apiValue id="MainApplication:TestFinishedObject:soundMode:get"><apiName>soundMode</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="MainApplication:DisplayManager"><apiName>DisplayManager</apiName><shortdesc>
	 The DisplayManager is one of the core classes to provide a management all visual components.</shortdesc><prolog><asMetadata><DefaultProperty name="mxmlContentFactory"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.components:BorderContainer</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The DisplayManager is one of the core classes to provide a management all visual components.
	 This allows the <codeph>MainAppmanager</codeph> to include or remove specific view components of a module.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="MainApplication.xml#MainAppManager"><linktext>MainApplication.MainAppManager</linktext></link></related-links><adobeApiEvent id="MainApplication:DisplayManager:DISPLAY_TWEENEDOUT_flash.events.Event"><apiName>flash.events.Event</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>MainApplication:DisplayManager:DISPLAY_TWEENEDOUT</apiEventType><adobeApiEventClassifier>MainApplication:DisplayManager</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="" invalidHref="MainApplication.layer.xml"><linktext>layer</linktext></link></related-links></adobeApiEvent><apiConstructor id="MainApplication:DisplayManager:DisplayManager"><apiName>DisplayManager</apiName><shortdesc>
		 Constructor, no args.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 Constructor, no args. Set the default size of the wrapper.
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="MainApplication:DisplayManager:removeContent"><apiName>removeContent</apiName><shortdesc>
		 clears the screen.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 clears the screen.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="MainApplication:DisplayManager:setContent"><apiName>setContent</apiName><shortdesc>
		 Links the Displaymanager with the viewcomponent of the actual module.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>ob</apiItemName><apiType value="Object"/><apiDesc>an object reference to the actual module
		 </apiDesc></apiParam><apiParam><apiItemName>_title</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>defined, wether the tween is the title screen or a normal alpha tween
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Links the Displaymanager with the viewcomponent of the actual module.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="MainApplication.layer.xml"><linktext>the image which will be faded to alpha 0</linktext></link><link href="MainApplication.xml#DisplayManager/showDisplay()"><linktext>the tween animation</linktext></link></related-links></apiOperation><apiValue id="MainApplication:DisplayManager:DISPLAY_ERROR"><apiName>DISPLAY_ERROR</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dispalyError</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="MainApplication:DisplayManager:DISPLAY_TWEENEDOUT"><apiName>DISPLAY_TWEENEDOUT</apiName><shortdesc>
		 Event Const for dispatching status of tweened out / fade out complete.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>displayTweenedOut</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Event Const for dispatching status of tweened out / fade out complete.
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="MainApplication.layer.xml"><linktext>layer</linktext></link></related-links></apiValue><apiValue id="MainApplication:DisplayManager:inheritedObj"><apiName>inheritedObj</apiName><shortdesc>
		 The target object, which will be dispalyed on the screen.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
		 The target object, which will be dispalyed on the screen.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="MainApplication:LoginObject"><apiName>LoginObject</apiName><shortdesc>
	 Represents a login form handler.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>Interfaces:ICustomModule</apiBaseInterface><apiBaseInterface>Interfaces:ICustomEventDispatcher</apiBaseInterface><apiBaseClassifier>Shared:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Represents a login form handler. User input will be sent to the server, server evaluates and answers with a value. The value influences the state of the handler and
	 either a login is performed or fault or a new user code is requestet.
	 </apiDesc></apiClassifierDetail><apiConstructor id="MainApplication:LoginObject:LoginObject"><apiName>LoginObject</apiName><shortdesc>
		 constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 constructor. No variables will be pased. Initializes view component.
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="MainApplication:LoginObject:getClassDefinition"><apiName>getClassDefinition</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="MainApplication:LoginObject:load"><apiName>load</apiName><shortdesc>
		 Extracts the urls and paths from the globals model and prepares the http service for server request.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>_globals</apiItemName><apiOperationClassifier>Model:Globals</apiOperationClassifier><apiDesc>the global settings lib object, storing all labels and paths for the application
		 </apiDesc></apiParam><apiParam><apiItemName>_tcollection</apiItemName><apiOperationClassifier>Model:TestCollection</apiOperationClassifier><apiDesc>the testcollection lib object, not used in this class
		 </apiDesc></apiParam><apiParam><apiItemName>_session</apiItemName><apiOperationClassifier>Model:Session</apiOperationClassifier><apiDesc>the session lib object, not used in this class
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Extracts the urls and paths from the globals model and prepares the http service for server request.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="MainApplication:LoginObject:requestData"><apiName>requestData</apiName><shortdesc>
		 This method starts the http request.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 This method starts the http request.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="MainApplication:LoginObject:returnLoadFinishedEvent"><apiName>returnLoadFinishedEvent</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="MainApplication:LoginObject:returnModuleFinishedEvent"><apiName>returnModuleFinishedEvent</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="MainApplication:LoginObject:returnUserData"><apiName>returnUserData</apiName><shortdesc>
		 For other objects, to retrieve userdata url.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 For other objects, to retrieve userdata url.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="MainApplication:LoginObject:returnView"><apiName>returnView</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Object"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="MainApplication:LoginObject:sendTweenFinished"><apiName>sendTweenFinished</apiName><shortdesc>
		 not required in this class
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 not required in this class
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="MainApplication:LoginObject:unload"><apiName>unload</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="MainApplication:LoginObject:LOAD_COMPLETE"><apiName>LOAD_COMPLETE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>loadComplete</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="MainApplication:LoginObject:LOGIN_FAULT"><apiName>LOGIN_FAULT</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>logInFault</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="MainApplication:LoginObject:LOGIN_SUCCESS"><apiName>LOGIN_SUCCESS</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>loginSuccess</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="MainApplication:LoginObject:REQUEST_ERROR"><apiName>REQUEST_ERROR</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>requestError</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="MainApplication:LoginObject:USERDATA_RECEIVED"><apiName>USERDATA_RECEIVED</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>userDataReceived</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="MainApplication:LoginObject:protected:loginState"><apiName>loginState</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="MainApplication:LoginObject:view"><apiName>view</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>DisplayApplication:LogInView</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="MainApplication:LoginObject:data:get"><apiName>data</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef></apiValueDetail></apiValue><apiValue id="MainApplication:LoginObject:debug:get"><apiName>debug</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef></apiValueDetail></apiValue><apiValue id="MainApplication:LoginObject:soundMode:get"><apiName>soundMode</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="MainApplication:LoaderManagement"><apiName>LoaderManagement</apiName><shortdesc>
	 A static class, representing a sequence to arrange the required modules in a predefined order.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A static class, representing a sequence to arrange the required modules in a predefined order.
	 </apiDesc></apiClassifierDetail><apiConstructor id="MainApplication:LoaderManagement:LoaderManagement"><apiName>LoaderManagement</apiName><shortdesc>
		 constructor is empty
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 constructor is empty
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="MainApplication:LoaderManagement:getNext2Load"><apiName>getNext2Load</apiName><shortdesc>
		 Iterates a sequence of module class names and tries to find matches.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>Returns a String-Name of the Class definition, which makes the module accessable via getClassByDefinition.
		 
		 </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>moduleName</apiItemName><apiType value="String"/><apiDesc>the name of the current module to match with the sequence
		 </apiDesc></apiParam><apiParam><apiItemName>nextItem</apiItemName><apiType value="String"/><apiDesc>is a parameter which indeicated, that there is still an item in the load queue
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Iterates a sequence of module class names and tries to find matches.
		 
		 </apiDesc></apiOperationDetail></apiOperation></apiClassifier></apiPackage>