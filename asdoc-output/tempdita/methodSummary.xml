<?xml version="1.0" encoding="UTF-8"?><allClasses><apiPackage id="DisplayApplication.Components"><apiName>DisplayApplication.Components</apiName><apiClassifier id="DisplayApplication.Components:SmallEyeButton"><apiName>SmallEyeButton</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Shared:CustomButton</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="DisplayApplication.Components:SmallEyeButton:SmallEyeButton"><apiName>SmallEyeButton</apiName><shortdesc>Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="DisplayApplication.Components:MiniSoundButton"><apiName>MiniSoundButton</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Shared:CustomButton</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="DisplayApplication.Components:MiniSoundButton:MiniSoundButton"><apiName>MiniSoundButton</apiName><shortdesc>Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="DisplayApplication.Components:SmallSoundButton"><apiName>SmallSoundButton</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Shared:CustomButton</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="DisplayApplication.Components:SmallSoundButton:SmallSoundButton"><apiName>SmallSoundButton</apiName><shortdesc>Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="DisplayApplication.Components:SelectableImage"><apiName>SelectableImage</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>Interfaces:ICustomSelectable</apiBaseInterface><apiBaseClassifier>Shared:CustomImage</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="DisplayApplication.Components:SelectableImage:SelectableImage"><apiName>SelectableImage</apiName><shortdesc>
		 Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>scriptUrl</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>relativePath</apiItemName><apiType value="String"/></apiParam></apiConstructorDef><apiDesc>
		 Constructor.
		 
		 </apiDesc></apiConstructorDetail><related-links><link href="Shared.xml#CustomImage"><linktext>Shared.CustomImage</linktext></link></related-links></apiConstructor></apiClassifier><apiClassifier id="DisplayApplication.Components:BackButton"><apiName>BackButton</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Shared:CustomButton</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="DisplayApplication.Components:BackButton:BackButton"><apiName>BackButton</apiName><shortdesc>Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="DisplayApplication.Components:CustomCheckBox"><apiName>CustomCheckBox</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>Interfaces:ICustomSelectable</apiBaseInterface><apiBaseClassifier>spark.components:CheckBox</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="DisplayApplication.Components:CustomCheckBox:CustomCheckBox"><apiName>CustomCheckBox</apiName><shortdesc>Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="DisplayApplication.Components:ForwardButton"><apiName>ForwardButton</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Shared:CustomButton</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="DisplayApplication.Components:ForwardButton:ForwardButton"><apiName>ForwardButton</apiName><shortdesc>Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="DisplayApplication.Components:StartButton"><apiName>StartButton</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Shared:CustomButton</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="DisplayApplication.Components:StartButton:StartButton"><apiName>StartButton</apiName><shortdesc>Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="DisplayApplication.Components:CustomDesignButton"><apiName>CustomDesignButton</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Shared:CustomButton</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="DisplayApplication.Components:CustomDesignButton:CustomDesignButton"><apiName>CustomDesignButton</apiName><shortdesc>Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="DisplayApplication.Components:CustomTextInput"><apiName>CustomTextInput</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>Interfaces:ICustomWritable</apiBaseInterface><apiBaseClassifier>spark.components:TextInput</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="DisplayApplication.Components:CustomTextInput:CustomTextInput"><apiName>CustomTextInput</apiName><shortdesc>Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="DisplayApplication.Components:SoundButton"><apiName>SoundButton</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Shared:CustomButton</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="DisplayApplication.Components:SoundButton:SoundButton"><apiName>SoundButton</apiName><shortdesc>Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="DisplayApplication.Components:CustomRadioButton"><apiName>CustomRadioButton</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>Interfaces:ICustomSelectable</apiBaseInterface><apiBaseClassifier>spark.components:RadioButton</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="DisplayApplication.Components:CustomRadioButton:CustomRadioButton"><apiName>CustomRadioButton</apiName><shortdesc>Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage><apiPackage id="DisplayApplication.CustomSkins"><apiName>DisplayApplication.CustomSkins</apiName><apiClassifier id="DisplayApplication.CustomSkins:CustomForwardButtonSkin"><apiName>CustomForwardButtonSkin</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.binding:IBindingClient</apiBaseInterface><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="DisplayApplication.CustomSkins:CustomForwardButtonSkin:CustomForwardButtonSkin"><apiName>CustomForwardButtonSkin</apiName><shortdesc>Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="DisplayApplication.CustomSkins:CustomSoundButtonSkin"><apiName>CustomSoundButtonSkin</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.binding:IBindingClient</apiBaseInterface><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="DisplayApplication.CustomSkins:CustomSoundButtonSkin:CustomSoundButtonSkin"><apiName>CustomSoundButtonSkin</apiName><shortdesc>Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="DisplayApplication.CustomSkins:CustomVideoPlayerSkin"><apiName>CustomVideoPlayerSkin</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.binding:IBindingClient</apiBaseInterface><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="DisplayApplication.CustomSkins:CustomVideoPlayerSkin:CustomVideoPlayerSkin"><apiName>CustomVideoPlayerSkin</apiName><shortdesc>Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="DisplayApplication.CustomSkins:CustomButtonSkin"><apiName>CustomButtonSkin</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.binding:IBindingClient</apiBaseInterface><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="DisplayApplication.CustomSkins:CustomButtonSkin:CustomButtonSkin"><apiName>CustomButtonSkin</apiName><shortdesc>Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="DisplayApplication.CustomSkins:CustomStartButtonSkin"><apiName>CustomStartButtonSkin</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.binding:IBindingClient</apiBaseInterface><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="DisplayApplication.CustomSkins:CustomStartButtonSkin:CustomStartButtonSkin"><apiName>CustomStartButtonSkin</apiName><shortdesc>Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="DisplayApplication.CustomSkins:CustomDimesionButtonSkin"><apiName>CustomDimesionButtonSkin</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.binding:IBindingClient</apiBaseInterface><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="DisplayApplication.CustomSkins:CustomDimesionButtonSkin:CustomDimesionButtonSkin"><apiName>CustomDimesionButtonSkin</apiName><shortdesc>Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="DisplayApplication.CustomSkins:CustomRadioSkin"><apiName>CustomRadioSkin</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="DisplayApplication.CustomSkins:CustomRadioSkin:CustomRadioSkin"><apiName>CustomRadioSkin</apiName><shortdesc>Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="DisplayApplication.CustomSkins:CustomBackButtonSkin"><apiName>CustomBackButtonSkin</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.binding:IBindingClient</apiBaseInterface><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="DisplayApplication.CustomSkins:CustomBackButtonSkin:CustomBackButtonSkin"><apiName>CustomBackButtonSkin</apiName><shortdesc>Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="DisplayApplication.CustomSkins:CustomEyeButtonSkin"><apiName>CustomEyeButtonSkin</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.binding:IBindingClient</apiBaseInterface><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="DisplayApplication.CustomSkins:CustomEyeButtonSkin:CustomEyeButtonSkin"><apiName>CustomEyeButtonSkin</apiName><shortdesc>Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="DisplayApplication.CustomSkins:CustomLoginPanelSkin"><apiName>CustomLoginPanelSkin</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.binding:IBindingClient</apiBaseInterface><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="DisplayApplication.CustomSkins:CustomLoginPanelSkin:CustomLoginPanelSkin"><apiName>CustomLoginPanelSkin</apiName><shortdesc>Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="DisplayApplication.CustomSkins:CustomTextInputSkin"><apiName>CustomTextInputSkin</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.binding:IBindingClient</apiBaseInterface><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="DisplayApplication.CustomSkins:CustomTextInputSkin:CustomTextInputSkin"><apiName>CustomTextInputSkin</apiName><shortdesc>Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="DisplayApplication.CustomSkins:SoundButtonSkin"><apiName>SoundButtonSkin</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="DisplayApplication.CustomSkins:SoundButtonSkin:SoundButtonSkin"><apiName>SoundButtonSkin</apiName><shortdesc>Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="DisplayApplication.CustomSkins:CustomLoginInputSkin"><apiName>CustomLoginInputSkin</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="DisplayApplication.CustomSkins:CustomLoginInputSkin:CustomLoginInputSkin"><apiName>CustomLoginInputSkin</apiName><shortdesc>Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage><apiPackage id="DisplayApplication.ItemView"><apiName>DisplayApplication.ItemView</apiName><apiClassifier id="DisplayApplication.ItemView:InstructionField"><apiName>InstructionField</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.components:Group</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="DisplayApplication.ItemView:InstructionField:InstructionField"><apiName>InstructionField</apiName><shortdesc>Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="DisplayApplication.ItemView:reaBtnNext"><apiName>reaBtnNext</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.components:Button</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="DisplayApplication.ItemView:reaBtnNext:reaBtnNext"><apiName>reaBtnNext</apiName><shortdesc>Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="DisplayApplication.ItemView:reaSoundImg"><apiName>reaSoundImg</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls:Image</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="DisplayApplication.ItemView:reaSoundImg:reaSoundImg"><apiName>reaSoundImg</apiName><shortdesc>Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="DisplayApplication.ItemView:reaPanelCom"><apiName>reaPanelCom</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.components:Panel</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="DisplayApplication.ItemView:reaPanelCom:reaPanelCom"><apiName>reaPanelCom</apiName><shortdesc>Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="DisplayApplication.ItemView:reaBackimg"><apiName>reaBackimg</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls:Image</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="DisplayApplication.ItemView:reaBackimg:reaBackimg"><apiName>reaBackimg</apiName><shortdesc>Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage><apiPackage id="DisplayApplication"><apiName>DisplayApplication</apiName><apiClassifier id="DisplayApplication:LogInView"><apiName>LogInView</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.binding:IBindingClient</apiBaseInterface><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.components:Group</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="DisplayApplication:LogInView:LogInView"><apiName>LogInView</apiName><shortdesc>Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="DisplayApplication:StartAppView"><apiName>StartAppView</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.components:Group</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="DisplayApplication:StartAppView:StartAppView"><apiName>StartAppView</apiName><shortdesc>Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="DisplayApplication:ErrorView"><apiName>ErrorView</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.components:Group</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="DisplayApplication:ErrorView:ErrorView"><apiName>ErrorView</apiName><shortdesc>Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="DisplayApplication:DisplayWrapper"><apiName>DisplayWrapper</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.components:Group</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="DisplayApplication:DisplayWrapper:DisplayWrapper"><apiName>DisplayWrapper</apiName><shortdesc>Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="DisplayApplication:Overview"><apiName>Overview</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.binding:IBindingClient</apiBaseInterface><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.components:Group</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="DisplayApplication:Overview:Overview"><apiName>Overview</apiName><shortdesc>Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="DisplayApplication:QuestionView"><apiName>QuestionView</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.components:Group</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="DisplayApplication:QuestionView:QuestionView"><apiName>QuestionView</apiName><shortdesc>Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="DisplayApplication:ItemViewContainer"><apiName>ItemViewContainer</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.components:Group</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="DisplayApplication:ItemViewContainer:ItemViewContainer"><apiName>ItemViewContainer</apiName><shortdesc>Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="DisplayApplication:TestFinishedView"><apiName>TestFinishedView</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.binding:IBindingClient</apiBaseInterface><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.components:Group</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="DisplayApplication:TestFinishedView:TestFinishedView"><apiName>TestFinishedView</apiName><shortdesc>Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage><apiPackage id="Interfaces"><apiName>Interfaces</apiName><apiClassifier id="Interfaces:ICustomModule"><apiName>ICustomModule</apiName><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>flash.events:IEventDispatcher</apiBaseInterface><apiBaseInterface>Interfaces:ICustomEventDispatcher</apiBaseInterface><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail><apiOperation id="Interfaces:ICustomModule:Interfaces:ICustomModule:getClassDefinition"><apiName>getClassDefinition</apiName><shortdesc>
		 Returns a String of the module class plus the package name.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 Returns a String of the module class plus the package name. Ensure to change their names, when refactor.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="Interfaces:ICustomModule:Interfaces:ICustomModule:load"><apiName>load</apiName><shortdesc>
		 Loading the module.
		 
		 Connect the modules internal variables with data from GlobalSettings, TestCollections and Session.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>_globals</apiItemName><apiOperationClassifier>Model:Globals</apiOperationClassifier></apiParam><apiParam><apiItemName>_tcollection</apiItemName><apiOperationClassifier>Model:TestCollection</apiOperationClassifier></apiParam><apiParam><apiItemName>_session</apiItemName><apiOperationClassifier>Model:Session</apiOperationClassifier></apiParam></apiOperationDef><apiDesc>
		 <p>Loading the module.</p>
		 <p>
		 Connect the modules internal variables with data from GlobalSettings, TestCollections and Session.
		 Usually there are only some of them needed, so not all the modules will behave like in the following description.
		 </p>
		 
		 <p>loads debug states, url paths to data on the server, and text for labels from globalsettings</p>
		 <p>loads the collection of possible dimensions, levels and the associated items as Strings</p>
		 <p>loads actual session states. These can include actual dimension, actual level and actual item.</p>
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="Interfaces:ICustomModule:Interfaces:ICustomModule:returnLoadFinishedEvent"><apiName>returnLoadFinishedEvent</apiName><shortdesc>
		 Event const cannot be accessed via get, therefore we use this method, to enable addEventListener(anyModuleInstance.returnLoadFinishedEvent())
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 Event const cannot be accessed via get, therefore we use this method, to enable <codeph>addEventListener(anyModuleInstance.returnLoadFinishedEvent())</codeph>
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="Interfaces:ICustomModule:Interfaces:ICustomModule:returnModuleFinishedEvent"><apiName>returnModuleFinishedEvent</apiName><shortdesc>
		 Event const cannot be accessed via get, therefore we use this method, to enable addEventListener(anyModuleInstance.returnModuleFinishedEvent())
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 Event const cannot be accessed via get, therefore we use this method, to enable <codeph>addEventListener(anyModuleInstance.returnModuleFinishedEvent())</codeph>
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="Interfaces:ICustomModule:Interfaces:ICustomModule:returnView"><apiName>returnView</apiName><shortdesc>
		 To access the private view component only via referencs, instead of direct access.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Object"/></apiReturn></apiOperationDef><apiDesc>
		 To access the private view component only via referencs, instead of direct access.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="Interfaces:ICustomModule:Interfaces:ICustomModule:sendTweenFinished"><apiName>sendTweenFinished</apiName><shortdesc>
		 Tells the module, that the screen is visible and specific actions can be performed now.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Tells the module, that the screen is visible and specific actions can be performed now.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="Interfaces:ICustomModule:Interfaces:ICustomModule:unload"><apiName>unload</apiName><shortdesc>
		 Unloads all contained and related objects of a module.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 <p>Unloads all contained and related objects of a module. Removes all event listeners if possible and sets all objects and relations to null.</p>
		 <p>Therefore all related objects of a module should be stored in an array calles references.</p>
		 </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="Interfaces:IClickableComponent"><apiName>IClickableComponent</apiName><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IButton</apiBaseInterface><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail></apiClassifier><apiClassifier id="Interfaces:ICustomEventDispatcher"><apiName>ICustomEventDispatcher</apiName><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail><apiOperation id="Interfaces:ICustomEventDispatcher:Interfaces:ICustomEventDispatcher:removeAllEventListeners"><apiName>removeAllEventListeners</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiData/></apiParam></apiOperationDef></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="Interfaces:ICustomSelectable"><apiName>ICustomSelectable</apiName><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail></apiClassifier><apiClassifier id="Interfaces:ICustomWritable"><apiName>ICustomWritable</apiName><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail></apiClassifier></apiPackage><apiPackage id="ItemApplication.QuestionTypes"><apiName>ItemApplication.QuestionTypes</apiName><apiClassifier id="ItemApplication.QuestionTypes:SelectAndWrite"><apiName>SelectAndWrite</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>ItemApplication.QuestionTypes:QuestionsObject</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="ItemApplication.QuestionTypes:SelectAndWrite:displayQuestions"><apiName>displayQuestions</apiName><shortdesc>
		 loads all required data, according to a specific questionspage.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>param</apiItemName><apiType value="Number"/></apiParam></apiOperationDef><apiDesc>
		 loads all required data, according to a specific questionspage.
		 <p>Builds questions instruction first</p>
		 <p>loads images and arranges them in a rectangle shaped group of four images</p>
		 <p>creates a textinput area next to the images group</p>
		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="ItemApplication.QuestionTypes:SelectAndWrite:SelectAndWrite"><apiName>SelectAndWrite</apiName><shortdesc>
		 Constructor, calls superclass.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>_source</apiItemName><apiType value="XMLList"/><apiDesc>the xmllist source file
		 </apiDesc></apiParam><apiParam><apiItemName>scripturl</apiItemName><apiType value="String"/><apiDesc>path to the php script for loading images, mp3 and other data
		 </apiDesc></apiParam><apiParam><apiItemName>relativeUrl</apiItemName><apiType value="String"/><apiDesc>the equivalent to rooturl  
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 Constructor, calls superclass.
		 
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="ItemApplication.QuestionTypes:ScCloud"><apiName>ScCloud</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>ItemApplication.QuestionTypes:SingleChoice</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="ItemApplication.QuestionTypes:ScCloud:displayQuestions"><apiName>displayQuestions</apiName><shortdesc>
		 
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>param</apiItemName><apiType value="Number"/></apiParam></apiOperationDef><apiDesc>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="ItemApplication.QuestionTypes:ScCloud:protected:onMouseOutRadio"><apiName>onMouseOutRadio</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="ItemApplication.QuestionTypes:ScCloud:protected:onMouseOverRadio"><apiName>onMouseOverRadio</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="ItemApplication.QuestionTypes:ScCloud:ScCloud"><apiName>ScCloud</apiName><shortdesc>
		 constructor calls superclass.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>_source</apiItemName><apiType value="XMLList"/></apiParam><apiParam><apiItemName>scripturl</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>relativeUrl</apiItemName><apiType value="String"/></apiParam></apiConstructorDef><apiDesc>
		 constructor calls superclass.
		 
		 </apiDesc></apiConstructorDetail><related-links><link href="ItemApplication.QuestionTypes.xml#QuestionsObject"><linktext>QuestionsObject</linktext></link></related-links></apiConstructor></apiClassifier><apiClassifier id="ItemApplication.QuestionTypes:SingleChoice"><apiName>SingleChoice</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>ItemApplication.QuestionTypes:QuestionsObject</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="ItemApplication.QuestionTypes:SingleChoice:displayQuestions"><apiName>displayQuestions</apiName><shortdesc>
		 Displays a vertical set of Radiobuttons and Labels according to the specific questionspage, determined by the parameter.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>param</apiItemName><apiType value="Number"/><apiDesc>the number of the page
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Displays a vertical set of Radiobuttons and Labels according to the specific questionspage, determined by the parameter.
		 Optional there can be an image and or a sound button before the answertext.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="ItemApplication.QuestionTypes:SingleChoice:protected:onAnswerLabelUpdate"><apiName>onAnswerLabelUpdate</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="mx.events:FlexEvent"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="ItemApplication.QuestionTypes:SingleChoice:protected:onMouseOutRadio"><apiName>onMouseOutRadio</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="ItemApplication.QuestionTypes:SingleChoice:protected:onMouseOverRadio"><apiName>onMouseOverRadio</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="ItemApplication.QuestionTypes:SingleChoice:SingleChoice"><apiName>SingleChoice</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>_source</apiItemName><apiType value="XMLList"/></apiParam><apiParam><apiItemName>scripturl</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>relativeUrl</apiItemName><apiType value="String"/></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="ItemApplication.QuestionTypes:QuestionsObject"><apiName>QuestionsObject</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Shared:EventDispatcher</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="ItemApplication.QuestionTypes:QuestionsObject:protected:answerExists"><apiName>answerExists</apiName><shortdesc>
		 iterates the answer array to check if an anser was already given to a specific field.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>id</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc>
		 iterates the answer array to check if an anser was already given to a specific field. This allows a reload of a previous page with pre-existing answer settings.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="ItemApplication.QuestionTypes:QuestionsObject:displayQuestions"><apiName>displayQuestions</apiName><shortdesc>
		 This function is the main process for displaying the content.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>param</apiItemName><apiType value="Number"/></apiParam></apiOperationDef><apiDesc>
		 This function is the main process for displaying the content. It will vary for each Questionsobject, so it need to be overridden.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="ItemApplication.QuestionTypes:QuestionsObject:protected:getAnswerString"><apiName>getAnswerString</apiName><shortdesc>
		 returns the answervalue, if value is a string
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="String"/></apiReturn><apiParam><apiItemName>id</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc>
		 returns the answervalue, if value is a string
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="ItemApplication.QuestionTypes:QuestionsObject:protected:getAnswerValue"><apiName>getAnswerValue</apiName><shortdesc>
		 checks, if a value in the answer array was already given by comparing the ids.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>id</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc>
		 checks, if a value in the answer array was already given by comparing the ids.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="ItemApplication.QuestionTypes:QuestionsObject:hasAtLeastOneListener"><apiName>hasAtLeastOneListener</apiName><shortdesc>
		 Because this Class is extending Shared.EventDispatcher, we can check if the listeners array is filled with
		 at least one reference to a listener object.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
		 Because this Class is extending <codeph>Shared.EventDispatcher</codeph>, we can check if the listeners array is filled with
		 at least one reference to a listener object. This may be required to check if an object's listener is removable.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="ItemApplication.QuestionTypes:QuestionsObject:load"><apiName>load</apiName><shortdesc>
		 initialization of the xmllist content.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 initialization of the xmllist content. Need to be called seperately, because of EventListeners in Parent Object.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="ItemApplication.QuestionTypes:QuestionsObject:protected:nextQpage"><apiName>nextQpage</apiName><shortdesc>
		 This Method loops the reference array, searching for the Radiobutton Reference and get its ID and selection status.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/></apiParam></apiOperationDef><apiDesc>
		 This Method loops the reference array, searching for the Radiobutton Reference and get its ID and selection status.
		 These information represents the user input and is fundamental for evaluation.
		 Evaluation is always done in <codeph>ItemObject</codeph>.
		 The clear screen behavior is not defined here but rather the change of the qpState.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="ItemApplication.QuestionTypes.qpState.xml"><linktext>qpState</linktext></link><link href="ItemApplication.xml#ItemObject"><linktext>ItemApplication.ItemObject</linktext></link></related-links></apiOperation><apiOperation id="ItemApplication.QuestionTypes:QuestionsObject:protected:playAudio"><apiName>playAudio</apiName><shortdesc>
		 This method is called by event and plays the audio file (MP3Audio), the specific SoundButton is referring to.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/></apiParam></apiOperationDef><apiDesc>
		 This method is called by event and plays the audio file (MP3Audio), the specific SoundButton is referring to.
		 The reference to the audio file is created in the <codeph>displayQuestions()</codeph> method.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="ItemApplication.QuestionTypes.xml#QuestionsObject/displayQuestions();"><linktext>displayQuestions();</linktext></link><link href="" invalidHref="DisplayApplication.SoundButton.xml"><linktext>DisplayApplication.SoundButton</linktext></link><link href="Shared.xml#MP3Audio"><linktext>Shared.MP3Audio</linktext></link></related-links></apiOperation><apiOperation id="ItemApplication.QuestionTypes:QuestionsObject:protected:prevQpage"><apiName>prevQpage</apiName><shortdesc>
		 This method is like an undo function.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/></apiParam></apiOperationDef><apiDesc>
		 This method is like an undo function. Important to know: allAnswers.pop() will delete the input on the previous 
		 questionpage and substitude it with the new input.
		 The clear screen behavior is not defined here but rather the change of the qpState.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="ItemApplication.QuestionTypes.qpState.xml"><linktext>qpState</linktext></link></related-links></apiOperation><apiOperation id="ItemApplication.QuestionTypes:QuestionsObject:protected:removeQuestions"><apiName>removeQuestions</apiName><shortdesc>
		 This method initially loops the references Array and checks if the reference has listeners or is a specific object.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 This method initially loops the references Array and checks if the reference has listeners or is a specific object.
		 Listeners will be removed, Objects will be set to null.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="ItemApplication.QuestionTypes.references.xml"><linktext>references</linktext></link></related-links></apiOperation><apiOperation id="ItemApplication.QuestionTypes:QuestionsObject:returnAnswerList"><apiName>returnAnswerList</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Array"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="ItemApplication.QuestionTypes:QuestionsObject:returnFirstPulseObject"><apiName>returnFirstPulseObject</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Object"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="ItemApplication.QuestionTypes:QuestionsObject:protected:synchronize"><apiName>synchronize</apiName><shortdesc>
		 This function is required to synchronize the answer arrays with the new answers every time a questionpage was build.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 This function is required to synchronize the answer arrays with the new answers every time a questionpage was build.
		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="ItemApplication.QuestionTypes:QuestionsObject:QuestionsObject"><apiName>QuestionsObject</apiName><shortdesc>
		 Constructor of each questions object contains a xmlList source (of questions) and the relative url path for loading data.</shortdesc><prolog><asCustoms><relativeUrl>alias for rooturl (depreaced)
		 </relativeUrl></asCustoms></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>_source</apiItemName><apiType value="XMLList"/><apiDesc>the source xmllist containing the item data, defined in each item xml document
		 
		 </apiDesc></apiParam><apiParam><apiItemName>scripturl</apiItemName><apiType value="String"/><apiDesc>the realtive url the php script which is required to load and store data
		 
		 </apiDesc></apiParam><apiParam><apiItemName>relativeUrl</apiItemName><apiType value="String"/></apiParam></apiConstructorDef><apiDesc>
		 Constructor of each questions object contains a xmlList source (of questions) and the relative url path for loading data. Also initializes the view component.
		 
		 
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="ItemApplication.QuestionTypes:Cloze"><apiName>Cloze</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>ItemApplication.QuestionTypes:QuestionsObject</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="ItemApplication.QuestionTypes:Cloze:displayQuestions"><apiName>displayQuestions</apiName><shortdesc>
		 loads the certain data and displays it in a way of a text with empty text areas and soundbuttons.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>param</apiItemName><apiType value="Number"/><apiDesc>the parameter indicates which questionpage is actually displayed
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 loads the certain data and displays it in a way of a text with empty text areas and soundbuttons.
		 <p>it uses the modified <codeph>HorizontalMultilineLayout</codeph> to arrange the elements in a row</p> 
		 <p>the Text will be completely split up, so every single word as well as the input area is encapsulated by a <codeph>Group</codeph> and can be Designed with css properties.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="ItemApplication.QuestionTypes.xml#QuestionsObject"><linktext>QuestionsObject</linktext></link><link href="Shared.xml#HorizontalMultilineLayout"><linktext>Shared.HorizontalMultilineLayout</linktext></link></related-links></apiOperation><apiConstructor id="ItemApplication.QuestionTypes:Cloze:Cloze"><apiName>Cloze</apiName><shortdesc>
		 constructor, calls superclass.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>_source</apiItemName><apiType value="XMLList"/><apiDesc>see <codeph>QuestionsObject</codeph>
		 </apiDesc></apiParam><apiParam><apiItemName>scripturl</apiItemName><apiType value="String"/><apiDesc>see <codeph>QuestionsObject</codeph>
		 </apiDesc></apiParam><apiParam><apiItemName>relativeUrl</apiItemName><apiType value="String"/><apiDesc>see <codeph>QuestionsObject</codeph>
		 
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 constructor, calls superclass.
		 
		 </apiDesc></apiConstructorDetail><related-links><link href="ItemApplication.QuestionTypes.xml#QuestionsObject"><linktext>QuestionsObject</linktext></link></related-links></apiConstructor></apiClassifier><apiClassifier id="ItemApplication.QuestionTypes:MultipleChoice"><apiName>MultipleChoice</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>ItemApplication.QuestionTypes:QuestionsObject</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="ItemApplication.QuestionTypes:MultipleChoice:displayQuestions"><apiName>displayQuestions</apiName><shortdesc>
		 
		 
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>param</apiItemName><apiType value="Number"/><apiDesc>the number of the questionpage. 0 means page 1
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="ItemApplication.QuestionTypes:MultipleChoice:MultipleChoice"><apiName>MultipleChoice</apiName><shortdesc>
		 constructor, calls superclass.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>_source</apiItemName><apiType value="XMLList"/></apiParam><apiParam><apiItemName>scripturl</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>relativeUrl</apiItemName><apiType value="String"/></apiParam></apiConstructorDef><apiDesc>
		 constructor, calls superclass.
		 
		 </apiDesc></apiConstructorDetail><related-links><link href="ItemApplication.QuestionTypes.xml#QuestionsObject"><linktext>QuestionsObject</linktext></link></related-links></apiConstructor></apiClassifier></apiPackage><apiPackage id="ItemApplication"><apiName>ItemApplication</apiName><apiClassifier id="ItemApplication:ItemEvent"><apiName>ItemEvent</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="ItemApplication:ItemEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="ItemApplication:ItemEvent:ItemEvent"><apiName>ItemEvent</apiName><shortdesc>
		 constructor, calls superclass.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>type the name of the event type, see the event constants
		 
		 </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>bubbles on or off
		 </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>cancelable on or off
		 </apiDesc></apiParam><apiParam><apiItemName>_dataObject</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>the dataobject containing the finished item xml, ready to get sent to the server
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 constructor, calls superclass.
		 
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="ItemApplication:ItemObject"><apiName>ItemObject</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>Interfaces:ICustomModule</apiBaseInterface><apiBaseInterface>Interfaces:ICustomEventDispatcher</apiBaseInterface><apiBaseClassifier>Shared:EventDispatcher</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="ItemApplication:ItemObject:alertXMLError"><apiName>alertXMLError</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="ItemApplication:ItemObject:getClassDefinition"><apiName>getClassDefinition</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="ItemApplication:ItemObject:load"><apiName>load</apiName><shortdesc>
		 Like in the most Classes, this class has a load method seperated from the constructor to ensure a successfull event listener setup.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>_globals</apiItemName><apiOperationClassifier>Model:Globals</apiOperationClassifier></apiParam><apiParam><apiItemName>_tcollection</apiItemName><apiOperationClassifier>Model:TestCollection</apiOperationClassifier></apiParam><apiParam><apiItemName>_session</apiItemName><apiOperationClassifier>Model:Session</apiOperationClassifier></apiParam></apiOperationDef><apiDesc>
		 Like in the most Classes, this class has a load method seperated from the constructor to ensure a successfull event listener setup.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="ItemApplication:ItemObject:returnLoadFinishedEvent"><apiName>returnLoadFinishedEvent</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="ItemApplication:ItemObject:returnModuleFinishedEvent"><apiName>returnModuleFinishedEvent</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="ItemApplication:ItemObject:returnView"><apiName>returnView</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Object"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="ItemApplication:ItemObject:sendTweenFinished"><apiName>sendTweenFinished</apiName><shortdesc>
		 tells the class, that the screen is tweened
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 tells the class, that the screen is tweened
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="ItemApplication:ItemObject:set_value"><apiName>set_value</apiName><shortdesc>
		 Old, not used.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="XMLList"/></apiReturn><apiParam><apiItemName>_node</apiItemName><apiType value="XMLList"/></apiParam><apiParam><apiItemName>_value</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc>
		 Old, not used.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="ItemApplication:ItemObject:unload"><apiName>unload</apiName><shortdesc>
		 removes all eventlisteners from all stored objects and sets them to null
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 removes all eventlisteners from all stored objects and sets them to null
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="ItemApplication:ItemObject:updateSeconds"><apiName>updateSeconds</apiName><shortdesc>
		 Timer for simulating a realtime clock to ensure correct timeStamp entries.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:TimerEvent"/></apiParam></apiOperationDef><apiDesc>
		 Timer for simulating a realtime clock to ensure correct timeStamp entries.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="ItemApplication.timeStamp.xml"><linktext>timeStamp</linktext></link></related-links></apiOperation><apiConstructor id="ItemApplication:ItemObject:ItemObject"><apiName>ItemObject</apiName><shortdesc>
		 Constructor, will only be used by first instantiation.bla
		 
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>relative_url</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>the relative path to the applications root directory on the server
		 </apiDesc></apiParam><apiParam><apiItemName>item_ID</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>alias for itemnumber -&gt; combined  with relative_url will result in path to item data
		 </apiDesc></apiParam><apiParam><apiItemName>_userNumber</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>user number for writing in user folder and xml
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 Constructor, will only be used by first instantiation.<codeph>bla</codeph>
		 
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="ItemApplication:xmlLoader"><apiName>xmlLoader</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>flash.events:IEventDispatcher</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="ItemApplication:xmlLoader:addEventListener"><apiName>addEventListener</apiName><shortdesc>
 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam><apiParam><apiItemName>priority</apiItemName><apiType value="int"/><apiData>0</apiData></apiParam><apiParam><apiItemName>weakRef</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiOperationDef><apiDesc>
 </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="ItemApplication:xmlLoader:dispatchEvent"><apiName>dispatchEvent</apiName><shortdesc>
 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/></apiParam></apiOperationDef><apiDesc>
 </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="ItemApplication:xmlLoader:hasEventListener"><apiName>hasEventListener</apiName><shortdesc>
 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc>
 </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="ItemApplication:xmlLoader:isPreScreen"><apiName>isPreScreen</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="ItemApplication:xmlLoader:removeEventListener"><apiName>removeEventListener</apiName><shortdesc>
 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiOperationDef><apiDesc>
 </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="ItemApplication:xmlLoader:willTrigger"><apiName>willTrigger</apiName><shortdesc>
 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc>
 </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiConstructor id="ItemApplication:xmlLoader:xmlLoader"><apiName>xmlLoader</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>url</apiItemName><apiType value="String"/></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage><apiPackage id="MainApplication"><apiName>MainApplication</apiName><apiClassifier id="MainApplication:OverviewObject"><apiName>OverviewObject</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>Interfaces:ICustomModule</apiBaseInterface><apiBaseInterface>Interfaces:ICustomEventDispatcher</apiBaseInterface><apiBaseClassifier>Shared:EventDispatcher</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="MainApplication:OverviewObject:getClassDefinition"><apiName>getClassDefinition</apiName><shortdesc>
		 returns the package and calass name as a string to allow search within the loader management
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 returns the package and calass name as a string to allow search within the loader management
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="MainApplication:OverviewObject:load"><apiName>load</apiName><shortdesc>
		 loads path urls and labels from globals.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>_globals</apiItemName><apiOperationClassifier>Model:Globals</apiOperationClassifier><apiDesc>reference to the globals lib
		 </apiDesc></apiParam><apiParam><apiItemName>_tcollection</apiItemName><apiOperationClassifier>Model:TestCollection</apiOperationClassifier><apiDesc>reference to the testcollection lib
		 </apiDesc></apiParam><apiParam><apiItemName>_session</apiItemName><apiOperationClassifier>Model:Session</apiOperationClassifier><apiDesc>reference to the session lib, not used in this class
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 loads path urls and labels from globals. Makes a reference to testcollection, because we need this later for session building.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="MainApplication:OverviewObject:returnLoadFinishedEvent"><apiName>returnLoadFinishedEvent</apiName><shortdesc>
		 allows adding event listeners because get function will not work for constants
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 allows adding event listeners because get function will not work for constants
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="MainApplication:OverviewObject:returnModuleFinishedEvent"><apiName>returnModuleFinishedEvent</apiName><shortdesc>
		 allows adding event listeners because get function will not work for constants
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 allows adding event listeners because get function will not work for constants
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="MainApplication:OverviewObject:returnView"><apiName>returnView</apiName><shortdesc>
		 Returns a reference to the view component.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Object"/></apiReturn></apiOperationDef><apiDesc>
		 Returns a reference to the view component.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="MainApplication:OverviewObject:sendTweenFinished"><apiName>sendTweenFinished</apiName><shortdesc>
		 not used in this class
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 not used in this class
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="MainApplication:OverviewObject:unload"><apiName>unload</apiName><shortdesc>
		 cleanup event listeners and references 
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 cleanup event listeners and references 
		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="MainApplication:OverviewObject:OverviewObject"><apiName>OverviewObject</apiName><shortdesc>
		 constructor, initializes view component.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 constructor, initializes view component.
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="MainApplication:StartAppObject"><apiName>StartAppObject</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>Interfaces:ICustomModule</apiBaseInterface><apiBaseInterface>Interfaces:ICustomEventDispatcher</apiBaseInterface><apiBaseClassifier>Shared:EventDispatcher</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="MainApplication:StartAppObject:getClassDefinition"><apiName>getClassDefinition</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="MainApplication:StartAppObject:load"><apiName>load</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>_globals</apiItemName><apiOperationClassifier>Model:Globals</apiOperationClassifier></apiParam><apiParam><apiItemName>_tcollection</apiItemName><apiOperationClassifier>Model:TestCollection</apiOperationClassifier></apiParam><apiParam><apiItemName>_session</apiItemName><apiOperationClassifier>Model:Session</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="MainApplication:StartAppObject:returnLoadFinishedEvent"><apiName>returnLoadFinishedEvent</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="MainApplication:StartAppObject:returnModuleFinishedEvent"><apiName>returnModuleFinishedEvent</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="MainApplication:StartAppObject:returnView"><apiName>returnView</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Object"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="MainApplication:StartAppObject:sendTweenFinished"><apiName>sendTweenFinished</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="MainApplication:StartAppObject:unload"><apiName>unload</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="MainApplication:StartAppObject:StartAppObject"><apiName>StartAppObject</apiName><shortdesc>
		 Constructor
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 Constructor
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="MainApplication:MainAppManager"><apiName>MainAppManager</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="MainApplication:MainAppManager:getView"><apiName>getView</apiName><shortdesc>
		 Returns a reference to the view component, owned by the current module instance.</shortdesc><prolog><author>Jan Küster
		 
		 </author></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Object"/><apiDesc>Object view object, usually a group based mxml component
		 </apiDesc></apiReturn></apiOperationDef><apiDesc>
		 Returns a reference to the view component, owned by the current module instance.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="MainApplication:MainAppManager:sendTweenComplete"><apiName>sendTweenComplete</apiName><shortdesc>
		 Sends to the module instance, that the display tween is finished.</shortdesc><prolog><author>
		 </author></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Sends to the module instance, that the display tween is finished. This ensures a delay of starting animations or scripts until the new screen is visible.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="MainApplication:MainAppManager:MainAppManager"><apiName>MainAppManager</apiName><shortdesc>
		 Constructor, no parameters.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 Constructor, no parameters.
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="MainApplication:TestFinishedObject"><apiName>TestFinishedObject</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>Interfaces:ICustomModule</apiBaseInterface><apiBaseInterface>Interfaces:ICustomEventDispatcher</apiBaseInterface><apiBaseClassifier>Shared:EventDispatcher</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="MainApplication:TestFinishedObject:getClassDefinition"><apiName>getClassDefinition</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="MainApplication:TestFinishedObject:load"><apiName>load</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>_globals</apiItemName><apiOperationClassifier>Model:Globals</apiOperationClassifier></apiParam><apiParam><apiItemName>_tcollection</apiItemName><apiOperationClassifier>Model:TestCollection</apiOperationClassifier></apiParam><apiParam><apiItemName>_session</apiItemName><apiOperationClassifier>Model:Session</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="MainApplication:TestFinishedObject:returnLoadFinishedEvent"><apiName>returnLoadFinishedEvent</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="MainApplication:TestFinishedObject:returnModuleFinishedEvent"><apiName>returnModuleFinishedEvent</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="MainApplication:TestFinishedObject:returnView"><apiName>returnView</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Object"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="MainApplication:TestFinishedObject:sendTweenFinished"><apiName>sendTweenFinished</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="MainApplication:TestFinishedObject:unload"><apiName>unload</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="MainApplication:TestFinishedObject:TestFinishedObject"><apiName>TestFinishedObject</apiName><shortdesc>
		 empty constructor
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 empty constructor
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="MainApplication:DisplayManager"><apiName>DisplayManager</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.components:BorderContainer</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="MainApplication:DisplayManager:removeContent"><apiName>removeContent</apiName><shortdesc>
		 clears the screen.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 clears the screen.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="MainApplication:DisplayManager:setContent"><apiName>setContent</apiName><shortdesc>
		 Links the Displaymanager with the viewcomponent of the actual module.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>ob</apiItemName><apiType value="Object"/><apiDesc>an object reference to the actual module
		 </apiDesc></apiParam><apiParam><apiItemName>_title</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>defined, wether the tween is the title screen or a normal alpha tween
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Links the Displaymanager with the viewcomponent of the actual module.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="MainApplication.layer.xml"><linktext>the image which will be faded to alpha 0</linktext></link><link href="MainApplication.xml#DisplayManager/showDisplay()"><linktext>the tween animation</linktext></link></related-links></apiOperation><apiConstructor id="MainApplication:DisplayManager:DisplayManager"><apiName>DisplayManager</apiName><shortdesc>
		 Constructor, no args.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 Constructor, no args. Set the default size of the wrapper.
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="MainApplication:LoginObject"><apiName>LoginObject</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>Interfaces:ICustomModule</apiBaseInterface><apiBaseInterface>Interfaces:ICustomEventDispatcher</apiBaseInterface><apiBaseClassifier>Shared:EventDispatcher</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="MainApplication:LoginObject:getClassDefinition"><apiName>getClassDefinition</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="MainApplication:LoginObject:load"><apiName>load</apiName><shortdesc>
		 Extracts the urls and paths from the globals model and prepares the http service for server request.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>_globals</apiItemName><apiOperationClassifier>Model:Globals</apiOperationClassifier><apiDesc>the global settings lib object, storing all labels and paths for the application
		 </apiDesc></apiParam><apiParam><apiItemName>_tcollection</apiItemName><apiOperationClassifier>Model:TestCollection</apiOperationClassifier><apiDesc>the testcollection lib object, not used in this class
		 </apiDesc></apiParam><apiParam><apiItemName>_session</apiItemName><apiOperationClassifier>Model:Session</apiOperationClassifier><apiDesc>the session lib object, not used in this class
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Extracts the urls and paths from the globals model and prepares the http service for server request.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="MainApplication:LoginObject:requestData"><apiName>requestData</apiName><shortdesc>
		 This method starts the http request.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 This method starts the http request.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="MainApplication:LoginObject:returnLoadFinishedEvent"><apiName>returnLoadFinishedEvent</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="MainApplication:LoginObject:returnModuleFinishedEvent"><apiName>returnModuleFinishedEvent</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="MainApplication:LoginObject:returnUserData"><apiName>returnUserData</apiName><shortdesc>
		 For other objects, to retrieve userdata url.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 For other objects, to retrieve userdata url.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="MainApplication:LoginObject:returnView"><apiName>returnView</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Object"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="MainApplication:LoginObject:sendTweenFinished"><apiName>sendTweenFinished</apiName><shortdesc>
		 not required in this class
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 not required in this class
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="MainApplication:LoginObject:unload"><apiName>unload</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="MainApplication:LoginObject:LoginObject"><apiName>LoginObject</apiName><shortdesc>
		 constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 constructor. No variables will be pased. Initializes view component.
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="MainApplication:LoaderManagement"><apiName>LoaderManagement</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="MainApplication:LoaderManagement:getNext2Load"><apiName>getNext2Load</apiName><shortdesc>
		 Iterates a sequence of module class names and tries to find matches.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="String"/><apiDesc>Returns a String-Name of the Class definition, which makes the module accessable via getClassByDefinition.
		 
		 </apiDesc></apiReturn><apiParam><apiItemName>moduleName</apiItemName><apiType value="String"/><apiDesc>the name of the current module to match with the sequence
		 </apiDesc></apiParam><apiParam><apiItemName>nextItem</apiItemName><apiType value="String"/><apiDesc>is a parameter which indeicated, that there is still an item in the load queue
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Iterates a sequence of module class names and tries to find matches.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="MainApplication:LoaderManagement:LoaderManagement"><apiName>LoaderManagement</apiName><shortdesc>
		 constructor is empty
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 constructor is empty
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage><apiPackage id="Model"><apiName>Model</apiName><apiClassifier id="Model:Collection"><apiName>Collection</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="Model:Collection:addItems"><apiName>addItems</apiName><shortdesc>
		 adds an xmllist of items and excerps the itemnumbers.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>_items</apiItemName><apiType value="XMLList"/></apiParam></apiOperationDef><apiDesc>
		 adds an xmllist of items and excerps the itemnumbers. Stored in a common array.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="Model:Collection:getDescription"><apiName>getDescription</apiName><shortdesc>
		 returns the description text of this collection
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 returns the description text of this collection
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="Model:Collection:getName"><apiName>getName</apiName><shortdesc>
		 returns the level of the collection
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 returns the level of the collection
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="Model:Collection:getSound"><apiName>getSound</apiName><shortdesc>
		 reutrns the soundurl of this collection
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 reutrns the soundurl of this collection
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="Model:Collection:returnItemAt"><apiName>returnItemAt</apiName><shortdesc>
		 reuturns an itemnumber at a specific index.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc>
		 reuturns an itemnumber at a specific index. Usefull if you desire the nth-item of the collection.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="Model:Collection:returnItems"><apiName>returnItems</apiName><shortdesc>
		 returns the array of items
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Array"/></apiReturn></apiOperationDef><apiDesc>
		 returns the array of items
		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="Model:Collection:Collection"><apiName>Collection</apiName><shortdesc>
		 Constructor.</shortdesc><prolog><asCustoms><soundurl>url to the sound file, related with the description text
		 </soundurl></asCustoms></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>_name</apiItemName><apiType value="String"/><apiDesc>the name of the difficulty level
		 </apiDesc></apiParam><apiParam><apiItemName>des</apiItemName><apiType value="String"/><apiDesc>description of this collection and level
		 </apiDesc></apiParam><apiParam><apiItemName>soundurl</apiItemName><apiType value="String"/></apiParam></apiConstructorDef><apiDesc>
		 Constructor.
		 
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="Model:Session"><apiName>Session</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>Interfaces:ICustomEventDispatcher</apiBaseInterface><apiBaseClassifier>Shared:EventDispatcher</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="Model:Session:updateSession"><apiName>updateSession</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>currentDimension</apiItemName><apiType value="int"/></apiParam><apiParam><apiItemName>currentLevel</apiItemName><apiType value="int"/></apiParam><apiParam><apiItemName>currentItem</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="Model:Session:Session"><apiName>Session</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="Model:TestCollection"><apiName>TestCollection</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>Interfaces:ICustomEventDispatcher</apiBaseInterface><apiBaseClassifier>Shared:EventDispatcher</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="Model:TestCollection:getALLDimensions"><apiName>getALLDimensions</apiName><shortdesc>
		 Returns a reference to the data.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="XMLList"/><apiDesc>XMLList the testcollection data as an XMLList
		 </apiDesc></apiReturn></apiOperationDef><apiDesc>
		 Returns a reference to the data.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="Model:TestCollection:getDimensionAt"><apiName>getDimensionAt</apiName><shortdesc>
		 Returns a specific Dimension with all its related levels and items.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>Model:Dimension</apiOperationClassifier><apiDesc>if found it returns the appropiate dimension as a Dimension object, if not it returns an empty Dimension object dummy.
		 </apiDesc></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>the number of one of the four possible dimensions. See your testcollection xml to determine which number represents which dimension.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns a specific Dimension with all its related levels and items.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="Model.xml#Dimension"><linktext>Dimension</linktext></link></related-links></apiOperation><apiOperation id="Model:TestCollection:getDimensionByName"><apiName>getDimensionByName</apiName><shortdesc>
		 Returns a specific Dimension with all its related levels and items, determined by its name.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>Model:Dimension</apiOperationClassifier><apiDesc>if found it returns the appropiate dimension as a Dimension object, if not it returns an empty Dimension object dummy.
		 </apiDesc></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>the name of one of the four possible dimensions.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns a specific Dimension with all its related levels and items, determined by its name.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="Model.xml#Dimension"><linktext>Dimension</linktext></link></related-links></apiOperation><apiOperation id="Model:TestCollection:getDimensionName"><apiName>getDimensionName</apiName><shortdesc>
		 Returns the name of a dimension at a given index.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/><apiDesc>String the name of the dimension as a String value
		 </apiDesc></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>the specific index of a dimension, ranges within <codeph>[0..3]</codeph>
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns the name of a dimension at a given index.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="Model:TestCollection:getLevelName"><apiName>getLevelName</apiName><shortdesc>
		 Returns the name of a level at a given index.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/><apiDesc>String the name of the level as a String value
		 </apiDesc></apiReturn><apiParam><apiItemName>dindex</apiItemName><apiType value="int"/><apiDesc>the specific index of a dimension, ranges within the amount of levels
		 </apiDesc></apiParam><apiParam><apiItemName>lindex</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc>
		 Returns the name of a level at a given index.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="Model:TestCollection:searchNextItem"><apiName>searchNextItem</apiName><shortdesc>
		 Tries to find the item number of the follwer item.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/><apiDesc>String if found, the next item id as a String, else null
		 
		 </apiDesc></apiReturn><apiParam><apiItemName>currentDimension</apiItemName><apiType value="int"/><apiDesc>the current dimension, usually stored in a session object or sent by a custommodule event
		 </apiDesc></apiParam><apiParam><apiItemName>currentLevel</apiItemName><apiType value="int"/><apiDesc>	the current level, usually stored in a session object or sent by a custommodule event
		 </apiDesc></apiParam><apiParam><apiItemName>currentItem</apiItemName><apiType value="String"/><apiDesc>	the current item, usually stored in a session object or sent by a custommodule event
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Tries to find the item number of the follwer item. If nothing is found, the actual item was the last one within the current level.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="Shared.xml#CustomModuleEvents"><linktext>Shared.CustomModuleEvents</linktext></link><link href="Model.xml#Session"><linktext>Session</linktext></link></related-links></apiOperation><apiConstructor id="Model:TestCollection:TestCollection"><apiName>TestCollection</apiName><shortdesc>
		 constructor, immediately initializes http service and loads the testcollection from the related Url
		 
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>_relUrl</apiItemName><apiType value="String"/><apiDesc>the relative path to the xml file on the server, will be combined with the url String
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 constructor, immediately initializes http service and loads the testcollection from the related Url
		 
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="Model:UserObject"><apiName>UserObject</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Shared:EventDispatcher</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="Model:UserObject:load"><apiName>load</apiName><shortdesc>
		 First adds variables to the URLLoader to define the parameter for the include script and the Post variable userid then starts the request.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 First adds variables to the URLLoader to define the parameter for the include script and the Post variable userid then starts the request.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="Model:UserObject:setDebug"><apiName>setDebug</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>value</apiItemName><apiType value="Boolean"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="Model:UserObject:startSession"><apiName>startSession</apiName><shortdesc>
		 Constructs a new entry for the actual Dimension and level, chosen by the user into.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>itemList</apiItemName><apiType value="Array"/><apiDesc>An array of all item names within the chosen dimension and level
		 </apiDesc></apiParam><apiParam><apiItemName>dimension</apiItemName><apiType value="String"/><apiDesc>the chosen dimension or sometimes called subject
		 </apiDesc></apiParam><apiParam><apiItemName>level</apiItemName><apiType value="String"/><apiDesc>the level of difficulty
		 </apiDesc></apiParam><apiParam><apiItemName>scriptUrl</apiItemName><apiType value="String"/><apiDesc>the directlink to the php script, which will handle the data
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Constructs a new entry for the actual Dimension and level, chosen by the user into. Calls the private <codeph>updateUserXML(scriptUrl)</codeph> function, 
		 to send the updated xml to php.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="Model.xml#UserObject/updateUserXML()"><linktext>updateUserXML()</linktext></link></related-links></apiOperation><apiOperation id="Model:UserObject:updateSession"><apiName>updateSession</apiName><shortdesc>
		 Updates a session by adding an entry at the data attribute of the item tag.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>timestamp</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>finalXml</apiItemName><apiType value="XML"/></apiParam><apiParam><apiItemName>scriptUrl</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc>
		 Updates a session by adding an entry at the data attribute of the item tag. (After item was completed) The entry consists of the
		 userName, the timestamp and the itemnumber and the ending <codeph>.xml</codeph>. 
		 <p>This sequence will also be the name of the immediate path to the completed item xml file, which usually will be placed in the same directory as the user xml file</p>
		 <p>Calls the private function   <codeph>updateUserXML(scriptUrl)</codeph> to send the data to the server.</p>
		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="Model:UserObject:UserObject"><apiName>UserObject</apiName><shortdesc>
		 Constructor, initializes the URLLoader but does not call its load() function.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>scriptUrl</apiItemName><apiType value="String"/><apiDesc>the include script (php) on the server
		 </apiDesc></apiParam><apiParam><apiItemName>_id</apiItemName><apiType value="String"/><apiDesc>the user id from the login
		 </apiDesc></apiParam><apiParam><apiItemName>navigate2url</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>for debugging purposes, opens the navigated url in a new tab or window to enable a view of php echos or error messages
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 Constructor, initializes the <codeph>URLLoader</codeph> but does not call its <codeph>load()</codeph> function.
		 
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="Model:Dimension"><apiName>Dimension</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="Model:Dimension:addCollectionToList"><apiName>addCollectionToList</apiName><shortdesc>
		 adds a collection object to the collection list.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>c</apiItemName><apiOperationClassifier>Model:Collection</apiOperationClassifier></apiParam></apiOperationDef><apiDesc>
		 adds a collection object to the collection list. useful if once the collection is created out of an xmllist.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="Model:Dimension:addToCollectionList"><apiName>addToCollectionList</apiName><shortdesc>
		 adds an xmllist to the collection list.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>e</apiItemName><apiType value="XMLList"/></apiParam></apiOperationDef><apiDesc>
		 adds an xmllist to the collection list. usually a collection is stored as an xml file, so it can be decoded by itering an xmllis.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="Model:Dimension:getDescription"><apiName>getDescription</apiName><shortdesc>
		 returns the description of this dimension
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 returns the description of this dimension
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="Model:Dimension:getName"><apiName>getName</apiName><shortdesc>
		 returns the name of this dimension 
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 returns the name of this dimension 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="Model:Dimension:getSoundUrl"><apiName>getSoundUrl</apiName><shortdesc>
		 returns the soundurl of this dimension
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 returns the soundurl of this dimension
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="Model:Dimension:returnCollectionAt"><apiName>returnCollectionAt</apiName><shortdesc>
		 returns a specific collection by passing an index number as parameter.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>Model:Collection</apiOperationClassifier><apiDesc>Collection Object (level)
		 </apiDesc></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>the index of the desired collection
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 returns a specific collection by passing an index number as parameter.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="Model:Dimension:returnCollection"><apiName>returnCollection</apiName><shortdesc>
		 returns the entire collectionList as an array
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Array"/></apiReturn></apiOperationDef><apiDesc>
		 returns the entire collectionList as an array
		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="Model:Dimension:Dimension"><apiName>Dimension</apiName><shortdesc>
		 Constructor
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>_name</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>des</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>url</apiItemName><apiType value="String"/></apiParam></apiConstructorDef><apiDesc>
		 Constructor
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="Model:Globals"><apiName>Globals</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>Interfaces:ICustomEventDispatcher</apiBaseInterface><apiBaseClassifier>Shared:EventDispatcher</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="Model:Globals:returnLabelValue"><apiName>returnLabelValue</apiName><shortdesc>
		 returns a specific label by comparing the id of the path.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn><apiParam><apiItemName>id</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc>
		 returns a specific label by comparing the id of the path.
		 Usually it will ba an UrlTypeEnum but it can also be any string.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="enumTypes.UrlTypeEnums.xml"><linktext>enumTypes.UrlTypeEnums</linktext></link></related-links></apiOperation><apiOperation id="Model:Globals:returnPathValue"><apiName>returnPathValue</apiName><shortdesc>
		 returns a specific path by comparing the id of the path.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn><apiParam><apiItemName>id</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc>
		 returns a specific path by comparing the id of the path.
		 Usually it will ba an UrlTypeEnum but it can also be any string.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="enumTypes.UrlTypeEnums.xml"><linktext>enumTypes.UrlTypeEnums</linktext></link></related-links></apiOperation><apiConstructor id="Model:Globals:Globals"><apiName>Globals</apiName><shortdesc>
		 Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 Constructor. Http Service will be set up.
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage><apiPackage id="Shared"><apiName>Shared</apiName><apiClassifier id="Shared:UserEvent"><apiName>UserEvent</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="Shared:UserEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="Shared:UserEvent:UserEvent"><apiName>UserEvent</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/></apiParam><apiParam><apiItemName>_subject</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam><apiParam><apiItemName>_level</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam><apiParam><apiItemName>_user</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="Shared:XMLWriter"><apiName>XMLWriter</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="Shared:XMLWriter:send_httpReq"><apiName>send_httpReq</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="Shared:XMLWriter:send_urlReq"><apiName>send_urlReq</apiName><shortdesc>
		 In this method, a variables object willl be created to store all data in one object.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 In this method, a variables object willl be created to store all data in one object. In php you will be able to refer to it, by 
		 accessing the <codeph>§_POST['variables.something']</codeph> array. Depending on the param variable, different scripts will be loaded.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="Shared:XMLWriter:XMLWriter"><apiName>XMLWriter</apiName><shortdesc>
		 Constructor with presettings of parameters.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>_relUrl</apiItemName><apiType value="String"/><apiDesc>The complete item XML File (required, cannot be null)
		 </apiDesc></apiParam><apiParam><apiItemName>_xml</apiItemName><apiType value="XML"/><apiDesc>The timestamp, given by the itemObject 
		 </apiDesc></apiParam><apiParam><apiItemName>_date</apiItemName><apiType value="String"/><apiData/><apiDesc>the complete Document name to be written 
		 </apiDesc></apiParam><apiParam><apiItemName>_name</apiItemName><apiType value="String"/><apiData/><apiDesc>the user name / iD (default ID is test)
		 </apiDesc></apiParam><apiParam><apiItemName>_user</apiItemName><apiType value="String"/><apiData>test</apiData><apiDesc>there are different types of php scripts, whhich can be requested, the parameter indicates which specific script will be called.
		 
		 </apiDesc></apiParam><apiParam><apiItemName>_param</apiItemName><apiType value="Number"/><apiData>0</apiData></apiParam></apiConstructorDef><apiDesc>
		 Constructor with presettings of parameters. The parameters representing the values which are required to make PHP write a new XML document with the correct information.
		 
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="Shared:MP3Audio"><apiName>MP3Audio</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>Interfaces:ICustomEventDispatcher</apiBaseInterface><apiBaseClassifier>Shared:EventDispatcher</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="Shared:MP3Audio:pause"><apiName>pause</apiName><shortdesc>
		 manually pauses the sound object.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 manually pauses the sound object.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="Shared:MP3Audio:playAudio"><apiName>playAudio</apiName><shortdesc>
		 opens the soundchannel and adds the playing soundobject to it.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 opens the soundchannel and adds the playing soundobject to it. enabled to autodetect, when the soundobject finished playing. isPlaying will be set to true.
		 Does nothing if the sound object is null. This can happen for example if the unload method was called external or internal when an error occured.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="Shared.xml#MP3Audio/returnIsPlaying()"><linktext>returnIsPlaying()</linktext></link></related-links></apiOperation><apiOperation id="Shared:MP3Audio:returnIsPlaying"><apiName>returnIsPlaying</apiName><shortdesc>
		 return if the underlying sound object is in playing state
		 
		 </shortdesc><prolog><asCustoms><returns>Boolean isPlaying true if playing false if not
		 </returns></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
		 return if the underlying sound object is in playing state
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="Shared:MP3Audio:returnProgress"><apiName>returnProgress</apiName><shortdesc>
		 returns a progress value for external objects to access the loading state of the sound object
		 
		 </shortdesc><prolog><asCustoms><returns>Number a percent value as a number
		 </returns></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Number"/></apiReturn></apiOperationDef><apiDesc>
		 returns a progress value for external objects to access the loading state of the sound object
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="Shared:MP3Audio:setDebug"><apiName>setDebug</apiName><shortdesc>
		 lets an external class set this state to debugMode, allows to show alert boxes on screen
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 lets an external class set this state to debugMode, allows to show alert boxes on screen
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="Shared:MP3Audio:stop"><apiName>stop</apiName><shortdesc>
		 stops a sound.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 stops a sound.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="Shared:MP3Audio:unload"><apiName>unload</apiName><shortdesc>
		 unloads soundObject related events and the object itself.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 unloads soundObject related events and the object itself.
		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="Shared:MP3Audio:MP3Audio"><apiName>MP3Audio</apiName><shortdesc>
		 Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>_scriptUrl</apiItemName><apiType value="String"/><apiDesc>the path to the include script on the server
		 </apiDesc></apiParam><apiParam><apiItemName>relPath</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	the relative path to the mp3 object
		 </apiDesc></apiParam><apiParam><apiItemName>id</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>		allows to set an id for accessing objects at runtime
		 </apiDesc></apiParam><apiParam><apiItemName>navigate</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>for debug purposes, navigates to url of the include script
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 Constructor. Requires an url to load an mp3 from an external source. events will be auto-build.
		 
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="Shared:ErrorDispatcher"><apiName>ErrorDispatcher</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="Shared:ErrorDispatcher:processNewError"><apiName>processNewError</apiName><shortdesc>
		 creates an sends a new error message by combining the parameters and adding a timestamp.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>error</apiItemName><apiType value="String"/><apiDesc>custom number of error type
		 </apiDesc></apiParam><apiParam><apiItemName>description</apiItemName><apiType value="String"/><apiDesc>custom description of error type
		 </apiDesc></apiParam><apiParam><apiItemName>flashErrorId</apiItemName><apiType value="String"/><apiDesc>original falsh error id
		 </apiDesc></apiParam><apiParam><apiItemName>causedBy</apiItemName><apiType value="String"/><apiDesc>the source of the error
		 </apiDesc></apiParam><apiParam><apiItemName>line</apiItemName><apiType value="String"/><apiDesc>the module and if important also the line (line is usually useless, due to continual development)
		 </apiDesc></apiParam><apiParam><apiItemName>scriptUrl</apiItemName><apiType value="String"/><apiDesc>the url to the php script
		 </apiDesc></apiParam><apiParam><apiItemName>navigate</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>for debugging, shows the target url
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 creates an sends a new error message by combining the parameters and adding a timestamp. Then a urlloader will be created to request the specific php script which will write the message into a log file.
		 
		 </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="Shared:HorizontalMultilineLayout"><apiName>HorizontalMultilineLayout</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.layouts.supportClasses:LayoutBase</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="Shared:HorizontalMultilineLayout:measure"><apiName>measure</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="Shared:HorizontalMultilineLayout:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>width</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="Shared:CustomImage"><apiName>CustomImage</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>Interfaces:ICustomEventDispatcher</apiBaseInterface><apiBaseClassifier>mx.controls:Image</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="Shared:CustomImage:addEventListener"><apiName>addEventListener</apiName><shortdesc>
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam><apiParam><apiItemName>priority</apiItemName><apiType value="int"/><apiData>0</apiData></apiParam><apiParam><apiItemName>useWeakReference</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiOperationDef><apiDesc>
		 </apiDesc></apiOperationDetail><related-links><link href="Shared.xml#EventDispatcher"><linktext>Shared.EventDispatcher</linktext></link></related-links></apiOperation><apiOperation id="Shared:CustomImage:hasAtLeastOneListener"><apiName>hasAtLeastOneListener</apiName><shortdesc>
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
		 </apiDesc></apiOperationDetail><related-links><link href="Shared.xml#EventDispatcher"><linktext>Shared.EventDispatcher</linktext></link></related-links></apiOperation><apiOperation id="Shared:CustomImage:removeAllEventListeners"><apiName>removeAllEventListeners</apiName><shortdesc>
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiData/></apiParam></apiOperationDef><apiDesc>
		 </apiDesc></apiOperationDetail><related-links><link href="Shared.xml#EventDispatcher"><linktext>Shared.EventDispatcher</linktext></link></related-links></apiOperation><apiOperation id="Shared:CustomImage:removeEventListener"><apiName>removeEventListener</apiName><shortdesc>
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiOperationDef><apiDesc>
		 </apiDesc></apiOperationDetail><related-links><link href="Shared.xml#EventDispatcher"><linktext>Shared.EventDispatcher</linktext></link></related-links></apiOperation><apiOperation id="Shared:CustomImage:setDebug"><apiName>setDebug</apiName><shortdesc>
		 sets the debug value to the desired value true or fals
		 
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>value</apiItemName><apiType value="Boolean"/><apiDesc>the new value for the components debugmode
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 sets the debug value to the desired value true or fals
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="Shared:CustomImage:CustomImage"><apiName>CustomImage</apiName><shortdesc>
 			Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>scriptUrl</apiItemName><apiType value="String"/><apiDesc>the url to the script which loads the image
		 </apiDesc></apiParam><apiParam><apiItemName>relPath</apiItemName><apiType value="String"/><apiDesc>	the path parameter passed to the url via POST
		 </apiDesc></apiParam><apiParam><apiItemName>navigate</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>for debugging purposes, navigates to the url of the script
 		</apiDesc></apiParam></apiConstructorDef><apiDesc>
 			Constructor. Requires an url and a relative path to the image file. Will automatically loads the image as a base64 string and decodes it to an image source.
		
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="Shared:CustomButton"><apiName>CustomButton</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>Interfaces:ICustomEventDispatcher</apiBaseInterface><apiBaseInterface>Interfaces:IClickableComponent</apiBaseInterface><apiBaseClassifier>spark.components:Button</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="Shared:CustomButton:addEventListener"><apiName>addEventListener</apiName><shortdesc>
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam><apiParam><apiItemName>priority</apiItemName><apiType value="int"/><apiData>0</apiData></apiParam><apiParam><apiItemName>useWeakReference</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiOperationDef><apiDesc>
		 </apiDesc></apiOperationDetail><related-links><link href="Shared.xml#EventDispatcher"><linktext>Shared.EventDispatcher</linktext></link></related-links></apiOperation><apiOperation id="Shared:CustomButton:hasAtLeastOneListener"><apiName>hasAtLeastOneListener</apiName><shortdesc>
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
		 </apiDesc></apiOperationDetail><related-links><link href="Shared.xml#EventDispatcher"><linktext>Shared.EventDispatcher</linktext></link></related-links></apiOperation><apiOperation id="Shared:CustomButton:removeAllEventListeners"><apiName>removeAllEventListeners</apiName><shortdesc>
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiData/></apiParam></apiOperationDef><apiDesc>
		 </apiDesc></apiOperationDetail><related-links><link href="Shared.xml#EventDispatcher"><linktext>Shared.EventDispatcher</linktext></link></related-links></apiOperation><apiOperation id="Shared:CustomButton:removeEventListener"><apiName>removeEventListener</apiName><shortdesc>
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiOperationDef><apiDesc>
		 </apiDesc></apiOperationDetail><related-links><link href="Shared.xml#EventDispatcher"><linktext>Shared.EventDispatcher</linktext></link></related-links></apiOperation><apiConstructor id="Shared:CustomButton:CustomButton"><apiName>CustomButton</apiName><shortdesc>
		 empty constructor
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 empty constructor
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="Shared:StaticFunctions"><apiName>StaticFunctions</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Shared:EventDispatcher</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="Shared:StaticFunctions:check_exists"><apiName>check_exists</apiName><shortdesc>
		 Function for Debugging
		 
		 </shortdesc><prolog><asCustoms><returns>A boolean value <code>true</code> if object exists.
		 </returns></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>x</apiItemName><apiType value="Object"/><apiDesc>Can be any object, class whatever, important: Classpath needed!
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Function for Debugging
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="Shared:StaticFunctions:convertToString"><apiName>convertToString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="String"/></apiReturn><apiParam><apiItemName>obj</apiItemName><apiType value="Object"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="Shared:StaticFunctions:fadeOutSound"><apiName>fadeOutSound</apiName><shortdesc>
		 Provides a smooth fade out for all now-running sound files.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Provides a smooth fade out for all now-running sound files.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="Shared:StaticFunctions:getDropSh"><apiName>getDropSh</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="flash.filters:DropShadowFilter"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="Shared:StaticFunctions:getGloFil"><apiName>getGloFil</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="flash.filters:GlowFilter"/></apiReturn><apiParam><apiItemName>_color</apiItemName><apiType value="uint"/><apiData>0xFFD799</apiData></apiParam><apiParam><apiItemName>radius</apiItemName><apiType value="Number"/><apiData>10</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="Shared:StaticFunctions:makeVisible"><apiName>makeVisible</apiName><shortdesc>
		 Can make display components visible or invisible.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>_id</apiItemName><apiType value="Object"/></apiParam></apiOperationDef><apiDesc>
		 Can make display components visible or invisible.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="Shared:StaticFunctions:pulseFocus"><apiName>pulseFocus</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>obj</apiItemName><apiType value="Object"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="Shared:StaticFunctions:removeStringTabs"><apiName>removeStringTabs</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="String"/></apiReturn><apiParam><apiItemName>input</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="Shared:StaticFunctions:resize"><apiName>resize</apiName><shortdesc>
		 Provides a tween animation for resizing Display Objects.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>arr</apiItemName><apiType value="Array"/><apiDesc>The object which needs to be resized. (important: obj must be a view component)
		 </apiDesc></apiParam><apiParam><apiItemName>targetWidth</apiItemName><apiType value="Number"/><apiDesc>The desired width of the object
		 </apiDesc></apiParam><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiData>smaller</apiData><apiDesc>Describes in which way the object will be resized. Options: smaller bigger mirror smallerToZero
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Provides a tween animation for resizing Display Objects.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="Shared:StaticFunctions:stopPulse"><apiName>stopPulse</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="Shared:StaticFunctions:tweenAlpha"><apiName>tweenAlpha</apiName><shortdesc>
		 This animation tween is used to fade in and out but will only work on components wihtout children whose alpha value is used between 0 and 1.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>obj</apiItemName><apiType value="Object"/><apiDesc>The Object which will be faded. Important is, that you only use Display Objects ().
		 </apiDesc></apiParam><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiData>out</apiData><apiDesc>the type of the tween animation 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 This animation tween is used to fade in and out but will only work on components wihtout children whose alpha value is used between 0 and 1.
		 This would cause that those values will be manipulated as well! The components will loose their smooth gradient fashioned look. So be careful if you use this method.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="Shared:StaticFunctions:xtrace"><apiName>xtrace</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>txt</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>col</apiItemName><apiType value="uint"/></apiParam><apiParam><apiItemName>target</apiItemName><apiType value="Object"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="Shared:StaticMath"><apiName>StaticMath</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="Shared:StaticMath:getRandomSquarePosition"><apiName>getRandomSquarePosition</apiName><shortdesc>
		 This is a full working shuffle function.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="Array"/></apiReturn><apiParam><apiItemName>width</apiItemName><apiType value="Number"/><apiDesc>the width of the current element, which will be compared with the others
		 </apiDesc></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/><apiDesc>the height of the current element, which will be compared with the others
		 </apiDesc></apiParam><apiParam><apiItemName>boundx</apiItemName><apiType value="Number"/><apiDesc>the maxwidth of the elements target container
		 </apiDesc></apiParam><apiParam><apiItemName>boundy</apiItemName><apiType value="Number"/><apiDesc>the maxheight of the elements targetcontainer
		 </apiDesc></apiParam><apiParam><apiItemName>compare</apiItemName><apiType value="Array"/><apiDesc>the array of all elements to compare with
		 </apiDesc></apiParam><apiParam><apiItemName>maxIndex</apiItemName><apiType value="uint"/><apiDesc>the maximum amount of steps in the compare loop. assume there are only a few elements with a position set before, so the loop breaks at those who still have not obtained a position.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 This is a full working shuffle function. It auto-increases the y-bounds, if there is no more possible placement of an element. The max effort is n, before the bounds will increase.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="Shared:StaticMath:square2squareHit"><apiName>square2squareHit</apiName><shortdesc>
		 Square to Square hit test working by exclusion, which is more performant for the case, that usually there would be no collision.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>x</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>width</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>x2</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>y2</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>width2</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>height2</apiItemName><apiType value="Number"/></apiParam></apiOperationDef><apiDesc>
		 Square to Square hit test working by exclusion, which is more performant for the case, that usually there would be no collision.
		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="Shared:StaticMath:StaticMath"><apiName>StaticMath</apiName><shortdesc>
		 A collection of static functions, calculating things you might need somewhere.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 A collection of static functions, calculating things you might need somewhere.
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="Shared:MyBase64Decoder"><apiName>MyBase64Decoder</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>flash.events:IEventDispatcher</apiBaseInterface><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="Shared:MyBase64Decoder:decode"><apiName>decode</apiName><shortdesc>
		 Decodes a Base64 encoded String and adds the result to an internal
		 buffer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>encoded</apiItemName><apiType value="String"/><apiDesc>The Base64 encoded String to decode.
		  
		  </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Decodes a Base64 encoded String and adds the result to an internal
		 buffer. Subsequent calls to this method add on to the internal
		 buffer. After all data have been encoded, call <codeph>toByteArray()</codeph>
		 to obtain a decoded <codeph>flash.utils.ByteArray</codeph>.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="Shared:MyBase64Decoder:reset"><apiName>reset</apiName><shortdesc>
		 Clears all buffers and resets the decoder to its initial state.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Clears all buffers and resets the decoder to its initial state.
		  
		  </apiDesc></apiOperationDetail></apiOperation><apiOperation id="Shared:MyBase64Decoder:toByteArray"><apiName>toByteArray</apiName><shortdesc>
		 Returns the current buffer as a decoded flash.utils.ByteArray.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="flash.utils:ByteArray"/><apiDesc>The decoded <codeph>flash.utils.ByteArray</codeph>.
		  
		  </apiDesc></apiReturn></apiOperationDef><apiDesc>
		 Returns the current buffer as a decoded <codeph>flash.utils.ByteArray</codeph>.
		 Note that calling this method also clears the buffer and resets the 
		 decoder to its initial state.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="Shared:MyBase64Decoder:MyBase64Decoder"><apiName>MyBase64Decoder</apiName><shortdesc>
		 Constructor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 Constructor.
		  
		  </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="Shared:ItemEvent"><apiName>ItemEvent</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="Shared:ItemEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="Shared:ItemEvent:ItemEvent"><apiName>ItemEvent</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/></apiParam><apiParam><apiItemName>_current</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam><apiParam><apiItemName>_next</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam><apiParam><apiItemName>_time</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="Shared:CustomModuleEvents"><apiName>CustomModuleEvents</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="Shared:CustomModuleEvents:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="Shared:CustomModuleEvents:CustomModuleEvents"><apiName>CustomModuleEvents</apiName><shortdesc>
		 Constructor, calls superclass and passes parameters.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>the passed user id
		 </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiDesc>	the id of the actual item, used to determine the successor item
		 </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiDesc>	the timestamp needed for writing the files on the server in order to the actual time
		 </apiDesc></apiParam><apiParam><apiItemName>_userDataUrl</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>		the chosen level of the testcollection
		 </apiDesc></apiParam><apiParam><apiItemName>_itemString</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	the chosen dimension of the testcollection
		 </apiDesc></apiParam><apiParam><apiItemName>_timeStamp</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	determines if the following module is an item, if <codeph>true</codeph>, the next module should be an item AND the item id to load will be dtermined by <codeph>_itemString</codeph>
		 </apiDesc></apiParam><apiParam><apiItemName>_level</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>	contains the updated item xml (after an item was completed). ready to be sent to the server
		 </apiDesc></apiParam><apiParam><apiItemName>_dimension</apiItemName><apiType value="int"/><apiData>-1</apiData></apiParam><apiParam><apiItemName>_isNext</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam><apiParam><apiItemName>updated</apiItemName><apiType value="XML"/><apiData>null</apiData></apiParam></apiConstructorDef><apiDesc>
		 Constructor, calls superclass and passes parameters.
		 
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="Shared:EventDispatcher"><apiName>EventDispatcher</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>Interfaces:ICustomEventDispatcher</apiBaseInterface><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="Shared:EventDispatcher:addEventListener"><apiName>addEventListener</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam><apiParam><apiItemName>priority</apiItemName><apiType value="int"/><apiData>0</apiData></apiParam><apiParam><apiItemName>useWeakReference</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="Shared:EventDispatcher:removeAllEventListeners"><apiName>removeAllEventListeners</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiData/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="Shared:EventDispatcher:removeEventListener"><apiName>removeEventListener</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="Shared:EventDispatcher:EventDispatcher"><apiName>EventDispatcher</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="flash.events:IEventDispatcher"/><apiData>null</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="Shared:XLoader"><apiName>XLoader</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Shared:EventDispatcher</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="Shared:XLoader:XLoader"><apiName>XLoader</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>_url</apiItemName><apiType value="String"/></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage><apiPackage id="__Global__"><apiName>__Global__</apiName><apiClassifier id="globalClassifier:_7c6d34871b0ac0ad4b3a036660ab5f8c11c45c9128172b6580088b7d06e67c87_mx_core_FlexModuleFactory"><apiName>_7c6d34871b0ac0ad4b3a036660ab5f8c11c45c9128172b6580088b7d06e67c87_mx_core_FlexModuleFactory</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IFlexModuleFactory</apiBaseInterface><apiBaseInterface>flashx.textLayout.compose:ISWFContext</apiBaseInterface><apiBaseClassifier>flash.display:Sprite</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="_7c6d34871b0ac0ad4b3a036660ab5f8c11c45c9128172b6580088b7d06e67c87_mx_core_FlexModuleFactory:allowDomainInRSL"><apiName>allowDomainInRSL</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>domains</apiItemName><apiType value="restParam"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="_7c6d34871b0ac0ad4b3a036660ab5f8c11c45c9128172b6580088b7d06e67c87_mx_core_FlexModuleFactory:allowDomain"><apiName>allowDomain</apiName><shortdesc>
      Calls Security.allowDomain() for the SWF associated with this IFlexModuleFactory
      plus all the SWFs assocatiated with RSLs preLoaded by this IFlexModuleFactory.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>domains</apiItemName><apiType value="restParam"/></apiParam></apiOperationDef><apiDesc>
      Calls Security.allowDomain() for the SWF associated with this IFlexModuleFactory
      plus all the SWFs assocatiated with RSLs preLoaded by this IFlexModuleFactory.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="_7c6d34871b0ac0ad4b3a036660ab5f8c11c45c9128172b6580088b7d06e67c87_mx_core_FlexModuleFactory:allowInsecureDomainInRSL"><apiName>allowInsecureDomainInRSL</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>domains</apiItemName><apiType value="restParam"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="_7c6d34871b0ac0ad4b3a036660ab5f8c11c45c9128172b6580088b7d06e67c87_mx_core_FlexModuleFactory:allowInsecureDomain"><apiName>allowInsecureDomain</apiName><shortdesc>
      Calls Security.allowInsecureDomain() for the SWF associated with this IFlexModuleFactory
      plus all the SWFs assocatiated with RSLs preLoaded by this IFlexModuleFactory.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>domains</apiItemName><apiType value="restParam"/></apiParam></apiOperationDef><apiDesc>
      Calls Security.allowInsecureDomain() for the SWF associated with this IFlexModuleFactory
      plus all the SWFs assocatiated with RSLs preLoaded by this IFlexModuleFactory.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="_7c6d34871b0ac0ad4b3a036660ab5f8c11c45c9128172b6580088b7d06e67c87_mx_core_FlexModuleFactory:callInContext"><apiName>callInContext</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="any"/></apiReturn><apiParam><apiItemName>fn</apiItemName><apiType value="Function"/></apiParam><apiParam><apiItemName>thisArg</apiItemName><apiType value="Object"/></apiParam><apiParam><apiItemName>argArray</apiItemName><apiType value="Array"/></apiParam><apiParam><apiItemName>returns</apiItemName><apiType value="Boolean"/><apiData>true</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="_7c6d34871b0ac0ad4b3a036660ab5f8c11c45c9128172b6580088b7d06e67c87_mx_core_FlexModuleFactory:create"><apiName>create</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Object"/></apiReturn><apiParam><apiItemName>params</apiItemName><apiType value="restParam"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="_7c6d34871b0ac0ad4b3a036660ab5f8c11c45c9128172b6580088b7d06e67c87_mx_core_FlexModuleFactory:info"><apiName>info</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Object"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="_7c6d34871b0ac0ad4b3a036660ab5f8c11c45c9128172b6580088b7d06e67c87_mx_core_FlexModuleFactory:_7c6d34871b0ac0ad4b3a036660ab5f8c11c45c9128172b6580088b7d06e67c87_mx_core_FlexModuleFactory"><apiName>_7c6d34871b0ac0ad4b3a036660ab5f8c11c45c9128172b6580088b7d06e67c87_mx_core_FlexModuleFactory</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="globalClassifier:xmlTest"><apiName>xmlTest</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.components:Application</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="xmlTest:xmlTest"><apiName>xmlTest</apiName><shortdesc>Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage><apiPackage id="enumTypes"><apiName>enumTypes</apiName><apiClassifier id="enumTypes:ErrorTypeEnum"><apiName>ErrorTypeEnum</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>enumTypes:BasicEnumeration</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="enumTypes:ErrorTypeEnum:selectByValue"><apiName>selectByValue</apiName><shortdesc>
		 looks for an enumeration by a passed string value.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiOperationClassifier>enumTypes:ErrorTypeEnum</apiOperationClassifier></apiReturn><apiParam><apiItemName>value</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc>
		 looks for an enumeration by a passed string value. Returns null of not found.
		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="enumTypes:ErrorTypeEnum:ErrorTypeEnum"><apiName>ErrorTypeEnum</apiName><shortdesc>
		 Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>newValue</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>newOrdinal</apiItemName><apiType value="int"/></apiParam></apiConstructorDef><apiDesc>
		 Constructor.
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="enumTypes:PHPParameterTypeEnum"><apiName>PHPParameterTypeEnum</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>enumTypes:BasicEnumeration</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="enumTypes:PHPParameterTypeEnum:selectByValue"><apiName>selectByValue</apiName><shortdesc>
		 looks for an enumeration by a passed string value.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiOperationClassifier>enumTypes:PHPParameterTypeEnum</apiOperationClassifier></apiReturn><apiParam><apiItemName>value</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc>
		 looks for an enumeration by a passed string value. Returns null of not found.
		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="enumTypes:PHPParameterTypeEnum:PHPParameterTypeEnum"><apiName>PHPParameterTypeEnum</apiName><shortdesc>
		 Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>newValue</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>newOrdinal</apiItemName><apiType value="int"/></apiParam></apiConstructorDef><apiDesc>
		 Constructor. See extended class.
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="enumTypes:UrlTypeEnum"><apiName>UrlTypeEnum</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>enumTypes:BasicEnumeration</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="enumTypes:UrlTypeEnum:selectByValue"><apiName>selectByValue</apiName><shortdesc>
		 looks for an enumeration by a passed string value.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiOperationClassifier>enumTypes:UrlTypeEnum</apiOperationClassifier></apiReturn><apiParam><apiItemName>value</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc>
		 looks for an enumeration by a passed string value. Returns null of not found.
		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="enumTypes:UrlTypeEnum:UrlTypeEnum"><apiName>UrlTypeEnum</apiName><shortdesc>
		 Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>newValue</apiItemName><apiType value="String"/><apiDesc>the string value, represented by the enumeration.
		 </apiDesc></apiParam><apiParam><apiItemName>newOrdinal</apiItemName><apiType value="int"/><apiDesc>the position in the sequence of the enumeration.
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 Constructor.
		 
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="enumTypes:BasicEnumeration"><apiName>BasicEnumeration</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="enumTypes:BasicEnumeration:getNumber"><apiName>getNumber</apiName><shortdesc>
		 Get the ordinal number of an enum-.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="int"/></apiReturn></apiOperationDef><apiDesc>
		 Get the ordinal number of an enum-.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="enumTypes:BasicEnumeration:getValue"><apiName>getValue</apiName><shortdesc>
		 Get the String value of an enum.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 Get the String value of an enum.
		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="enumTypes:BasicEnumeration:BasicEnumeration"><apiName>BasicEnumeration</apiName><shortdesc>
		 Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>newValue</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>newOrdinal</apiItemName><apiType value="int"/></apiParam></apiConstructorDef><apiDesc>
		 Constructor.
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage></allClasses>