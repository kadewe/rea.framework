<asdoc>

<interfaceRec name='ICustomEventDispatcher' fullname='Interfaces:ICustomEventDispatcher' sourcefile='C:\lea\Itementwicklung\xmlTest\src\Interfaces\ICustomEventDispatcher.as' namespace='Interfaces' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 This interface helps to generalize objects, for example stored runtime in an array or so, to call the very helpful

	 <code>removeAllEventListeners</code> function.

	 

	 <p>It is required to extends Shared.EventDispatcher to implement this interface</p>

	 ]]></description>
</interfaceRec>
<method name='removeAllEventListeners' fullname='Interfaces:ICustomEventDispatcher/Interfaces:ICustomEventDispatcher:removeAllEventListeners' isStatic='false' isFinal='false' isOverride='false'  param_names='type' param_types='String' param_defaults='' result_type='void'>
</method>
<interfaceRec name='ICustomWritable' fullname='Interfaces:ICustomWritable' sourcefile='C:\lea\Itementwicklung\xmlTest\src\Interfaces\ICustomWritable.as' namespace='Interfaces' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Adds the textvalue to a component. Makes possible to implement writable components and access them runtime via arrays or lists or other runtime build references.

	 ]]></description>
</interfaceRec>
<method name='text' fullname='Interfaces:ICustomWritable/Interfaces:ICustomWritable:text/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='text' fullname='Interfaces:ICustomWritable/Interfaces:ICustomWritable:text/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<interfaceRec name='ICustomSelectable' fullname='Interfaces:ICustomSelectable' sourcefile='C:\lea\Itementwicklung\xmlTest\src\Interfaces\ICustomSelectable.as' namespace='Interfaces' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 This interface is for accessing information of any selectable component. These components are generally used within questions. It allows the program to iterate the references and look for already selected Objects.

	 Instead of overwriting the synchronize() function in each new question class, you just have to assure it implements this interface.

	 

	 <p>By using this, it is possible to implement a radio button or check box behavior for an image or other visual components, without extending these classes</p>

	 ]]></description>
</interfaceRec>
<method name='selected' fullname='Interfaces:ICustomSelectable/Interfaces:ICustomSelectable:selected/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='selected' fullname='Interfaces:ICustomSelectable/Interfaces:ICustomSelectable:selected/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<interfaceRec name='ICustomModule' fullname='Interfaces:ICustomModule' sourcefile='C:\lea\Itementwicklung\xmlTest\src\Interfaces\ICustomModule.as' namespace='Interfaces' access='public' baseClasses='flash.events:IEventDispatcher;Interfaces:ICustomEventDispatcher' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Defines the minimal criteria for a class to be a module. This makes it possible for the MainAppManager to load any Module with the same abstract sequence of instructions.

	 ]]></description>
</interfaceRec>
<method name='getClassDefinition' fullname='Interfaces:ICustomModule/Interfaces:ICustomModule:getClassDefinition' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[

		 Returns a String of the module class plus the package name. Ensure to change their names, when refactor.

		 ]]></description>
</method>
<method name='load' fullname='Interfaces:ICustomModule/Interfaces:ICustomModule:load' isStatic='false' isFinal='false' isOverride='false'  param_names='_globals;_tcollection;_session' param_types='Model:Globals;Model:TestCollection;Model:Session' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 <p>Loading the module.</p>

		 <p>

		 Connect the modules internal variables with data from GlobalSettings, TestCollections and Session.

		 Usually there are only some of them needed, so not all the modules will behave like in the following description.

		 </p>

		 

		 <p>loads debug states, url paths to data on the server, and text for labels from globalsettings</p>

		 <p>loads the collection of possible dimensions, levels and the associated items as Strings</p>

		 <p>loads actual session states. These can include actual dimension, actual level and actual item.</p>

		 ]]></description>
</method>
<method name='returnLoadFinishedEvent' fullname='Interfaces:ICustomModule/Interfaces:ICustomModule:returnLoadFinishedEvent' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[

		 Event const cannot be accessed via get, therefore we use this method, to enable <code>addEventListener(anyModuleInstance.returnLoadFinishedEvent())</code>

		 ]]></description>
</method>
<method name='returnModuleFinishedEvent' fullname='Interfaces:ICustomModule/Interfaces:ICustomModule:returnModuleFinishedEvent' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[

		 Event const cannot be accessed via get, therefore we use this method, to enable <code>addEventListener(anyModuleInstance.returnModuleFinishedEvent())</code>

		 ]]></description>
</method>
<method name='returnView' fullname='Interfaces:ICustomModule/Interfaces:ICustomModule:returnView' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
<description><![CDATA[

		 To access the private view component only via referencs, instead of direct access.

		 ]]></description>
</method>
<method name='sendTweenFinished' fullname='Interfaces:ICustomModule/Interfaces:ICustomModule:sendTweenFinished' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Tells the module, that the screen is visible and specific actions can be performed now.

		 ]]></description>
</method>
<method name='unload' fullname='Interfaces:ICustomModule/Interfaces:ICustomModule:unload' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 <p>Unloads all contained and related objects of a module. Removes all event listeners if possible and sets all objects and relations to null.</p>

		 <p>Therefore all related objects of a module should be stored in an array calles references.</p>

		 ]]></description>
</method>
<method name='debug' fullname='Interfaces:ICustomModule/Interfaces:ICustomModule:debug/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='soundMode' fullname='Interfaces:ICustomModule/Interfaces:ICustomModule:soundMode/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='debug' fullname='Interfaces:ICustomModule/Interfaces:ICustomModule:debug/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 <p>Set the Debugging state to <code>true</code>.</p>

		 <p>Enables to determine errors without sourcecode by showing alertboxes, if an error occurs</p>

		 ]]></description>
</method>
<method name='soundMode' fullname='Interfaces:ICustomModule/Interfaces:ICustomModule:soundMode/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 <p>Sets sound to on or off</p>

		 <p>Enables to use application without sound errors, ideal for rapid item development and debug</p>

		 ]]></description>
</method>
<interfaceRec name='IClickableComponent' fullname='Interfaces:IClickableComponent' sourcefile='C:\lea\Itementwicklung\xmlTest\src\Interfaces\IClickableComponent.as' namespace='Interfaces' access='public' baseClasses='mx.core:IButton' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Defines the minimum criteria to be clickable and refer to any object, which many of the buttons need in this app.

	 

	 <p>There are many different Types of buttons in this application, many of them have refer to a sound and therefore we need to generalize the 

	 properties of a button which makes ist possible to play a sound by clickign itr dragging it</p>

	 ]]></description>
</interfaceRec>
<method name='referringTo' fullname='Interfaces:IClickableComponent/Interfaces:IClickableComponent:referringTo/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
<description><![CDATA[

		 Get the reference to a specific sound object.

		 ]]></description>
</method>
<method name='visibleReference' fullname='Interfaces:IClickableComponent/Interfaces:IClickableComponent:visibleReference/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
<description><![CDATA[

		 Get the reference to a specific visible object like an image.

		 ]]></description>
</method>
<method name='referringTo' fullname='Interfaces:IClickableComponent/Interfaces:IClickableComponent:referringTo/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Object' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Set the reference to a specific sound object.

		 ]]></description>
</method>
<method name='visibleReference' fullname='Interfaces:IClickableComponent/Interfaces:IClickableComponent:visibleReference/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Object' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Set the reference to a specific visible object like an image.

		 ]]></description>
</method>
<classRec name='StaticMath' fullname='Shared:StaticMath' sourcefile='C:\lea\Itementwicklung\xmlTest\src\Shared\StaticMath.as' namespace='Shared' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
</classRec>
<method name='StaticMath' fullname='Shared:StaticMath/StaticMath' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 A collection of static functions, calculating things you might need somewhere.

		 ]]></description>
</method>
<method name='getRandomSquarePosition' fullname='Shared:StaticMath/getRandomSquarePosition' isStatic='true' isFinal='false' isOverride='false'  param_names='width;height;boundx;boundy;compare;maxIndex' param_types='Number;Number;Number;Number;Array;uint' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined' result_type='Array'>
<description><![CDATA[

		 This is a full working shuffle function. It auto-increases the y-bounds, if there is no more possible placement of an element. The max effort is n, before the bounds will increase.

		 

		 ]]></description>
<param><![CDATA[width	the width of the current element, which will be compared with the others

		 ]]></param>
<param><![CDATA[height the height of the current element, which will be compared with the others

		 ]]></param>
<param><![CDATA[boundx the maxwidth of the elements target container

		 ]]></param>
<param><![CDATA[boundy the maxheight of the elements targetcontainer

		 ]]></param>
<param><![CDATA[compare the array of all elements to compare with

		 ]]></param>
<param><![CDATA[maxIndex the maximum amount of steps in the compare loop. assume there are only a few elements with a position set before, so the loop breaks at those who still have not obtained a position.

		 ]]></param>
</method>
<method name='square2squareHit' fullname='Shared:StaticMath/square2squareHit' isStatic='true' isFinal='false' isOverride='false'  param_names='x;y;width;height;x2;y2;width2;height2' param_types='Number;Number;Number;Number;Number;Number;Number;Number' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined' result_type='Boolean'>
<description><![CDATA[

		 Square to Square hit test working by exclusion, which is more performant for the case, that usually there would be no collision.

		 ]]></description>
</method>
<classRec name='StringUtils' fullname='Shared:StringUtils' sourcefile='C:\lea\Itementwicklung\xmlTest\src\Shared\StringUtils.as' namespace='Shared' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ]]></description>
<private><![CDATA[]]></private>
</classRec>
<method name='_minimum' fullname='Shared:StringUtils/private:_minimum' isStatic='true' isFinal='false' isOverride='false'  param_names='a;b;c' param_types='uint;uint;uint' param_defaults='undefined;undefined;undefined' result_type='uint'>
</method>
<method name='_quote' fullname='Shared:StringUtils/private:_quote' isStatic='true' isFinal='false' isOverride='false'  param_names='p_string;args' param_types='String;restParam' param_defaults='undefined;undefined' result_type='String'>
</method>
<method name='_swapCase' fullname='Shared:StringUtils/private:_swapCase' isStatic='true' isFinal='false' isOverride='false'  param_names='p_char;args' param_types='String;restParam' param_defaults='undefined;undefined' result_type='String'>
</method>
<method name='_upperCase' fullname='Shared:StringUtils/private:_upperCase' isStatic='true' isFinal='false' isOverride='false'  param_names='p_char;args' param_types='String;restParam' param_defaults='undefined;undefined' result_type='String'>
</method>
<method name='afterFirst' fullname='Shared:StringUtils/afterFirst' isStatic='true' isFinal='false' isOverride='false'  param_names='p_string;p_char' param_types='String;String' param_defaults='undefined;undefined' result_type='String'>
<description><![CDATA[

		]]></description>
<langversion><![CDATA[ActionScript 3.0

		]]></langversion>
<param><![CDATA[p_string The string.

		
		]]></param>
<param><![CDATA[p_begin The character or sub-string.

		
		]]></param>
<playerversion><![CDATA[Flash 9.0

		]]></playerversion>
<tiptext><![CDATA[
		]]></tiptext>
<private><![CDATA[]]></private>
<returns><![CDATA[String

		
			]]></returns>
</method>
<method name='afterLast' fullname='Shared:StringUtils/afterLast' isStatic='true' isFinal='false' isOverride='false'  param_names='p_string;p_char' param_types='String;String' param_defaults='undefined;undefined' result_type='String'>
<description><![CDATA[

		]]></description>
<langversion><![CDATA[ActionScript 3.0

		]]></langversion>
<param><![CDATA[p_string The string.

		
		]]></param>
<param><![CDATA[p_char The character or sub-string.

		
		]]></param>
<playerversion><![CDATA[Flash 9.0

		]]></playerversion>
<tiptext><![CDATA[
		]]></tiptext>
<private><![CDATA[]]></private>
<returns><![CDATA[String

		
			]]></returns>
</method>
<method name='beforeFirst' fullname='Shared:StringUtils/beforeFirst' isStatic='true' isFinal='false' isOverride='false'  param_names='p_string;p_char' param_types='String;String' param_defaults='undefined;undefined' result_type='String'>
<description><![CDATA[

		]]></description>
<langversion><![CDATA[ActionScript 3.0

		]]></langversion>
<param><![CDATA[p_string The string.

		
		]]></param>
<param><![CDATA[p_begin The character or sub-string.

		
		]]></param>
<playerversion><![CDATA[Flash 9.0

		]]></playerversion>
<tiptext><![CDATA[
		]]></tiptext>
<private><![CDATA[]]></private>
<returns><![CDATA[String

		
			]]></returns>
</method>
<method name='beforeLast' fullname='Shared:StringUtils/beforeLast' isStatic='true' isFinal='false' isOverride='false'  param_names='p_string;p_char' param_types='String;String' param_defaults='undefined;undefined' result_type='String'>
<description><![CDATA[

		]]></description>
<langversion><![CDATA[ActionScript 3.0

		]]></langversion>
<param><![CDATA[p_string The string.

		
		]]></param>
<param><![CDATA[p_begin The character or sub-string.

		
		]]></param>
<playerversion><![CDATA[Flash 9.0

		]]></playerversion>
<tiptext><![CDATA[
		]]></tiptext>
<private><![CDATA[]]></private>
<returns><![CDATA[String

		
			]]></returns>
</method>
<method name='beginsWith' fullname='Shared:StringUtils/beginsWith' isStatic='true' isFinal='false' isOverride='false'  param_names='p_string;p_begin' param_types='String;String' param_defaults='undefined;undefined' result_type='Boolean'>
<description><![CDATA[

		]]></description>
<langversion><![CDATA[ActionScript 3.0

		]]></langversion>
<param><![CDATA[p_string The string that the prefix will be checked against.

		
		]]></param>
<param><![CDATA[p_begin The prefix that will be tested against the string.

		
		]]></param>
<playerversion><![CDATA[Flash 9.0

		]]></playerversion>
<tiptext><![CDATA[
		]]></tiptext>
<private><![CDATA[]]></private>
<returns><![CDATA[Boolean

		
			]]></returns>
</method>
<method name='between' fullname='Shared:StringUtils/between' isStatic='true' isFinal='false' isOverride='false'  param_names='p_string;p_start;p_end' param_types='String;String;String' param_defaults='undefined;undefined;undefined' result_type='String'>
<description><![CDATA[

		]]></description>
<langversion><![CDATA[ActionScript 3.0

		]]></langversion>
<param><![CDATA[p_string The string.

		
		]]></param>
<param><![CDATA[p_start The character or sub-string to use as the start index.

		
		]]></param>
<param><![CDATA[p_end The character or sub-string to use as the end index.

		
		]]></param>
<playerversion><![CDATA[Flash 9.0

		]]></playerversion>
<tiptext><![CDATA[
		]]></tiptext>
<private><![CDATA[]]></private>
<returns><![CDATA[String

		
			]]></returns>
</method>
<method name='block' fullname='Shared:StringUtils/block' isStatic='true' isFinal='false' isOverride='false'  param_names='p_string;p_len;p_delim' param_types='String;uint;String' param_defaults='undefined;undefined;.' result_type='Array'>
<description><![CDATA[

		]]></description>
<langversion><![CDATA[ActionScript 3.0

		]]></langversion>
<param><![CDATA[p_string The string to break up.

		
		]]></param>
<param><![CDATA[p_len Maximum length of each block of text.

		
		]]></param>
<param><![CDATA[p_delim delimter to end text blocks on, default = '.'

		
		]]></param>
<playerversion><![CDATA[Flash 9.0

		]]></playerversion>
<tiptext><![CDATA[
		]]></tiptext>
<private><![CDATA[]]></private>
<returns><![CDATA[Array

		
			]]></returns>
</method>
<method name='capitalize' fullname='Shared:StringUtils/capitalize' isStatic='true' isFinal='false' isOverride='false'  param_names='p_string;args' param_types='String;restParam' param_defaults='undefined;undefined' result_type='String'>
<description><![CDATA[

		]]></description>
<langversion><![CDATA[ActionScript 3.0

		]]></langversion>
<param><![CDATA[p_string The string.

		
		]]></param>
<param><![CDATA[p_all (optional) Boolean value indicating if we should

		capitalize all words or only the first.

		
		]]></param>
<playerversion><![CDATA[Flash 9.0

		]]></playerversion>
<tiptext><![CDATA[
		]]></tiptext>
<private><![CDATA[]]></private>
<returns><![CDATA[String

		
			]]></returns>
</method>
<method name='contains' fullname='Shared:StringUtils/contains' isStatic='true' isFinal='false' isOverride='false'  param_names='p_string;p_char' param_types='String;String' param_defaults='undefined;undefined' result_type='Boolean'>
<description><![CDATA[

		]]></description>
<langversion><![CDATA[ActionScript 3.0

		]]></langversion>
<param><![CDATA[p_string The string.

		
		]]></param>
<param><![CDATA[p_char The character or sub-string we are looking for.

		
		]]></param>
<playerversion><![CDATA[Flash 9.0

		]]></playerversion>
<tiptext><![CDATA[
		]]></tiptext>
<private><![CDATA[]]></private>
<returns><![CDATA[Boolean

		
			]]></returns>
</method>
<method name='countOf' fullname='Shared:StringUtils/countOf' isStatic='true' isFinal='false' isOverride='false'  param_names='p_string;p_char;p_caseSensitive' param_types='String;String;Boolean' param_defaults='undefined;undefined;true' result_type='uint'>
<description><![CDATA[

		]]></description>
<langversion><![CDATA[ActionScript 3.0

		]]></langversion>
<param><![CDATA[p_string The string.

		
		]]></param>
<param><![CDATA[p_char The character or sub-string to count.

		
		]]></param>
<param><![CDATA[p_caseSensitive (optional, default is true) A boolean flag to indicate if the

		search is case sensitive.

		
		]]></param>
<playerversion><![CDATA[Flash 9.0

		]]></playerversion>
<tiptext><![CDATA[
		]]></tiptext>
<private><![CDATA[]]></private>
<returns><![CDATA[uint

		
			]]></returns>
</method>
<method name='editDistance' fullname='Shared:StringUtils/editDistance' isStatic='true' isFinal='false' isOverride='false'  param_names='p_source;p_target' param_types='String;String' param_defaults='undefined;undefined' result_type='uint'>
<description><![CDATA[

		]]></description>
<langversion><![CDATA[ActionScript 3.0

		]]></langversion>
<param><![CDATA[p_source The source string.

		
		]]></param>
<param><![CDATA[p_target The target string.

		
		]]></param>
<playerversion><![CDATA[Flash 9.0

		]]></playerversion>
<tiptext><![CDATA[
		]]></tiptext>
<private><![CDATA[]]></private>
<returns><![CDATA[uint

		
			]]></returns>
</method>
<method name='endsWith' fullname='Shared:StringUtils/endsWith' isStatic='true' isFinal='false' isOverride='false'  param_names='p_string;p_end' param_types='String;String' param_defaults='undefined;undefined' result_type='Boolean'>
<description><![CDATA[

		]]></description>
<langversion><![CDATA[ActionScript 3.0

		]]></langversion>
<param><![CDATA[p_string The string that the suffic will be checked against.

		
		]]></param>
<param><![CDATA[p_end The suffix that will be tested against the string.

		
		]]></param>
<playerversion><![CDATA[Flash 9.0

		]]></playerversion>
<tiptext><![CDATA[
		]]></tiptext>
<private><![CDATA[]]></private>
<returns><![CDATA[Boolean

		
			]]></returns>
</method>
<method name='escapePattern' fullname='Shared:StringUtils/private:escapePattern' isStatic='true' isFinal='false' isOverride='false'  param_names='p_pattern' param_types='String' param_defaults='undefined' result_type='String'>
</method>
<method name='hasText' fullname='Shared:StringUtils/hasText' isStatic='true' isFinal='false' isOverride='false'  param_names='p_string' param_types='String' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		]]></description>
<langversion><![CDATA[ActionScript 3.0

		]]></langversion>
<param><![CDATA[p_string The string to check.

		
		]]></param>
<playerversion><![CDATA[Flash 9.0

		]]></playerversion>
<tiptext><![CDATA[
		]]></tiptext>
<private><![CDATA[]]></private>
<returns><![CDATA[Boolean

		
			]]></returns>
</method>
<method name='isEmpty' fullname='Shared:StringUtils/isEmpty' isStatic='true' isFinal='false' isOverride='false'  param_names='p_string' param_types='String' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		]]></description>
<langversion><![CDATA[ActionScript 3.0

		]]></langversion>
<param><![CDATA[p_string The string to check

		
		]]></param>
<playerversion><![CDATA[Flash 9.0

		]]></playerversion>
<tiptext><![CDATA[
		]]></tiptext>
<private><![CDATA[]]></private>
<returns><![CDATA[Boolean

		
			]]></returns>
</method>
<method name='isNumeric' fullname='Shared:StringUtils/isNumeric' isStatic='true' isFinal='false' isOverride='false'  param_names='p_string' param_types='String' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		]]></description>
<langversion><![CDATA[ActionScript 3.0

		]]></langversion>
<param><![CDATA[p_string The string.

		
		]]></param>
<playerversion><![CDATA[Flash 9.0

		]]></playerversion>
<tiptext><![CDATA[
		]]></tiptext>
<private><![CDATA[]]></private>
<returns><![CDATA[Boolean

		
			]]></returns>
</method>
<method name='padLeft' fullname='Shared:StringUtils/padLeft' isStatic='true' isFinal='false' isOverride='false'  param_names='p_string;p_padChar;p_length' param_types='String;String;uint' param_defaults='undefined;undefined;undefined' result_type='String'>
<description><![CDATA[

		]]></description>
<langversion><![CDATA[ActionScript 3.0

		]]></langversion>
<param><![CDATA[p_string String to pad

		
		]]></param>
<param><![CDATA[p_padChar Character for pad.

		
		]]></param>
<param><![CDATA[p_length Length to pad to.

		
		]]></param>
<playerversion><![CDATA[Flash 9.0

		]]></playerversion>
<tiptext><![CDATA[
		]]></tiptext>
<private><![CDATA[]]></private>
<returns><![CDATA[String

		
			]]></returns>
</method>
<method name='padRight' fullname='Shared:StringUtils/padRight' isStatic='true' isFinal='false' isOverride='false'  param_names='p_string;p_padChar;p_length' param_types='String;String;uint' param_defaults='undefined;undefined;undefined' result_type='String'>
<description><![CDATA[

		]]></description>
<langversion><![CDATA[ActionScript 3.0

		]]></langversion>
<param><![CDATA[p_string String to pad

		
		]]></param>
<param><![CDATA[p_padChar Character for pad.

		
		]]></param>
<param><![CDATA[p_length Length to pad to.

		
		]]></param>
<playerversion><![CDATA[Flash 9.0

		]]></playerversion>
<tiptext><![CDATA[
		]]></tiptext>
<private><![CDATA[]]></private>
<returns><![CDATA[String

		
			]]></returns>
</method>
<method name='properCase' fullname='Shared:StringUtils/properCase' isStatic='true' isFinal='false' isOverride='false'  param_names='p_string' param_types='String' param_defaults='undefined' result_type='String'>
<description><![CDATA[

		]]></description>
<langversion><![CDATA[ActionScript 3.0

		]]></langversion>
<param><![CDATA[p_string The string to check

		
		]]></param>
<playerversion><![CDATA[Flash 9.0

		]]></playerversion>
<tiptext><![CDATA[
		]]></tiptext>
<private><![CDATA[]]></private>
<returns><![CDATA[String.

		
			]]></returns>
</method>
<method name='quote' fullname='Shared:StringUtils/quote' isStatic='true' isFinal='false' isOverride='false'  param_names='p_string' param_types='String' param_defaults='undefined' result_type='String'>
<description><![CDATA[

		]]></description>
<langversion><![CDATA[ActionScript 3.0

		]]></langversion>
<param><![CDATA[p_string The string that will be checked for instances of remove

		string

		
		]]></param>
<playerversion><![CDATA[Flash 9.0

		]]></playerversion>
<tiptext><![CDATA[
		]]></tiptext>
<private><![CDATA[]]></private>
<returns><![CDATA[String

		
			]]></returns>
</method>
<method name='removeExtraWhitespace' fullname='Shared:StringUtils/removeExtraWhitespace' isStatic='true' isFinal='false' isOverride='false'  param_names='p_string' param_types='String' param_defaults='undefined' result_type='String'>
<description><![CDATA[

		]]></description>
<langversion><![CDATA[ActionScript 3.0

		]]></langversion>
<param><![CDATA[p_string The String whose extraneous whitespace will be removed.

		
		]]></param>
<playerversion><![CDATA[Flash 9.0

		]]></playerversion>
<tiptext><![CDATA[
		]]></tiptext>
<private><![CDATA[]]></private>
<returns><![CDATA[String

		
			]]></returns>
</method>
<method name='remove' fullname='Shared:StringUtils/remove' isStatic='true' isFinal='false' isOverride='false'  param_names='p_string;p_remove;p_caseSensitive' param_types='String;String;Boolean' param_defaults='undefined;undefined;true' result_type='String'>
<description><![CDATA[

		]]></description>
<langversion><![CDATA[ActionScript 3.0

		]]></langversion>
<param><![CDATA[p_string The string that will be checked for instances of remove

		string

		
		]]></param>
<param><![CDATA[p_remove The string that will be removed from the input string.

		
		]]></param>
<param><![CDATA[p_caseSensitive An optional boolean indicating if the replace is case sensitive. Default is true.

		
		]]></param>
<playerversion><![CDATA[Flash 9.0

		]]></playerversion>
<tiptext><![CDATA[
		]]></tiptext>
<private><![CDATA[]]></private>
<returns><![CDATA[String

		
			]]></returns>
</method>
<method name='reverseWords' fullname='Shared:StringUtils/reverseWords' isStatic='true' isFinal='false' isOverride='false'  param_names='p_string' param_types='String' param_defaults='undefined' result_type='String'>
<description><![CDATA[

		]]></description>
<langversion><![CDATA[ActionScript 3.0

		]]></langversion>
<param><![CDATA[p_string The String that will be reversed.

		
		]]></param>
<playerversion><![CDATA[Flash 9.0

		]]></playerversion>
<tiptext><![CDATA[
		]]></tiptext>
<private><![CDATA[]]></private>
<returns><![CDATA[String

		
			]]></returns>
</method>
<method name='reverse' fullname='Shared:StringUtils/reverse' isStatic='true' isFinal='false' isOverride='false'  param_names='p_string' param_types='String' param_defaults='undefined' result_type='String'>
<description><![CDATA[

		]]></description>
<langversion><![CDATA[ActionScript 3.0

		]]></langversion>
<param><![CDATA[p_string The String that will be reversed.

		
		]]></param>
<playerversion><![CDATA[Flash 9.0

		]]></playerversion>
<tiptext><![CDATA[
		]]></tiptext>
<private><![CDATA[]]></private>
<returns><![CDATA[String

		
			]]></returns>
</method>
<method name='similarity' fullname='Shared:StringUtils/similarity' isStatic='true' isFinal='false' isOverride='false'  param_names='p_source;p_target' param_types='String;String' param_defaults='undefined;undefined' result_type='Number'>
<description><![CDATA[

		]]></description>
<langversion><![CDATA[ActionScript 3.0

		]]></langversion>
<param><![CDATA[p_source The source string.

		
		]]></param>
<param><![CDATA[p_target The target string.

		
		]]></param>
<playerversion><![CDATA[Flash 9.0

		]]></playerversion>
<tiptext><![CDATA[
		]]></tiptext>
<private><![CDATA[]]></private>
<returns><![CDATA[Number

		
			]]></returns>
</method>
<method name='stripTags' fullname='Shared:StringUtils/stripTags' isStatic='true' isFinal='false' isOverride='false'  param_names='p_string' param_types='String' param_defaults='undefined' result_type='String'>
<description><![CDATA[

		]]></description>
<langversion><![CDATA[ActionScript 3.0

		]]></langversion>
<param><![CDATA[p_string The source string.

		
		]]></param>
<playerversion><![CDATA[Flash 9.0

		]]></playerversion>
<tiptext><![CDATA[
		]]></tiptext>
<private><![CDATA[]]></private>
<returns><![CDATA[String

		
			]]></returns>
</method>
<method name='swapCase' fullname='Shared:StringUtils/swapCase' isStatic='true' isFinal='false' isOverride='false'  param_names='p_string' param_types='String' param_defaults='undefined' result_type='String'>
<description><![CDATA[

		]]></description>
<langversion><![CDATA[ActionScript 3.0

		]]></langversion>
<param><![CDATA[p_string The source string.

		
		]]></param>
<playerversion><![CDATA[Flash 9.0

		]]></playerversion>
<tiptext><![CDATA[
		]]></tiptext>
<private><![CDATA[]]></private>
<returns><![CDATA[String

		
			]]></returns>
</method>
<method name='trimLeft' fullname='Shared:StringUtils/trimLeft' isStatic='true' isFinal='false' isOverride='false'  param_names='p_string' param_types='String' param_defaults='undefined' result_type='String'>
<description><![CDATA[

		]]></description>
<langversion><![CDATA[ActionScript 3.0

		]]></langversion>
<param><![CDATA[p_string The String whose beginning whitespace will be removed.

		
		]]></param>
<playerversion><![CDATA[Flash 9.0

		]]></playerversion>
<tiptext><![CDATA[
		]]></tiptext>
<private><![CDATA[]]></private>
<returns><![CDATA[String

		
			]]></returns>
</method>
<method name='trimRight' fullname='Shared:StringUtils/trimRight' isStatic='true' isFinal='false' isOverride='false'  param_names='p_string' param_types='String' param_defaults='undefined' result_type='String'>
<description><![CDATA[

		]]></description>
<langversion><![CDATA[ActionScript 3.0

		]]></langversion>
<param><![CDATA[p_string The String whose ending whitespace will be removed.

		
		]]></param>
<playerversion><![CDATA[Flash 9.0

		]]></playerversion>
<tiptext><![CDATA[
		]]></tiptext>
<private><![CDATA[]]></private>
<returns><![CDATA[String	.

		
			]]></returns>
</method>
<method name='trim' fullname='Shared:StringUtils/trim' isStatic='true' isFinal='false' isOverride='false'  param_names='p_string' param_types='String' param_defaults='undefined' result_type='String'>
<description><![CDATA[

		]]></description>
<langversion><![CDATA[ActionScript 3.0

		]]></langversion>
<param><![CDATA[p_string The String whose beginning and ending whitespace will

		will be removed.

		
		]]></param>
<playerversion><![CDATA[Flash 9.0

		]]></playerversion>
<tiptext><![CDATA[
		]]></tiptext>
<private><![CDATA[]]></private>
<returns><![CDATA[String

		
			]]></returns>
</method>
<method name='truncate' fullname='Shared:StringUtils/truncate' isStatic='true' isFinal='false' isOverride='false'  param_names='p_string;p_len;p_suffix' param_types='String;uint;String' param_defaults='undefined;undefined;...' result_type='String'>
<description><![CDATA[

		]]></description>
<langversion><![CDATA[ActionScript 3.0

		]]></langversion>
<param><![CDATA[p_string The string.

		
		]]></param>
<param><![CDATA[p_len The length the string should be shortend to

		
		]]></param>
<param><![CDATA[p_suffix (optional, default=...) The string to append to the end of the truncated string.

		
		]]></param>
<playerversion><![CDATA[Flash 9.0

		]]></playerversion>
<tiptext><![CDATA[
		]]></tiptext>
<private><![CDATA[]]></private>
<returns><![CDATA[String

		
			]]></returns>
</method>
<method name='wordCount' fullname='Shared:StringUtils/wordCount' isStatic='true' isFinal='false' isOverride='false'  param_names='p_string' param_types='String' param_defaults='undefined' result_type='uint'>
<description><![CDATA[

		]]></description>
<langversion><![CDATA[ActionScript 3.0

		]]></langversion>
<param><![CDATA[p_string The string.

		
		]]></param>
<playerversion><![CDATA[Flash 9.0

		]]></playerversion>
<tiptext><![CDATA[
		]]></tiptext>
<private><![CDATA[]]></private>
<returns><![CDATA[uint

		
			]]></returns>
</method>
<classRec name='UserEvent' fullname='Shared:UserEvent' sourcefile='C:\lea\Itementwicklung\xmlTest\src\Shared\UserEvent.as' namespace='Shared' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
</classRec>
<method name='UserEvent' fullname='Shared:UserEvent/UserEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;bubbles;cancelable;_subject;_level;_user' param_types='String;Boolean;Boolean;String;String;String' param_defaults='undefined;undefined;undefined;null;null;null' result_type='*'>
</method>
<method name='clone' fullname='Shared:UserEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='_level' fullname='Shared:UserEvent/_level/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='_subject' fullname='Shared:UserEvent/_subject/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='_userData' fullname='Shared:UserEvent/_userData/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<field name='ENDTEST_CHOSEN' fullname='Shared:UserEvent/ENDTEST_CHOSEN' type='String' isStatic='true' isConst='true' defaultValue='endTestChosen' >
</field>
<field name='ITEM_FINISHED' fullname='Shared:UserEvent/ITEM_FINISHED' type='String' isStatic='true' isConst='true' defaultValue='itemFinished' >
</field>
<field name='NEWTEST_CHOSEN' fullname='Shared:UserEvent/NEWTEST_CHOSEN' type='String' isStatic='true' isConst='true' defaultValue='newTestChosen' >
</field>
<field name='START_APPLICATION' fullname='Shared:UserEvent/START_APPLICATION' type='String' isStatic='true' isConst='true' defaultValue='startApplication' >
</field>
<field name='SUBJ_AND_LEVEL_CHOSEN' fullname='Shared:UserEvent/SUBJ_AND_LEVEL_CHOSEN' type='String' isStatic='true' isConst='true' defaultValue='subjandlevelchosen' >
</field>
<field name='USERDATA_RECEIVED' fullname='Shared:UserEvent/USERDATA_RECEIVED' type='String' isStatic='true' isConst='true' defaultValue='userDataReceived' >
</field>
<field name='level' fullname='Shared:UserEvent/private:level' type='String' isStatic='false' isConst='false' >
</field>
<field name='subject' fullname='Shared:UserEvent/private:subject' type='String' isStatic='false' isConst='false' >
</field>
<field name='userData' fullname='Shared:UserEvent/private:userData' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='ItemEvent' fullname='Shared:ItemEvent' sourcefile='C:\lea\Itementwicklung\xmlTest\src\Shared\ItemEvent.as' namespace='Shared' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
</classRec>
<method name='ItemEvent' fullname='Shared:ItemEvent/ItemEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;bubbles;cancelable;_current;_next;_time' param_types='String;Boolean;Boolean;String;String;String' param_defaults='undefined;undefined;undefined;null;null;null' result_type='*'>
</method>
<method name='clone' fullname='Shared:ItemEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='_currentItem' fullname='Shared:ItemEvent/_currentItem/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
</method>
<method name='_nextitem' fullname='Shared:ItemEvent/_nextitem/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='_timeStamp' fullname='Shared:ItemEvent/_timeStamp/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<field name='ITEM_FINISHED' fullname='Shared:ItemEvent/ITEM_FINISHED' type='String' isStatic='true' isConst='true' defaultValue='itemFinished' >
</field>
<field name='ITEM_PLUS' fullname='Shared:ItemEvent/ITEM_PLUS' type='String' isStatic='true' isConst='true' defaultValue='itemPlus' >
</field>
<field name='QPAGE_BACK' fullname='Shared:ItemEvent/QPAGE_BACK' type='String' isStatic='true' isConst='true' defaultValue='qpageBack' >
</field>
<field name='QPAGE_FORWARD' fullname='Shared:ItemEvent/QPAGE_FORWARD' type='String' isStatic='true' isConst='true' defaultValue='qpageForward' >
</field>
<field name='START_ITEM' fullname='Shared:ItemEvent/START_ITEM' type='String' isStatic='true' isConst='true' defaultValue='startItem' >
</field>
<field name='WRITE_DATA' fullname='Shared:ItemEvent/WRITE_DATA' type='String' isStatic='true' isConst='true' defaultValue='writeData' >
</field>
<field name='currentItem' fullname='Shared:ItemEvent/currentItem' type='String' isStatic='false' isConst='false' >
</field>
<field name='nextItem' fullname='Shared:ItemEvent/nextItem' type='String' isStatic='false' isConst='false' >
</field>
<field name='timeStamp' fullname='Shared:ItemEvent/timeStamp' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='CustomModuleEvents' fullname='Shared:CustomModuleEvents' sourcefile='C:\lea\Itementwicklung\xmlTest\src\Shared\CustomModuleEvents.as' namespace='Shared' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 An event class for passing session related values via event. Especially useful if you want to avoid to code this into an interface (and therefore into all other module classes).

	 ]]></description>
</classRec>
<method name='CustomModuleEvents' fullname='Shared:CustomModuleEvents/CustomModuleEvents' isStatic='false' isFinal='false' isOverride='false'  param_names='type;bubbles;cancelable;_userDataUrl;_itemString;_timeStamp;_level;_dimension;_isNext;updated' param_types='String;Boolean;Boolean;String;String;String;int;int;Boolean;XML' param_defaults='undefined;undefined;undefined;null;null;null;-1;-1;false;null' result_type='*'>
<description><![CDATA[

		 Constructor, calls superclass and passes parameters.

		 

		 ]]></description>
<param><![CDATA[_userDataUrl	the passed user id

		 ]]></param>
<param><![CDATA[_itemString 	the id of the actual item, used to determine the successor item

		 ]]></param>
<param><![CDATA[_timeStamp 	the timestamp needed for writing the files on the server in order to the actual time

		 ]]></param>
<param><![CDATA[_level 		the chosen level of the testcollection

		 ]]></param>
<param><![CDATA[_dimension 	the chosen dimension of the testcollection

		 ]]></param>
<param><![CDATA[_isNext		determines if the following module is an item, if <code>true</code>, the next module should be an item AND the item id to load will be dtermined by <code>_itemString</code>

		 ]]></param>
<param><![CDATA[updated		contains the updated item xml (after an item was completed). ready to be sent to the server

		 ]]></param>
</method>
<method name='clone' fullname='Shared:CustomModuleEvents/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='_dimension' fullname='Shared:CustomModuleEvents/_dimension/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
</method>
<method name='_isNext' fullname='Shared:CustomModuleEvents/_isNext/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='_itemString' fullname='Shared:CustomModuleEvents/_itemString/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='_level' fullname='Shared:CustomModuleEvents/_level/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
</method>
<method name='_timeStamp' fullname='Shared:CustomModuleEvents/_timeStamp/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='_updatedXML' fullname='Shared:CustomModuleEvents/_updatedXML/get' isStatic='false' isFinal='false' isOverride='false'  result_type='XML'>
</method>
<method name='_userDataUrl' fullname='Shared:CustomModuleEvents/_userDataUrl/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<field name='MODULE_FINISHED' fullname='Shared:CustomModuleEvents/MODULE_FINISHED' type='String' isStatic='true' isConst='true' defaultValue='moduleFinished' >
<description><![CDATA[

		 Declares the state of being ready to unload. Related to any module.

		 ]]></description>
</field>
<field name='dimension' fullname='Shared:CustomModuleEvents/private:dimension' type='int' isStatic='false' isConst='false' >
</field>
<field name='isNext' fullname='Shared:CustomModuleEvents/private:isNext' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='itemString' fullname='Shared:CustomModuleEvents/private:itemString' type='String' isStatic='false' isConst='false' >
</field>
<field name='level' fullname='Shared:CustomModuleEvents/private:level' type='int' isStatic='false' isConst='false' >
</field>
<field name='timeStamp' fullname='Shared:CustomModuleEvents/private:timeStamp' type='String' isStatic='false' isConst='false' >
</field>
<field name='updatedXml' fullname='Shared:CustomModuleEvents/private:updatedXml' type='XML' isStatic='false' isConst='false' >
</field>
<field name='userDataUrl' fullname='Shared:CustomModuleEvents/private:userDataUrl' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='EventDispatcher' fullname='Shared:EventDispatcher' sourcefile='C:\lea\Itementwicklung\xmlTest\src\Shared\EventDispatcher.as' namespace='Shared' access='public' baseclass='flash.events:EventDispatcher' interfaces='Interfaces:ICustomEventDispatcher' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 This class overrides the eventdispatcher to allow a removal of all eventListeners of an Object.

	 Idea and concept by Justin Shacklette, Copyright holds Justin Shacklette www.saturnboy.com

	 ]]></description>
</classRec>
<method name='EventDispatcher' fullname='Shared:EventDispatcher/EventDispatcher' isStatic='false' isFinal='false' isOverride='false'  param_names='target' param_types='flash.events:IEventDispatcher' param_defaults='null' result_type='*'>
</method>
<method name='addEventListener' fullname='Shared:EventDispatcher/addEventListener' isStatic='false' isFinal='false' isOverride='true'  param_names='type;listener;useCapture;priority;useWeakReference' param_types='String;Function;Boolean;int;Boolean' param_defaults='undefined;undefined;false;0;false' result_type='void'>
</method>
<method name='removeAllEventListeners' fullname='Shared:EventDispatcher/removeAllEventListeners' isStatic='false' isFinal='false' isOverride='false'  param_names='type' param_types='String' param_defaults='' result_type='void'>
</method>
<method name='removeEventListener' fullname='Shared:EventDispatcher/removeEventListener' isStatic='false' isFinal='false' isOverride='true'  param_names='type;listener;useCapture' param_types='String;Function;Boolean' param_defaults='undefined;undefined;false' result_type='void'>
</method>
<field name='_listeners' fullname='Shared:EventDispatcher/private:_listeners' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<classRec name='ErrorDispatcher' fullname='Shared:ErrorDispatcher' sourcefile='C:\lea\Itementwicklung\xmlTest\src\Shared\ErrorDispatcher.as' namespace='Shared' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Static class. Prepares a custom error type to be send to server which writes an error log

	 ]]></description>
</classRec>
<method name='processNewError' fullname='Shared:ErrorDispatcher/processNewError' isStatic='true' isFinal='false' isOverride='false'  param_names='error;description;flashErrorId;causedBy;line;scriptUrl;navigate' param_types='String;String;String;String;String;String;Boolean' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined;false' result_type='void'>
<description><![CDATA[

		 creates an sends a new error message by combining the parameters and adding a timestamp. Then a urlloader will be created to request the specific php script which will write the message into a log file.

		 

		 ]]></description>
<param><![CDATA[error custom number of error type

		 ]]></param>
<param><![CDATA[description custom description of error type

		 ]]></param>
<param><![CDATA[flashErrorId original falsh error id

		 ]]></param>
<param><![CDATA[causedBy the source of the error

		 ]]></param>
<param><![CDATA[line the module and if important also the line (line is usually useless, due to continual development)

		 ]]></param>
<param><![CDATA[scriptUrl the url to the php script

		 ]]></param>
<param><![CDATA[navigate for debugging, shows the target url

		 

		 ]]></param>
</method>
<classRec name='MyBase64Decoder' fullname='Shared:MyBase64Decoder' sourcefile='C:\lea\Itementwicklung\xmlTest\src\Shared\MyBase64Decoder.as' namespace='Shared' access='public' baseclass='flash.events:EventDispatcher' interfaces='flash.events:IEventDispatcher' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 A utility class to decode a Base64 encoded String to a ByteArray. Extends Shared.EventDispatcher to dispatch and remove events dynamically

	 

	  

	  ]]></description>
<langversion><![CDATA[3.0

	  ]]></langversion>
<playerversion><![CDATA[Flash 9

	  ]]></playerversion>
<playerversion><![CDATA[AIR 1.1

	  ]]></playerversion>
<productversion><![CDATA[Flex 3

	 ]]></productversion>
</classRec>
<method name='MyBase64Decoder' fullname='Shared:MyBase64Decoder/MyBase64Decoder' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Constructor.

		  

		  ]]></description>
<langversion><![CDATA[3.0

		  ]]></langversion>
<playerversion><![CDATA[Flash 9

		  ]]></playerversion>
<playerversion><![CDATA[AIR 1.1

		  ]]></playerversion>
<productversion><![CDATA[Flex 3

		 ]]></productversion>
</method>
<method name='copyByteArray' fullname='Shared:MyBase64Decoder/private:copyByteArray' isStatic='true' isFinal='false' isOverride='false'  param_names='source;destination;length' param_types='flash.utils:ByteArray;flash.utils:ByteArray;uint' param_defaults='undefined;undefined;0' result_type='void'>
</method>
<method name='decode' fullname='Shared:MyBase64Decoder/decode' isStatic='false' isFinal='false' isOverride='false'  param_names='encoded' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Decodes a Base64 encoded String and adds the result to an internal

		 buffer. Subsequent calls to this method add on to the internal

		 buffer. After all data have been encoded, call <code>toByteArray()</code>

		 to obtain a decoded <code>flash.utils.ByteArray</code>.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		  ]]></langversion>
<param><![CDATA[encoded The Base64 encoded String to decode.

		  

		  ]]></param>
<playerversion><![CDATA[Flash 9

		  ]]></playerversion>
<playerversion><![CDATA[AIR 1.1

		  ]]></playerversion>
<productversion><![CDATA[Flex 3

		 ]]></productversion>
</method>
<method name='drain' fullname='Shared:MyBase64Decoder/drain' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.utils:ByteArray'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='flush' fullname='Shared:MyBase64Decoder/flush' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.utils:ByteArray'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='reset' fullname='Shared:MyBase64Decoder/reset' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Clears all buffers and resets the decoder to its initial state.

		  

		  ]]></description>
<langversion><![CDATA[3.0

		  ]]></langversion>
<playerversion><![CDATA[Flash 9

		  ]]></playerversion>
<playerversion><![CDATA[AIR 1.1

		  ]]></playerversion>
<productversion><![CDATA[Flex 3

		 ]]></productversion>
</method>
<method name='toByteArray' fullname='Shared:MyBase64Decoder/toByteArray' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.utils:ByteArray'>
<description><![CDATA[

		 Returns the current buffer as a decoded <code>flash.utils.ByteArray</code>.

		 Note that calling this method also clears the buffer and resets the 

		 decoder to its initial state.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		  ]]></langversion>
<playerversion><![CDATA[Flash 9

		  ]]></playerversion>
<playerversion><![CDATA[AIR 1.1

		  ]]></playerversion>
<productversion><![CDATA[Flex 3

		 ]]></productversion>
<return><![CDATA[The decoded <code>flash.utils.ByteArray</code>.

		  

		  ]]></return>
</method>
<field name='BYTES_CONVERTED' fullname='Shared:MyBase64Decoder/BYTES_CONVERTED' type='String' isStatic='true' isConst='true' defaultValue='bytesConverted' >
</field>
<field name='ESCAPE_CHAR_CODE' fullname='Shared:MyBase64Decoder/private:ESCAPE_CHAR_CODE' type='Number' isStatic='true' isConst='true' defaultValue='61' >
</field>
<field name='count' fullname='Shared:MyBase64Decoder/private:count' type='int' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='data' fullname='Shared:MyBase64Decoder/private:data' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='filled' fullname='Shared:MyBase64Decoder/private:filled' type='int' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='inverse' fullname='Shared:MyBase64Decoder/private:inverse' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='resourceManager' fullname='Shared:MyBase64Decoder/private:resourceManager' type='mx.resources:IResourceManager' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[

		  ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='work' fullname='Shared:MyBase64Decoder/private:work' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<classRec name='StaticFunctions' fullname='Shared:StaticFunctions' sourcefile='C:\lea\Itementwicklung\xmlTest\src\Shared\StaticFunctions.as' namespace='Shared' access='public' baseclass='Shared:EventDispatcher' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 This Class contains a set of static functions which will be called by any class in the project.

	 Its a kind of collection of generic functions. 

	 ]]></description>
</classRec>
<method name='check_exists' fullname='Shared:StaticFunctions/check_exists' isStatic='true' isFinal='false' isOverride='false'  param_names='x' param_types='Object' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 Function for Debugging

		 

		 ]]></description>
<param><![CDATA[x Can be any object, class whatever, important: Classpath needed!

		 ]]></param>
<returns><![CDATA[A boolean value <code>true</code> if object exists.

		 ]]></returns>
</method>
<method name='convertToString' fullname='Shared:StaticFunctions/convertToString' isStatic='true' isFinal='false' isOverride='false'  param_names='obj' param_types='Object' param_defaults='undefined' result_type='String'>
</method>
<method name='fadeIn' fullname='Shared:StaticFunctions/private:fadeIn' isStatic='true' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:TimerEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='fadeOutSound' fullname='Shared:StaticFunctions/fadeOutSound' isStatic='true' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Provides a smooth fade out for all now-running sound files.

		 ]]></description>
</method>
<method name='fadeOut' fullname='Shared:StaticFunctions/private:fadeOut' isStatic='true' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:TimerEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='getDropSh' fullname='Shared:StaticFunctions/getDropSh' isStatic='true' isFinal='false' isOverride='false'  result_type='flash.filters:DropShadowFilter'>
</method>
<method name='getGloFil' fullname='Shared:StaticFunctions/getGloFil' isStatic='true' isFinal='false' isOverride='false'  param_names='_color;radius' param_types='uint;Number' param_defaults='0xFFD799;10' result_type='flash.filters:GlowFilter'>
</method>
<method name='makeVisible' fullname='Shared:StaticFunctions/makeVisible' isStatic='true' isFinal='false' isOverride='false'  param_names='_id' param_types='Object' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Can make display components visible or invisible.

		 ]]></description>
</method>
<method name='onCountBigger' fullname='Shared:StaticFunctions/private:onCountBigger' isStatic='true' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:TimerEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onCountSmaller' fullname='Shared:StaticFunctions/private:onCountSmaller' isStatic='true' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:TimerEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onPulse' fullname='Shared:StaticFunctions/private:onPulse' isStatic='true' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:TimerEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='pulseFocus' fullname='Shared:StaticFunctions/pulseFocus' isStatic='true' isFinal='false' isOverride='false'  param_names='obj' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<method name='removeStringTabs' fullname='Shared:StaticFunctions/removeStringTabs' isStatic='true' isFinal='false' isOverride='false'  param_names='input' param_types='String' param_defaults='undefined' result_type='String'>
</method>
<method name='resize' fullname='Shared:StaticFunctions/resize' isStatic='true' isFinal='false' isOverride='false'  param_names='arr;targetWidth;type' param_types='Array;Number;String' param_defaults='undefined;undefined;smaller' result_type='void'>
<description><![CDATA[

		 Provides a tween animation for resizing Display Objects.

		 

		 ]]></description>
<param><![CDATA[obj The object which needs to be resized. (important: obj must be a view component)

		 ]]></param>
<param><![CDATA[targetWidth The desired width of the object

		 ]]></param>
<param><![CDATA[type Describes in which way the object will be resized. Options: smaller bigger mirror smallerToZero

		 ]]></param>
</method>
<method name='stopPulse' fullname='Shared:StaticFunctions/stopPulse' isStatic='true' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='tweenAlpha' fullname='Shared:StaticFunctions/tweenAlpha' isStatic='true' isFinal='false' isOverride='false'  param_names='obj;type' param_types='Object;String' param_defaults='undefined;out' result_type='void'>
<description><![CDATA[

		 This animation tween is used to fade in and out but will only work on components wihtout children whose alpha value is used between 0 and 1.

		 This would cause that those values will be manipulated as well! The components will loose their smooth gradient fashioned look. So be careful if you use this method.

		 

		 ]]></description>
<param><![CDATA[obj The Object which will be faded. Important is, that you only use Display Objects ().

		 ]]></param>
<param><![CDATA[type the type of the tween animation 

		 ]]></param>
</method>
<method name='xtrace' fullname='Shared:StaticFunctions/xtrace' isStatic='true' isFinal='false' isOverride='false'  param_names='txt;col;target' param_types='String;uint;Object' param_defaults='undefined;undefined;undefined' result_type='void'>
</method>
<field name='OBJECT_FADE_IN' fullname='Shared:StaticFunctions/OBJECT_FADE_IN' type='String' isStatic='true' isConst='true' defaultValue='objectFadeIn' >
</field>
<field name='OBJECT_FADE_OUT' fullname='Shared:StaticFunctions/OBJECT_FADE_OUT' type='String' isStatic='true' isConst='true' defaultValue='objectFadeOut' >
</field>
<field name='OBJECT_RESIZED' fullname='Shared:StaticFunctions/OBJECT_RESIZED' type='String' isStatic='true' isConst='true' defaultValue='objectResized' >
</field>
<field name='alpha' fullname='Shared:StaticFunctions/alpha' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='countSwitch' fullname='Shared:StaticFunctions/private:countSwitch' type='Boolean' isStatic='true' isConst='false' defaultValue='false' >
</field>
<field name='counter' fullname='Shared:StaticFunctions/private:counter' type='Number' isStatic='true' isConst='false' defaultValue='0' >
</field>
<field name='pulse' fullname='Shared:StaticFunctions/private:pulse' type='flash.utils:Timer' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='sizeX' fullname='Shared:StaticFunctions/sizeX' type='Number' isStatic='true' isConst='false' defaultValue='0' >
<description><![CDATA[

		 for resizeX method

		 ]]></description>
</field>
<field name='staticDispatcher' fullname='Shared:StaticFunctions/staticDispatcher' type='Shared:EventDispatcher' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[

		 Allows a static class to dispatch Events dynamically.

		 ]]></description>
</field>
<field name='targets' fullname='Shared:StaticFunctions/targets' type='Array' isStatic='true' isConst='false' defaultValue='unknown' >
<description><![CDATA[

		 Pointer on multiple Object to use within a method of this class. 

		 ]]></description>
</field>
<field name='target' fullname='Shared:StaticFunctions/target' type='Object' isStatic='true' isConst='false' defaultValue='unknown' >
<description><![CDATA[

		 Pointer on a single Object to use within multple methods (especially event driven methods).

		 ]]></description>
</field>
<field name='t' fullname='Shared:StaticFunctions/private:t' type='flash.utils:Timer' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='tweenObj' fullname='Shared:StaticFunctions/tweenObj' type='Object' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<classRec name='MP3Audio' fullname='Shared:MP3Audio' sourcefile='C:\lea\Itementwicklung\xmlTest\src\Shared\MP3Audio.as' namespace='Shared' access='public' baseclass='Shared:EventDispatcher' interfaces='Interfaces:ICustomEventDispatcher' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Creates a new wrapper for loaded mp3 files. Can handle all required events for a common mp3 player like play, pause, stop etc. The underlying data structure is a Sound Object.

	 

	 ]]></description>
<see><![CDATA[flash.media.Sound

	 ]]></see>
<see><![CDATA[flash.media.SoundChannel

	 ]]></see>
</classRec>
<method name='MP3Audio' fullname='Shared:MP3Audio/MP3Audio' isStatic='false' isFinal='false' isOverride='false'  param_names='_scriptUrl;relPath;id;navigate' param_types='String;String;String;Boolean' param_defaults='undefined;null;null;false' result_type='*'>
<description><![CDATA[

		 Constructor. Requires an url to load an mp3 from an external source. events will be auto-build.

		 

		 ]]></description>
<param><![CDATA[_scriptUrl	the path to the include script on the server

		 ]]></param>
<param><![CDATA[relPath		the relative path to the mp3 object

		 ]]></param>
<param><![CDATA[id			allows to set an id for accessing objects at runtime

		 ]]></param>
<param><![CDATA[navigate	for debug purposes, navigates to url of the include script

		 ]]></param>
</method>
<method name='onCompleteDataLoad' fullname='Shared:MP3Audio/private:onCompleteDataLoad' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onIoError' fullname='Shared:MP3Audio/private:onIoError' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:IOErrorEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onPlayingFinished' fullname='Shared:MP3Audio/private:onPlayingFinished' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onProgress' fullname='Shared:MP3Audio/private:onProgress' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='pause' fullname='Shared:MP3Audio/pause' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 manually pauses the sound object.

		 ]]></description>
</method>
<method name='playAudio' fullname='Shared:MP3Audio/playAudio' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 opens the soundchannel and adds the playing soundobject to it. enabled to autodetect, when the soundobject finished playing. isPlaying will be set to true.

		 Does nothing if the sound object is null. This can happen for example if the unload method was called external or internal when an error occured.

		 

		 ]]></description>
<see><![CDATA[#returnIsPlaying()

		 ]]></see>
</method>
<method name='returnIsPlaying' fullname='Shared:MP3Audio/returnIsPlaying' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 return if the underlying sound object is in playing state

		 

		 ]]></description>
<returns><![CDATA[Boolean isPlaying true if playing false if not

		 ]]></returns>
</method>
<method name='returnProgress' fullname='Shared:MP3Audio/returnProgress' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 returns a progress value for external objects to access the loading state of the sound object

		 

		 ]]></description>
<returns><![CDATA[Number a percent value as a number

		 ]]></returns>
</method>
<method name='setDebug' fullname='Shared:MP3Audio/setDebug' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 lets an external class set this state to debugMode, allows to show alert boxes on screen

		 ]]></description>
</method>
<method name='stopAudio' fullname='Shared:MP3Audio/private:stopAudio' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='stop' fullname='Shared:MP3Audio/stop' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 stops a sound.

		 ]]></description>
</method>
<method name='unload' fullname='Shared:MP3Audio/unload' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 unloads soundObject related events and the object itself.

		 ]]></description>
</method>
<field name='FINISHED_PLAYING' fullname='Shared:MP3Audio/FINISHED_PLAYING' type='String' isStatic='true' isConst='true' defaultValue='finishedPLaying' >
</field>
<field name='INIT_COMPLETE' fullname='Shared:MP3Audio/INIT_COMPLETE' type='String' isStatic='true' isConst='true' defaultValue='initComplete' >
</field>
<field name='LOAD_COMPLETE' fullname='Shared:MP3Audio/LOAD_COMPLETE' type='String' isStatic='true' isConst='true' defaultValue='loadComplete' >
</field>
<field name='ONLOAD_ERROR' fullname='Shared:MP3Audio/ONLOAD_ERROR' type='String' isStatic='true' isConst='true' defaultValue='onLoadError' >
</field>
<field name='PAUSE_PLAYING' fullname='Shared:MP3Audio/PAUSE_PLAYING' type='String' isStatic='true' isConst='true' defaultValue='pausePlaying' >
</field>
<field name='START_PLAYING' fullname='Shared:MP3Audio/START_PLAYING' type='String' isStatic='true' isConst='true' defaultValue='startPlaying' >
</field>
<field name='STOPPED_PLAYING' fullname='Shared:MP3Audio/STOPPED_PLAYING' type='String' isStatic='true' isConst='true' defaultValue='stoppedPlaying' >
</field>
<field name='audio' fullname='Shared:MP3Audio/private:audio' type='flash.media:Sound' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='channel' fullname='Shared:MP3Audio/private:channel' type='flash.media:SoundChannel' isStatic='false' isConst='false' >
</field>
<field name='context' fullname='Shared:MP3Audio/private:context' type='flash.media:SoundLoaderContext' isStatic='false' isConst='false' >
</field>
<field name='debugMode' fullname='Shared:MP3Audio/private:debugMode' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='id' fullname='Shared:MP3Audio/id' type='String' isStatic='false' isConst='false' >
</field>
<field name='isPlaying' fullname='Shared:MP3Audio/private:isPlaying' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='parent' fullname='Shared:MP3Audio/parent' type='Object' isStatic='false' isConst='false' >
</field>
<field name='playingFinished' fullname='Shared:MP3Audio/private:playingFinished' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='progress' fullname='Shared:MP3Audio/private:progress' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='relPath' fullname='Shared:MP3Audio/private:relPath' type='String' isStatic='false' isConst='false' >
</field>
<field name='req' fullname='Shared:MP3Audio/private:req' type='flash.net:URLRequest' isStatic='false' isConst='false' >
</field>
<field name='scriptUrl' fullname='Shared:MP3Audio/private:scriptUrl' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='XMLWriter' fullname='Shared:XMLWriter' sourcefile='C:\lea\Itementwicklung\xmlTest\src\Shared\XMLWriter.as' namespace='Shared' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 

	 XML writer Class

	 Version: 	0.1.2

	  DOC: 		09.11.2010

	 Author: 	Jan Küster

	  Last Update: 12.01.2011

	  Description:

	 Similar to XLoader, this Class is made for connecting to php but sending data instead of retreiving data.

	 ]]></description>
</classRec>
<method name='XMLWriter' fullname='Shared:XMLWriter/XMLWriter' isStatic='false' isFinal='false' isOverride='false'  param_names='_relUrl;_xml;_date;_name;_user;_param' param_types='String;XML;String;String;String;Number' param_defaults='undefined;undefined;;;test;0' result_type='*'>
<description><![CDATA[

		 Constructor with presettings of parameters. The parameters representing the values which are required to make PHP write a new XML document with the correct information.

		 

		 ]]></description>
<param><![CDATA[_xml The complete item XML File (required, cannot be null)

		 ]]></param>
<param><![CDATA[_date The timestamp, given by the itemObject 

		 ]]></param>
<param><![CDATA[_name the complete Document name to be written 

		 ]]></param>
<param><![CDATA[_user the user name / iD (default ID is test)

		 ]]></param>
<param><![CDATA[_param there are different types of php scripts, whhich can be requested, the parameter indicates which specific script will be called.

		 

		 ]]></param>
</method>
<method name='onLoadComplete' fullname='Shared:XMLWriter/private:onLoadComplete' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='onLoadError' fullname='Shared:XMLWriter/private:onLoadError' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:IOErrorEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='send_httpReq' fullname='Shared:XMLWriter/send_httpReq' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='send_urlReq' fullname='Shared:XMLWriter/send_urlReq' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 In this method, a variables object willl be created to store all data in one object. In php you will be able to refer to it, by 

		 accessing the <code>§_POST['variables.something']</code> array. Depending on the param variable, different scripts will be loaded.

		 

		 ]]></description>
</method>
<field name='docDate' fullname='Shared:XMLWriter/private:docDate' type='String' isStatic='false' isConst='false' >
</field>
<field name='docName' fullname='Shared:XMLWriter/private:docName' type='String' isStatic='false' isConst='false' >
</field>
<field name='docUser' fullname='Shared:XMLWriter/private:docUser' type='String' isStatic='false' isConst='false' >
</field>
<field name='param' fullname='Shared:XMLWriter/private:param' type='Number' isStatic='false' isConst='false' >
</field>
<field name='relUrl' fullname='Shared:XMLWriter/private:relUrl' type='String' isStatic='false' isConst='false' >
</field>
<field name='w_doc' fullname='Shared:XMLWriter/private:w_doc' type='flash.xml:XMLDocument' isStatic='false' isConst='false' >
</field>
<field name='w_xmlcoll' fullname='Shared:XMLWriter/private:w_xmlcoll' type='mx.collections:XMLListCollection' isStatic='false' isConst='false' >
</field>
<field name='w_xml' fullname='Shared:XMLWriter/private:w_xml' type='XML' isStatic='false' isConst='false' >
</field>
<field name='w_xmllist' fullname='Shared:XMLWriter/private:w_xmllist' type='XMLList' isStatic='false' isConst='false' >
</field>
<classRec name='HorizontalMultilineLayout' fullname='Shared:HorizontalMultilineLayout' sourcefile='C:\lea\Itementwicklung\xmlTest\src\Shared\HorizontalMultilineLayout.as' namespace='Shared' access='public' baseclass='spark.layouts.supportClasses:LayoutBase' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Lays out elements the same way as text area positions words: putting them in

	 one line and going to next line when there is no space for new word.

	 

	 copyright: Maxim Kachurovskiy

	 http://cookbooks.adobe.com/post_Horizontal_Multiline_Layout-17807.html

	 

	 Code is modified by Jan Kuester, University of bremen jank87]]></description>
<tzi.de><![CDATA[
	 Modification: Layout-in-Row --> Text can be aligned into middle, top or bottom align in each line,

	 Text can be aligned by the measurements of a source element (e.g. an image) in each line, Text can be aligned by a fixed

	 pixel value in each line. 

	 ]]></tzi.de>
</classRec>
<method name='invalidateTargetSizeAndDisplayList' fullname='Shared:HorizontalMultilineLayout/private:invalidateTargetSizeAndDisplayList' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='measure' fullname='Shared:HorizontalMultilineLayout/measure' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='updateDisplayList' fullname='Shared:HorizontalMultilineLayout/updateDisplayList' isStatic='false' isFinal='false' isOverride='true'  param_names='width;height' param_types='Number;Number' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='horizontalGap' fullname='Shared:HorizontalMultilineLayout/horizontalGap/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='lineHeightInPixel' fullname='Shared:HorizontalMultilineLayout/lineHeightInPixel/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='lineHeightSource' fullname='Shared:HorizontalMultilineLayout/lineHeightSource/get' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.core:ILayoutElement'>
</method>
<method name='paddingBottom' fullname='Shared:HorizontalMultilineLayout/paddingBottom/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='paddingLeft' fullname='Shared:HorizontalMultilineLayout/paddingLeft/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='paddingRight' fullname='Shared:HorizontalMultilineLayout/paddingRight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='paddingTop' fullname='Shared:HorizontalMultilineLayout/paddingTop/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='verticalAlign' fullname='Shared:HorizontalMultilineLayout/verticalAlign/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='verticalGap' fullname='Shared:HorizontalMultilineLayout/verticalGap/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='verticalLayoutInLine' fullname='Shared:HorizontalMultilineLayout/verticalLayoutInLine/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='horizontalGap' fullname='Shared:HorizontalMultilineLayout/horizontalGap/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='lineHeightInPixel' fullname='Shared:HorizontalMultilineLayout/lineHeightInPixel/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='lineHeightSource' fullname='Shared:HorizontalMultilineLayout/lineHeightSource/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='mx.core:ILayoutElement' param_defaults='undefined' result_type='void'>
</method>
<method name='paddingBottom' fullname='Shared:HorizontalMultilineLayout/paddingBottom/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='paddingLeft' fullname='Shared:HorizontalMultilineLayout/paddingLeft/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='paddingRight' fullname='Shared:HorizontalMultilineLayout/paddingRight/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='paddingTop' fullname='Shared:HorizontalMultilineLayout/paddingTop/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='verticalAlign' fullname='Shared:HorizontalMultilineLayout/verticalAlign/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='verticalGap' fullname='Shared:HorizontalMultilineLayout/verticalGap/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='verticalLayoutInLine' fullname='Shared:HorizontalMultilineLayout/verticalLayoutInLine/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='_horizontalGap' fullname='Shared:HorizontalMultilineLayout/private:_horizontalGap' type='Number' isStatic='false' isConst='false' defaultValue='6' >
</field>
<field name='_lineHeightInPixel' fullname='Shared:HorizontalMultilineLayout/private:_lineHeightInPixel' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_lineHeightSource' fullname='Shared:HorizontalMultilineLayout/private:_lineHeightSource' type='mx.core:ILayoutElement' isStatic='false' isConst='false' defaultValue='null' >
</field>
<field name='_paddingBottom' fullname='Shared:HorizontalMultilineLayout/private:_paddingBottom' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_paddingLeft' fullname='Shared:HorizontalMultilineLayout/private:_paddingLeft' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_paddingRight' fullname='Shared:HorizontalMultilineLayout/private:_paddingRight' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_paddingTop' fullname='Shared:HorizontalMultilineLayout/private:_paddingTop' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_verticalAlign' fullname='Shared:HorizontalMultilineLayout/private:_verticalAlign' type='String' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_verticalGap' fullname='Shared:HorizontalMultilineLayout/private:_verticalGap' type='Number' isStatic='false' isConst='false' defaultValue='6' >
</field>
<field name='_verticalLayoutInLine' fullname='Shared:HorizontalMultilineLayout/private:_verticalLayoutInLine' type='String' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='lastWidth' fullname='Shared:HorizontalMultilineLayout/private:lastWidth' type='Number' isStatic='false' isConst='false' defaultValue='-1' >
</field>
<classRec name='XLoader' fullname='Shared:XLoader' sourcefile='C:\lea\Itementwicklung\xmlTest\src\Shared\XLoader.as' namespace='Shared' access='public' baseclass='Shared:EventDispatcher' isFinal='false' isDynamic='false' >
</classRec>
<method name='XLoader' fullname='Shared:XLoader/XLoader' isStatic='false' isFinal='false' isOverride='false'  param_names='_url' param_types='String' param_defaults='undefined' result_type='*'>
</method>
<method name='http_onFault' fullname='Shared:XLoader/private:http_onFault' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='mx.rpc.events:FaultEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='http_onResult' fullname='Shared:XLoader/private:http_onResult' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='mx.rpc.events:ResultEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='result' fullname='Shared:XLoader/result/get' isStatic='false' isFinal='false' isOverride='false'  result_type='XML'>
<metadata>
	<Bindable owner='Shared:XLoader/result/get' event='propertyChange' >
	</Bindable>
</metadata>
</method>
<method name='result' fullname='Shared:XLoader/result/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='XML' param_defaults='undefined' result_type='void'>
</method>
<field name='service' fullname='Shared:XLoader/service' type='mx.rpc.http:HTTPService' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<classRec name='CustomImage' fullname='Shared:CustomImage' sourcefile='C:\lea\Itementwicklung\xmlTest\src\Shared\CustomImage.as' namespace='Shared' access='public' baseclass='mx.controls:Image' interfaces='Interfaces:ICustomEventDispatcher' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Basic class which automatically loads an image from url and catches errors as well as allows a dynamic adding or removing of eventlisteners. Be aware, that it requires the data as a base64 string.

	 ]]></description>
</classRec>
<method name='CustomImage' fullname='Shared:CustomImage/CustomImage' isStatic='false' isFinal='false' isOverride='false'  param_names='scriptUrl;relPath;navigate' param_types='String;String;Boolean' param_defaults='undefined;undefined;false' result_type='*'>
<description><![CDATA[

 			Constructor. Requires an url and a relative path to the image file. Will automatically loads the image as a base64 string and decodes it to an image source.

		
		 ]]></description>
<param><![CDATA[scripturl	the url to the script which loads the image

		 ]]></param>
<param><![CDATA[relPath		the path parameter passed to the url via POST

		 ]]></param>
<param><![CDATA[navigate	for debugging purposes, navigates to the url of the script

 		]]></param>
</method>
<method name='addEventListener' fullname='Shared:CustomImage/addEventListener' isStatic='false' isFinal='false' isOverride='true'  param_names='type;listener;useCapture;priority;useWeakReference' param_types='String;Function;Boolean;int;Boolean' param_defaults='undefined;undefined;false;0;false' result_type='void'>
<description><![CDATA[

		 ]]></description>
<see><![CDATA[Shared.EventDispatcher

		 ]]></see>
</method>
<method name='hasAtLeastOneListener' fullname='Shared:CustomImage/hasAtLeastOneListener' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 ]]></description>
<see><![CDATA[Shared.EventDispatcher

		 ]]></see>
</method>
<method name='onDecodingFinished' fullname='Shared:CustomImage/private:onDecodingFinished' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onLoadComplete' fullname='Shared:CustomImage/private:onLoadComplete' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='removeAllEventListeners' fullname='Shared:CustomImage/removeAllEventListeners' isStatic='false' isFinal='false' isOverride='false'  param_names='type' param_types='String' param_defaults='' result_type='void'>
<description><![CDATA[

		 ]]></description>
<see><![CDATA[Shared.EventDispatcher

		 ]]></see>
</method>
<method name='removeEventListener' fullname='Shared:CustomImage/removeEventListener' isStatic='false' isFinal='false' isOverride='true'  param_names='type;listener;useCapture' param_types='String;Function;Boolean' param_defaults='undefined;undefined;false' result_type='void'>
<description><![CDATA[

		 ]]></description>
<see><![CDATA[Shared.EventDispatcher

		 ]]></see>
</method>
<method name='setDebug' fullname='Shared:CustomImage/setDebug' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 sets the debug value to the desired value true or fals

		 

		 ]]></description>
<param><![CDATA[value the new value for the components debugmode

		 ]]></param>
</method>
<method name='unload' fullname='Shared:CustomImage/private:unload' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='CREATION_COMPLETE' fullname='Shared:CustomImage/CREATION_COMPLETE' type='String' isStatic='true' isConst='true' defaultValue='creationcomplete' >
</field>
<field name='_listeners' fullname='Shared:CustomImage/private:_listeners' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='b' fullname='Shared:CustomImage/private:b' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='debug' fullname='Shared:CustomImage/private:debug' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='d' fullname='Shared:CustomImage/private:d' type='Shared:MyBase64Decoder' isStatic='false' isConst='false' >
</field>
<field name='loader' fullname='Shared:CustomImage/private:loader' type='flash.net:URLLoader' isStatic='false' isConst='false' >
</field>
<field name='req' fullname='Shared:CustomImage/private:req' type='flash.net:URLRequest' isStatic='false' isConst='false' >
</field>
<classRec name='CustomButton' fullname='Shared:CustomButton' sourcefile='C:\lea\Itementwicklung\xmlTest\src\Shared\CustomButton.as' namespace='Shared' access='public' baseclass='spark.components:Button' interfaces='Interfaces:ICustomEventDispatcher;Interfaces:IClickableComponent' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 An extended Button class, implementing the minimum criteria for linking to other objects and removeAllEventListeners function.

	 <p>Most buttons in this Application will extend this</p>

	 ]]></description>
<metadata>
	<DefaultProperty owner='Shared:CustomButton' name='label' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='CustomButton' fullname='Shared:CustomButton/CustomButton' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 empty constructor

		 ]]></description>
</method>
<method name='addEventListener' fullname='Shared:CustomButton/addEventListener' isStatic='false' isFinal='false' isOverride='true'  param_names='type;listener;useCapture;priority;useWeakReference' param_types='String;Function;Boolean;int;Boolean' param_defaults='undefined;undefined;false;0;false' result_type='void'>
<description><![CDATA[

		 ]]></description>
<see><![CDATA[Shared.EventDispatcher

		 ]]></see>
</method>
<method name='hasAtLeastOneListener' fullname='Shared:CustomButton/hasAtLeastOneListener' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 ]]></description>
<see><![CDATA[Shared.EventDispatcher

		 ]]></see>
</method>
<method name='removeAllEventListeners' fullname='Shared:CustomButton/removeAllEventListeners' isStatic='false' isFinal='false' isOverride='false'  param_names='type' param_types='String' param_defaults='' result_type='void'>
<description><![CDATA[

		 ]]></description>
<see><![CDATA[Shared.EventDispatcher

		 ]]></see>
</method>
<method name='removeEventListener' fullname='Shared:CustomButton/removeEventListener' isStatic='false' isFinal='false' isOverride='true'  param_names='type;listener;useCapture' param_types='String;Function;Boolean' param_defaults='undefined;undefined;false' result_type='void'>
<description><![CDATA[

		 ]]></description>
<see><![CDATA[Shared.EventDispatcher

		 ]]></see>
</method>
<method name='referringTo' fullname='Shared:CustomButton/referringTo/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
<description><![CDATA[

		 get the reference to the linked object

		 ]]></description>
</method>
<method name='visibleReference' fullname='Shared:CustomButton/visibleReference/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
<description><![CDATA[

		 gets a reference to a linked visible object

		 ]]></description>
</method>
<method name='referringTo' fullname='Shared:CustomButton/referringTo/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Object' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 sets a reference to a linked object

		 ]]></description>
</method>
<method name='visibleReference' fullname='Shared:CustomButton/visibleReference/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Object' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 sets a reference to a linked visible object

		 ]]></description>
</method>
<field name='_listeners' fullname='Shared:CustomButton/private:_listeners' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_referringTo' fullname='Shared:CustomButton/private:_referringTo' type='Object' isStatic='false' isConst='false' defaultValue='null' >
</field>
<field name='_visibleReference' fullname='Shared:CustomButton/private:_visibleReference' type='Object' isStatic='false' isConst='false' defaultValue='null' >
</field>
<classRec name='LoaderManagement' fullname='MainApplication:LoaderManagement' sourcefile='C:\lea\Itementwicklung\xmlTest\src\MainApplication\LoaderManagement.as' namespace='MainApplication' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 A static class, representing a sequence to arrange the required modules in a predefined order.

	 ]]></description>
</classRec>
<method name='LoaderManagement' fullname='MainApplication:LoaderManagement/LoaderManagement' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 constructor is empty

		 ]]></description>
</method>
<method name='getNext2Load' fullname='MainApplication:LoaderManagement/getNext2Load' isStatic='true' isFinal='false' isOverride='false'  param_names='moduleName;nextItem' param_types='String;String' param_defaults='undefined;undefined' result_type='String'>
<description><![CDATA[

		 Iterates a sequence of module class names and tries to find matches.

		 

		 ]]></description>
<param><![CDATA[moduleName the name of the current module to match with the sequence

		 ]]></param>
<param><![CDATA[nextitem is a parameter which indeicated, that there is still an item in the load queue

		 ]]></param>
<return><![CDATA[Returns a String-Name of the Class definition, which makes the module accessable via getClassByDefinition.

		 

		 ]]></return>
</method>
<field name='sequence' fullname='MainApplication:LoaderManagement/private:sequence' type='Array' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<classRec name='MainAppManager' fullname='MainApplication:MainAppManager' sourcefile='C:\lea\Itementwicklung\xmlTest\src\MainApplication\MainAppManager.as' namespace='MainApplication' access='public' baseclass='flash.events:EventDispatcher' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The core controller class.

	 Manages the loading and unloading of the modules as well as the communication between them and the model related data.

	 Modules a loaded by name, their functions are accessed via <code>ICustomModule</code> interface.

	 The view component of the modules get connected with the <code>DisplayManager</code>

	 

	 ]]></description>
<author><![CDATA[Jan Küster

	 

	 ]]></author>
<see><![CDATA[Interfaces.ICustomModule;

	 ]]></see>
<see><![CDATA[MainApplication.DisplayManager

	 ]]></see>
</classRec>
<method name='MainAppManager' fullname='MainApplication:MainAppManager/MainAppManager' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Constructor, no parameters.

		 ]]></description>
</method>
<method name='getView' fullname='MainApplication:MainAppManager/getView' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
<description><![CDATA[

		 Returns a reference to the view component, owned by the current module instance.

		 

		 ]]></description>
<author><![CDATA[Jan Küster

		 

		 ]]></author>
<return><![CDATA[Object view object, usually a group based mxml component

		 ]]></return>
</method>
<method name='loadModule' fullname='MainApplication:MainAppManager/private:loadModule' isStatic='false' isFinal='false' isOverride='false'  param_names='className' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onGlobalsFault' fullname='MainApplication:MainAppManager/private:onGlobalsFault' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onGlobalsLoaded' fullname='MainApplication:MainAppManager/private:onGlobalsLoaded' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onInstanceLoadComplete' fullname='MainApplication:MainAppManager/private:onInstanceLoadComplete' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onModuleFinished' fullname='MainApplication:MainAppManager/private:onModuleFinished' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='Shared:CustomModuleEvents' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onTCBuild' fullname='MainApplication:MainAppManager/private:onTCBuild' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onTCError' fullname='MainApplication:MainAppManager/private:onTCError' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onUserCreationError' fullname='MainApplication:MainAppManager/private:onUserCreationError' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='sendTweenComplete' fullname='MainApplication:MainAppManager/sendTweenComplete' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Sends to the module instance, that the display tween is finished. This ensures a delay of starting animations or scripts until the new screen is visible.

		 

		 ]]></description>
<author><![CDATA[
		 ]]></author>
</method>
<field name='ClassReference' fullname='MainApplication:MainAppManager/private:ClassReference' type='Class' isStatic='false' isConst='false' >
</field>
<field name='LOAD_COMPLETE' fullname='MainApplication:MainAppManager/LOAD_COMPLETE' type='String' isStatic='true' isConst='true' defaultValue='loadComplete' >
</field>
<field name='MODULE_FINISHED' fullname='MainApplication:MainAppManager/MODULE_FINISHED' type='String' isStatic='true' isConst='true' defaultValue='creationComplete' >
</field>
<field name='finishedRef' fullname='MainApplication:MainAppManager/private:finishedRef' type='MainApplication:TestFinishedObject' isStatic='false' isConst='false' defaultValue='null' >
</field>
<field name='globals' fullname='MainApplication:MainAppManager/private:globals' type='Model:Globals' isStatic='false' isConst='false' >
</field>
<field name='instance' fullname='MainApplication:MainAppManager/private:instance' type='Interfaces:ICustomModule' isStatic='false' isConst='false' >
</field>
<field name='itemRef' fullname='MainApplication:MainAppManager/private:itemRef' type='ItemApplication:ItemObject' isStatic='false' isConst='false' defaultValue='null' >
</field>
<field name='loginRef' fullname='MainApplication:MainAppManager/private:loginRef' type='MainApplication:LoginObject' isStatic='false' isConst='false' defaultValue='null' >
</field>
<field name='overviewRef' fullname='MainApplication:MainAppManager/private:overviewRef' type='MainApplication:OverviewObject' isStatic='false' isConst='false' defaultValue='null' >
</field>
<field name='session' fullname='MainApplication:MainAppManager/private:session' type='Model:Session' isStatic='false' isConst='false' >
</field>
<field name='starAppRef' fullname='MainApplication:MainAppManager/private:starAppRef' type='MainApplication:StartAppObject' isStatic='false' isConst='false' defaultValue='null' >
</field>
<field name='tc' fullname='MainApplication:MainAppManager/private:tc' type='Model:TestCollection' isStatic='false' isConst='false' >
</field>
<field name='user' fullname='MainApplication:MainAppManager/private:user' type='Model:UserObject' isStatic='false' isConst='false' >
</field>
<classRec name='StartAppObject' fullname='MainApplication:StartAppObject' sourcefile='C:\lea\Itementwicklung\xmlTest\src\MainApplication\StartAppObject.as' namespace='MainApplication' access='public' baseclass='Shared:EventDispatcher' interfaces='Interfaces:ICustomModule;Interfaces:ICustomEventDispatcher' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 <p>First module, loaded after initialization of the application. Includes a VideoPlayer for introducing the applications funcionalities.</p> 

	 ]]></description>
</classRec>
<method name='StartAppObject' fullname='MainApplication:StartAppObject/StartAppObject' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Constructor

		 ]]></description>
</method>
<method name='getClassDefinition' fullname='MainApplication:StartAppObject/getClassDefinition' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='load' fullname='MainApplication:StartAppObject/load' isStatic='false' isFinal='false' isOverride='false'  param_names='_globals;_tcollection;_session' param_types='Model:Globals;Model:TestCollection;Model:Session' param_defaults='undefined;undefined;undefined' result_type='void'>
</method>
<method name='onStartApplication' fullname='MainApplication:StartAppObject/private:onStartApplication' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='onVideoComplete' fullname='MainApplication:StartAppObject/private:onVideoComplete' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='org.osmf.events:TimeEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onVideoPlay' fullname='MainApplication:StartAppObject/private:onVideoPlay' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='mx.events:FlexEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='returnLoadFinishedEvent' fullname='MainApplication:StartAppObject/returnLoadFinishedEvent' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='returnModuleFinishedEvent' fullname='MainApplication:StartAppObject/returnModuleFinishedEvent' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='returnView' fullname='MainApplication:StartAppObject/returnView' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
</method>
<method name='sendTweenFinished' fullname='MainApplication:StartAppObject/sendTweenFinished' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='unload' fullname='MainApplication:StartAppObject/unload' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='debug' fullname='MainApplication:StartAppObject/debug/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='soundMode' fullname='MainApplication:StartAppObject/soundMode/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='debug' fullname='MainApplication:StartAppObject/debug/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='soundMode' fullname='MainApplication:StartAppObject/soundMode/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<field name='LOAD_COMPLETE' fullname='MainApplication:StartAppObject/LOAD_COMPLETE' type='String' isStatic='true' isConst='true' defaultValue='loadComplete' >
</field>
<field name='_debug' fullname='MainApplication:StartAppObject/private:_debug' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_sound' fullname='MainApplication:StartAppObject/private:_sound' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='view' fullname='MainApplication:StartAppObject/view' type='DisplayApplication:StartAppView' isStatic='false' isConst='false' >
<description><![CDATA[

		 The view component, which will be linked to the display.

		 

		 ]]></description>
<see><![CDATA[MainApplication.MainAppManager

		 ]]></see>
<see><![CDATA[MainApplication.DisplayManager

		 ]]></see>
</field>
<classRec name='TestFinishedObject' fullname='MainApplication:TestFinishedObject' sourcefile='C:\lea\Itementwicklung\xmlTest\src\MainApplication\TestFinishedObject.as' namespace='MainApplication' access='public' baseclass='Shared:EventDispatcher' interfaces='Interfaces:ICustomModule;Interfaces:ICustomEventDispatcher' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 After finishing a test, this Class is loaded to provide functions for printing the evaluation and choosing the further activities.

	 

	 ]]></description>
</classRec>
<method name='TestFinishedObject' fullname='MainApplication:TestFinishedObject/TestFinishedObject' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 empty constructor

		 ]]></description>
</method>
<method name='getClassDefinition' fullname='MainApplication:TestFinishedObject/getClassDefinition' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='load' fullname='MainApplication:TestFinishedObject/load' isStatic='false' isFinal='false' isOverride='false'  param_names='_globals;_tcollection;_session' param_types='Model:Globals;Model:TestCollection;Model:Session' param_defaults='undefined;undefined;undefined' result_type='void'>
</method>
<method name='onCreationComplete' fullname='MainApplication:TestFinishedObject/private:onCreationComplete' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='mx.events:FlexEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onNewTest' fullname='MainApplication:TestFinishedObject/private:onNewTest' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='onNextState' fullname='MainApplication:TestFinishedObject/private:onNextState' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='playAudio' fullname='MainApplication:TestFinishedObject/private:playAudio' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='returnLoadFinishedEvent' fullname='MainApplication:TestFinishedObject/returnLoadFinishedEvent' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='returnModuleFinishedEvent' fullname='MainApplication:TestFinishedObject/returnModuleFinishedEvent' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='returnView' fullname='MainApplication:TestFinishedObject/returnView' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
</method>
<method name='sendTweenFinished' fullname='MainApplication:TestFinishedObject/sendTweenFinished' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='unload' fullname='MainApplication:TestFinishedObject/unload' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='debug' fullname='MainApplication:TestFinishedObject/debug/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='soundMode' fullname='MainApplication:TestFinishedObject/soundMode/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='debug' fullname='MainApplication:TestFinishedObject/debug/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='soundMode' fullname='MainApplication:TestFinishedObject/soundMode/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<field name='LOAD_COMPLETE' fullname='MainApplication:TestFinishedObject/LOAD_COMPLETE' type='String' isStatic='true' isConst='true' defaultValue='loadComplete' >
</field>
<field name='_debug' fullname='MainApplication:TestFinishedObject/private:_debug' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_sound' fullname='MainApplication:TestFinishedObject/private:_sound' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_urls' fullname='MainApplication:TestFinishedObject/private:_urls' type='Array' isStatic='false' isConst='false' >
</field>
<field name='buttonSoundUrl' fullname='MainApplication:TestFinishedObject/private:buttonSoundUrl' type='String' isStatic='false' isConst='false' >
</field>
<field name='labelSoundUrl' fullname='MainApplication:TestFinishedObject/private:labelSoundUrl' type='String' isStatic='false' isConst='false' >
</field>
<field name='labels' fullname='MainApplication:TestFinishedObject/private:labels' type='Array' isStatic='false' isConst='false' >
</field>
<field name='references' fullname='MainApplication:TestFinishedObject/private:references' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='rootUrl' fullname='MainApplication:TestFinishedObject/private:rootUrl' type='String' isStatic='false' isConst='false' >
</field>
<field name='scriptUrl' fullname='MainApplication:TestFinishedObject/private:scriptUrl' type='String' isStatic='false' isConst='false' >
</field>
<field name='soundUrl' fullname='MainApplication:TestFinishedObject/private:soundUrl' type='String' isStatic='false' isConst='false' >
</field>
<field name='view' fullname='MainApplication:TestFinishedObject/private:view' type='DisplayApplication:TestFinishedView' isStatic='false' isConst='false' >
</field>
<classRec name='LoginObject' fullname='MainApplication:LoginObject' sourcefile='C:\lea\Itementwicklung\xmlTest\src\MainApplication\LoginObject.as' namespace='MainApplication' access='public' baseclass='Shared:EventDispatcher' interfaces='Interfaces:ICustomModule;Interfaces:ICustomEventDispatcher' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Represents a login form handler. User input will be sent to the server, server evaluates and answers with a value. The value influences the state of the handler and

	 either a login is performed or fault or a new user code is requestet.

	 ]]></description>
</classRec>
<method name='LoginObject' fullname='MainApplication:LoginObject/LoginObject' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 constructor. No variables will be pased. Initializes view component.

		 ]]></description>
</method>
<method name='getClassDefinition' fullname='MainApplication:LoginObject/getClassDefinition' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='getUserData' fullname='MainApplication:LoginObject/private:getUserData' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='mx.rpc.events:ResultEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='initHandlers' fullname='MainApplication:LoginObject/private:initHandlers' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='keyHandler' fullname='MainApplication:LoginObject/private:keyHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:KeyboardEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='load' fullname='MainApplication:LoginObject/load' isStatic='false' isFinal='false' isOverride='false'  param_names='_globals;_tcollection;_session' param_types='Model:Globals;Model:TestCollection;Model:Session' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Extracts the urls and paths from the globals model and prepares the http service for server request.

		 

		 ]]></description>
<param><![CDATA[_globals the global settings lib object, storing all labels and paths for the application

		 ]]></param>
<param><![CDATA[_tcollection the testcollection lib object, not used in this class

		 ]]></param>
<param><![CDATA[_session the session lib object, not used in this class

		 ]]></param>
</method>
<method name='onEnterLogin' fullname='MainApplication:LoginObject/private:onEnterLogin' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onFault' fullname='MainApplication:LoginObject/private:onFault' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='mx.rpc.events:FaultEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onMouseOver' fullname='MainApplication:LoginObject/private:onMouseOver' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onNewUserResult' fullname='MainApplication:LoginObject/private:onNewUserResult' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='mx.rpc.events:ResultEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onResult' fullname='MainApplication:LoginObject/private:onResult' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='mx.rpc.events:ResultEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onViewCreation' fullname='MainApplication:LoginObject/private:onViewCreation' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='mx.events:FlexEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='playAudio' fullname='MainApplication:LoginObject/private:playAudio' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='requestData' fullname='MainApplication:LoginObject/requestData' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 This method starts the http request.

		 ]]></description>
</method>
<method name='requestNewUser' fullname='MainApplication:LoginObject/private:requestNewUser' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='returnLoadFinishedEvent' fullname='MainApplication:LoginObject/returnLoadFinishedEvent' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='returnModuleFinishedEvent' fullname='MainApplication:LoginObject/returnModuleFinishedEvent' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='returnUserData' fullname='MainApplication:LoginObject/returnUserData' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[

		 For other objects, to retrieve userdata url.

		 ]]></description>
</method>
<method name='returnView' fullname='MainApplication:LoginObject/returnView' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
</method>
<method name='sendTweenFinished' fullname='MainApplication:LoginObject/sendTweenFinished' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 not required in this class

		 ]]></description>
</method>
<method name='send' fullname='MainApplication:LoginObject/private:send' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='unload' fullname='MainApplication:LoginObject/unload' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='_loginState' fullname='MainApplication:LoginObject/_loginState/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_userDataUrl' fullname='MainApplication:LoginObject/_userDataUrl/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='data' fullname='MainApplication:LoginObject/data/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
</method>
<method name='debug' fullname='MainApplication:LoginObject/debug/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='soundMode' fullname='MainApplication:LoginObject/soundMode/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='_loginState' fullname='MainApplication:LoginObject/_loginState/set' isStatic='false' isFinal='false' isOverride='false'  param_names='newState' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_userDataUrl' fullname='MainApplication:LoginObject/_userDataUrl/set' isStatic='false' isFinal='false' isOverride='false'  param_names='newString' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='data' fullname='MainApplication:LoginObject/data/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<method name='debug' fullname='MainApplication:LoginObject/debug/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='soundMode' fullname='MainApplication:LoginObject/soundMode/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<field name='LOAD_COMPLETE' fullname='MainApplication:LoginObject/LOAD_COMPLETE' type='String' isStatic='true' isConst='true' defaultValue='loadComplete' >
</field>
<field name='LOGIN_FAULT' fullname='MainApplication:LoginObject/LOGIN_FAULT' type='String' isStatic='true' isConst='true' defaultValue='logInFault' >
</field>
<field name='LOGIN_SUCCESS' fullname='MainApplication:LoginObject/LOGIN_SUCCESS' type='String' isStatic='true' isConst='true' defaultValue='loginSuccess' >
</field>
<field name='REQUEST_ERROR' fullname='MainApplication:LoginObject/REQUEST_ERROR' type='String' isStatic='true' isConst='true' defaultValue='requestError' >
</field>
<field name='USERDATA_RECEIVED' fullname='MainApplication:LoginObject/USERDATA_RECEIVED' type='String' isStatic='true' isConst='true' defaultValue='userDataReceived' >
</field>
<field name='_data' fullname='MainApplication:LoginObject/private:_data' type='Object' isStatic='false' isConst='false' defaultValue='null' >
</field>
<field name='_debug' fullname='MainApplication:LoginObject/private:_debug' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_listeners' fullname='MainApplication:LoginObject/private:_listeners' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_sound' fullname='MainApplication:LoginObject/private:_sound' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='labelList' fullname='MainApplication:LoginObject/private:labelList' type='Array' isStatic='false' isConst='false' >
</field>
<field name='loginState' fullname='MainApplication:LoginObject/protected:loginState' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='mediaUrl' fullname='MainApplication:LoginObject/private:mediaUrl' type='String' isStatic='false' isConst='false' >
</field>
<field name='newCodeScriptURL' fullname='MainApplication:LoginObject/private:newCodeScriptURL' type='String' isStatic='false' isConst='false' >
</field>
<field name='newUserString' fullname='MainApplication:LoginObject/private:newUserString' type='String' isStatic='false' isConst='false' defaultValue='' >
</field>
<field name='references' fullname='MainApplication:LoginObject/private:references' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='scriptUrl' fullname='MainApplication:LoginObject/private:scriptUrl' type='String' isStatic='false' isConst='false' >
</field>
<field name='soundUrl' fullname='MainApplication:LoginObject/private:soundUrl' type='String' isStatic='false' isConst='false' >
</field>
<field name='userDataUrl' fullname='MainApplication:LoginObject/private:userDataUrl' type='String' isStatic='false' isConst='false' defaultValue='' >
</field>
<field name='userDataXml' fullname='MainApplication:LoginObject/private:userDataXml' type='XML' isStatic='false' isConst='false' >
</field>
<field name='user_login' fullname='MainApplication:LoginObject/private:user_login' type='mx.rpc.http:HTTPService' isStatic='false' isConst='false' >
</field>
<field name='user_newCode' fullname='MainApplication:LoginObject/private:user_newCode' type='mx.rpc.http:HTTPService' isStatic='false' isConst='false' >
</field>
<field name='view' fullname='MainApplication:LoginObject/view' type='DisplayApplication:LogInView' isStatic='false' isConst='false' >
</field>
<classRec name='OverviewObject' fullname='MainApplication:OverviewObject' sourcefile='C:\lea\Itementwicklung\xmlTest\src\MainApplication\OverviewObject.as' namespace='MainApplication' access='public' baseclass='Shared:EventDispatcher' interfaces='Interfaces:ICustomModule;Interfaces:ICustomEventDispatcher' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 the handler class for an overview, where users will choose their next testcollection by choosing a dimension and the corresponding level.

	 ]]></description>
</classRec>
<method name='OverviewObject' fullname='MainApplication:OverviewObject/OverviewObject' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 constructor, initializes view component.

		 ]]></description>
</method>
<method name='combineData' fullname='MainApplication:OverviewObject/private:combineData' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='mx.events:FlexEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getClassDefinition' fullname='MainApplication:OverviewObject/getClassDefinition' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[

		 returns the package and calass name as a string to allow search within the loader management

		 ]]></description>
</method>
<method name='loadItem' fullname='MainApplication:OverviewObject/private:loadItem' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='load' fullname='MainApplication:OverviewObject/load' isStatic='false' isFinal='false' isOverride='false'  param_names='_globals;_tcollection;_session' param_types='Model:Globals;Model:TestCollection;Model:Session' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 loads path urls and labels from globals. Makes a reference to testcollection, because we need this later for session building.

		 

		 ]]></description>
<param><![CDATA[_globals reference to the globals lib

		 ]]></param>
<param><![CDATA[_tcollection reference to the testcollection lib

		 ]]></param>
<param><![CDATA[_session reference to the session lib, not used in this class

		 ]]></param>
</method>
<method name='playAudio' fullname='MainApplication:OverviewObject/private:playAudio' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<see><![CDATA[Interfaces.IClickableComponent

		 ]]></see>
<private><![CDATA[]]></private>
</method>
<method name='returnLoadFinishedEvent' fullname='MainApplication:OverviewObject/returnLoadFinishedEvent' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[

		 allows adding event listeners because get function will not work for constants

		 ]]></description>
</method>
<method name='returnModuleFinishedEvent' fullname='MainApplication:OverviewObject/returnModuleFinishedEvent' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[

		 allows adding event listeners because get function will not work for constants

		 ]]></description>
</method>
<method name='returnView' fullname='MainApplication:OverviewObject/returnView' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
<description><![CDATA[

		 Returns a reference to the view component.

		 ]]></description>
</method>
<method name='sendTweenFinished' fullname='MainApplication:OverviewObject/sendTweenFinished' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 not used in this class

		 ]]></description>
</method>
<method name='showDimensionDescription' fullname='MainApplication:OverviewObject/private:showDimensionDescription' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='showLevelDescription' fullname='MainApplication:OverviewObject/private:showLevelDescription' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='showLevel' fullname='MainApplication:OverviewObject/private:showLevel' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='unload' fullname='MainApplication:OverviewObject/unload' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 cleanup event listeners and references 

		 ]]></description>
</method>
<method name='debug' fullname='MainApplication:OverviewObject/debug/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 gets debug value 

		 ]]></description>
</method>
<method name='soundMode' fullname='MainApplication:OverviewObject/soundMode/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 gets sounddebug value

		 ]]></description>
</method>
<method name='debug' fullname='MainApplication:OverviewObject/debug/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 sets debug value

		 ]]></description>
</method>
<method name='soundMode' fullname='MainApplication:OverviewObject/soundMode/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 sets sounddebug value

		 ]]></description>
</method>
<field name='LOAD_COMPLETE' fullname='MainApplication:OverviewObject/LOAD_COMPLETE' type='String' isStatic='true' isConst='true' defaultValue='loadComplete' >
<description><![CDATA[

		 representing the event, where this class has finished the loading process

		 ]]></description>
</field>
<field name='_debug' fullname='MainApplication:OverviewObject/private:_debug' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_sound' fullname='MainApplication:OverviewObject/private:_sound' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='chosenLevel' fullname='MainApplication:OverviewObject/private:chosenLevel' type='int' isStatic='false' isConst='false' >
</field>
<field name='chosenSubject' fullname='MainApplication:OverviewObject/private:chosenSubject' type='int' isStatic='false' isConst='false' >
</field>
<field name='itemToLoad' fullname='MainApplication:OverviewObject/private:itemToLoad' type='String' isStatic='false' isConst='false' >
</field>
<field name='labels' fullname='MainApplication:OverviewObject/private:labels' type='Array' isStatic='false' isConst='false' >
</field>
<field name='references' fullname='MainApplication:OverviewObject/private:references' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='root' fullname='MainApplication:OverviewObject/private:root' type='String' isStatic='false' isConst='false' >
</field>
<field name='scriptUrl' fullname='MainApplication:OverviewObject/private:scriptUrl' type='String' isStatic='false' isConst='false' >
</field>
<field name='soundUrl' fullname='MainApplication:OverviewObject/private:soundUrl' type='String' isStatic='false' isConst='false' >
</field>
<field name='state' fullname='MainApplication:OverviewObject/private:state' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='tcReference' fullname='MainApplication:OverviewObject/private:tcReference' type='Model:TestCollection' isStatic='false' isConst='false' defaultValue='null' >
</field>
<field name='urls' fullname='MainApplication:OverviewObject/private:urls' type='Array' isStatic='false' isConst='false' >
</field>
<field name='view' fullname='MainApplication:OverviewObject/private:view' type='DisplayApplication:Overview' isStatic='false' isConst='false' >
</field>
<classRec name='DisplayManager' fullname='MainApplication:DisplayManager' sourcefile='C:\lea\Itementwicklung\xmlTest\src\MainApplication\DisplayManager.as' namespace='MainApplication' access='public' baseclass='spark.components:BorderContainer' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The DisplayManager is one of the core classes to provide a management all visual components.

	 This allows the <code>MainAppmanager</code> to include or remove specific view components of a module.

	 

	 ]]></description>
<see><![CDATA[MainApplication.MainAppManager

	 

	 ]]></see>
<metadata>
	<DefaultProperty owner='MainApplication:DisplayManager' name='mxmlContentFactory' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='DisplayManager' fullname='MainApplication:DisplayManager/DisplayManager' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Constructor, no args. Set the default size of the wrapper.

		 ]]></description>
</method>
<method name='removeContent' fullname='MainApplication:DisplayManager/removeContent' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 clears the screen.

		 ]]></description>
</method>
<method name='setContent' fullname='MainApplication:DisplayManager/setContent' isStatic='false' isFinal='false' isOverride='false'  param_names='ob;_title' param_types='Object;Boolean' param_defaults='undefined;false' result_type='void'>
<description><![CDATA[

		 Links the Displaymanager with the viewcomponent of the actual module.

		 

		 ]]></description>
<param><![CDATA[ob an object reference to the actual module

		 ]]></param>
<param><![CDATA[_title defined, wether the tween is the title screen or a normal alpha tween

		 

		 ]]></param>
<see><![CDATA[layer the image which will be faded to alpha 0

		 ]]></see>
<see><![CDATA[#showDisplay() the tween animation

		 ]]></see>
</method>
<method name='showDisplay' fullname='MainApplication:DisplayManager/private:showDisplay' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:TimerEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='showTitle' fullname='MainApplication:DisplayManager/private:showTitle' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:TimerEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='DISPLAY_ERROR' fullname='MainApplication:DisplayManager/DISPLAY_ERROR' type='String' isStatic='true' isConst='true' defaultValue='dispalyError' >
</field>
<field name='DISPLAY_TWEENEDOUT' fullname='MainApplication:DisplayManager/DISPLAY_TWEENEDOUT' type='String' isStatic='true' isConst='true' defaultValue='displayTweenedOut' >
<description><![CDATA[

		 Event Const for dispatching status of tweened out / fade out complete.

		 

		 ]]></description>
<eventType><![CDATA[flash.events.Event

		 ]]></eventType>
<see><![CDATA[layer

		 ]]></see>
</field>
<field name='inheritedObj' fullname='MainApplication:DisplayManager/inheritedObj' type='Object' isStatic='false' isConst='false' >
<description><![CDATA[

		 The target object, which will be dispalyed on the screen.

		 ]]></description>
</field>
<field name='layer' fullname='MainApplication:DisplayManager/private:layer' type='mx.controls:Image' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='timeCount' fullname='MainApplication:DisplayManager/private:timeCount' type='Number' isStatic='false' isConst='false' defaultValue='100' >
</field>
<field name='timer' fullname='MainApplication:DisplayManager/private:timer' type='flash.utils:Timer' isStatic='false' isConst='false' >
</field>
<field name='title' fullname='MainApplication:DisplayManager/private:title' type='mx.controls:Image' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<classRec name='BasicEnumeration' fullname='enumTypes:BasicEnumeration' sourcefile='C:\lea\Itementwicklung\xmlTest\src\enumTypes\BasicEnumeration.as' namespace='enumTypes' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Basic grid of an enumeration.

	 ]]></description>
</classRec>
<method name='BasicEnumeration' fullname='enumTypes:BasicEnumeration/BasicEnumeration' isStatic='false' isFinal='false' isOverride='false'  param_names='newValue;newOrdinal' param_types='String;int' param_defaults='undefined;undefined' result_type='*'>
<description><![CDATA[

		 Constructor.

		 ]]></description>
</method>
<method name='getNumber' fullname='enumTypes:BasicEnumeration/getNumber' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[

		 Get the ordinal number of an enum-.

		 ]]></description>
</method>
<method name='getValue' fullname='enumTypes:BasicEnumeration/getValue' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[

		 Get the String value of an enum.

		 ]]></description>
</method>
<field name='_list' fullname='enumTypes:BasicEnumeration/protected:_list' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='ordinal' fullname='enumTypes:BasicEnumeration/protected:ordinal' type='uint' isStatic='false' isConst='false' >
</field>
<field name='value' fullname='enumTypes:BasicEnumeration/protected:value' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='UrlTypeEnum' fullname='enumTypes:UrlTypeEnum' sourcefile='C:\lea\Itementwicklung\xmlTest\src\enumTypes\UrlTypeEnum.as' namespace='enumTypes' access='public' baseclass='enumTypes:BasicEnumeration' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Collection of enumeration ids, to access globals parameters. They are hardcoded, so changes in this file will require changes in the globals file and vice versa.

	 ]]></description>
</classRec>
<method name='UrlTypeEnum' fullname='enumTypes:UrlTypeEnum/UrlTypeEnum' isStatic='false' isFinal='false' isOverride='false'  param_names='newValue;newOrdinal' param_types='String;int' param_defaults='undefined;undefined' result_type='*'>
<description><![CDATA[

		 Constructor.

		 

		 ]]></description>
<param><![CDATA[newValue the string value, represented by the enumeration.

		 ]]></param>
<param><![CDATA[newOrdinal the position in the sequence of the enumeration.

		 ]]></param>
</method>
<method name='selectByValue' fullname='enumTypes:UrlTypeEnum/selectByValue' isStatic='true' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='enumTypes:UrlTypeEnum'>
<description><![CDATA[

		 looks for an enumeration by a passed string value. Returns null of not found.

		 ]]></description>
</method>
<method name='list' fullname='enumTypes:UrlTypeEnum/list/get' isStatic='true' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[

		returns an array with all enums.

		]]></description>
</method>
<field name='INCLUDE_SCRIPT' fullname='enumTypes:UrlTypeEnum/INCLUDE_SCRIPT' type='enumTypes:UrlTypeEnum' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[

		 The relative path to the includescript. Must be combined with ROOT to a full usable url

		 ]]></description>
</field>
<field name='ITEM' fullname='enumTypes:UrlTypeEnum/ITEM' type='enumTypes:UrlTypeEnum' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[

		 The relative path to the itemData directories. Must be combined with ROOT. 

		 ]]></description>
</field>
<field name='ROOT' fullname='enumTypes:UrlTypeEnum/ROOT' type='enumTypes:UrlTypeEnum' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[

		 Represents the root url on the server. It must be a realtive path to the root directory of this application and will be combined with other paths to load specific data or scripts

		 

		 <p>Example: <code>http://mydomain.subdomain.com/apps/thisapp/</code></p>

		 ]]></description>
</field>
<field name='SOUNDS' fullname='enumTypes:UrlTypeEnum/SOUNDS' type='enumTypes:UrlTypeEnum' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[

		 The relative path to the application sounds on the serve. Does not include item sounds. Must be combined with ROOT. 

		 ]]></description>
</field>
<field name='USER' fullname='enumTypes:UrlTypeEnum/USER' type='enumTypes:UrlTypeEnum' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[

		 The relative path to the userData directories. Must be combined with ROOT.

		 ]]></description>
</field>
<classRec name='ErrorTypeEnum' fullname='enumTypes:ErrorTypeEnum' sourcefile='C:\lea\Itementwicklung\xmlTest\src\enumTypes\ErrorTypeEnum.as' namespace='enumTypes' access='public' baseclass='enumTypes:BasicEnumeration' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Enumeration of error types to indicate the number and the type of the error.

	 ]]></description>
</classRec>
<method name='ErrorTypeEnum' fullname='enumTypes:ErrorTypeEnum/ErrorTypeEnum' isStatic='false' isFinal='false' isOverride='false'  param_names='newValue;newOrdinal' param_types='String;int' param_defaults='undefined;undefined' result_type='*'>
<description><![CDATA[

		 Constructor.

		 ]]></description>
</method>
<method name='selectByValue' fullname='enumTypes:ErrorTypeEnum/selectByValue' isStatic='true' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='enumTypes:ErrorTypeEnum'>
<description><![CDATA[

		 looks for an enumeration by a passed string value. Returns null of not found.

		 ]]></description>
</method>
<method name='list' fullname='enumTypes:ErrorTypeEnum/list/get' isStatic='true' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[

		 returns an array with all enums.

		 ]]></description>
</method>
<field name='CANNOT_LOAD_MODULE' fullname='enumTypes:ErrorTypeEnum/CANNOT_LOAD_MODULE' type='enumTypes:ErrorTypeEnum' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='CANNOT_PLAY_AUDIO_ERROR' fullname='enumTypes:ErrorTypeEnum/CANNOT_PLAY_AUDIO_ERROR' type='enumTypes:ErrorTypeEnum' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='NULLREFERENCE' fullname='enumTypes:ErrorTypeEnum/NULLREFERENCE' type='enumTypes:ErrorTypeEnum' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='URL_INVALID_ERROR' fullname='enumTypes:ErrorTypeEnum/URL_INVALID_ERROR' type='enumTypes:ErrorTypeEnum' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<classRec name='PHPParameterTypeEnum' fullname='enumTypes:PHPParameterTypeEnum' sourcefile='C:\lea\Itementwicklung\xmlTest\src\enumTypes\PHPParameterTypeEnum.as' namespace='enumTypes' access='public' baseclass='enumTypes:BasicEnumeration' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Collection of enumeration ids, to access php parameters. They are hardcoded, so changes in this file will require changes in the include php file and vice versa.

	 ]]></description>
</classRec>
<method name='PHPParameterTypeEnum' fullname='enumTypes:PHPParameterTypeEnum/PHPParameterTypeEnum' isStatic='false' isFinal='false' isOverride='false'  param_names='newValue;newOrdinal' param_types='String;int' param_defaults='undefined;undefined' result_type='*'>
<description><![CDATA[

		 Constructor. See extended class.

		 ]]></description>
</method>
<method name='selectByValue' fullname='enumTypes:PHPParameterTypeEnum/selectByValue' isStatic='true' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='enumTypes:PHPParameterTypeEnum'>
<description><![CDATA[

		 looks for an enumeration by a passed string value. Returns null of not found.

		 ]]></description>
</method>
<method name='list' fullname='enumTypes:PHPParameterTypeEnum/list/get' isStatic='true' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[

		 returns an array with all enums.

		 ]]></description>
</method>
<field name='CREATE_NEW_USER' fullname='enumTypes:PHPParameterTypeEnum/CREATE_NEW_USER' type='enumTypes:PHPParameterTypeEnum' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[

		 The parametername to access the newUser script in the php include file.

		 ]]></description>
</field>
<field name='GET_AUDIO' fullname='enumTypes:PHPParameterTypeEnum/GET_AUDIO' type='enumTypes:PHPParameterTypeEnum' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[

		 The parametername to access the getAudio script in the php include file.

		 ]]></description>
</field>
<field name='GET_IMAGE' fullname='enumTypes:PHPParameterTypeEnum/GET_IMAGE' type='enumTypes:PHPParameterTypeEnum' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[

		 The parametername to access the getImage script in the php include file.

		 ]]></description>
</field>
<field name='GET_ITEM_DATA' fullname='enumTypes:PHPParameterTypeEnum/GET_ITEM_DATA' type='enumTypes:PHPParameterTypeEnum' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[

		 The parametername to access the getItem script in the php include file.

		 ]]></description>
</field>
<field name='GET_USERDATA' fullname='enumTypes:PHPParameterTypeEnum/GET_USERDATA' type='enumTypes:PHPParameterTypeEnum' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[

		 The parametername to access the getUser script in the php include file.

		 ]]></description>
</field>
<field name='LOGIN' fullname='enumTypes:PHPParameterTypeEnum/LOGIN' type='enumTypes:PHPParameterTypeEnum' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[

		 The parameter name to access the loginScript in the php include file.

		 ]]></description>
</field>
<field name='SEND_ERROR_MESSAGE' fullname='enumTypes:PHPParameterTypeEnum/SEND_ERROR_MESSAGE' type='enumTypes:PHPParameterTypeEnum' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[

		 The parametername to access the sendError script in the php include file.

		 ]]></description>
</field>
<field name='SEND_FINAL_XML' fullname='enumTypes:PHPParameterTypeEnum/SEND_FINAL_XML' type='enumTypes:PHPParameterTypeEnum' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[

		 The parametername to access the sendFinalXml script in the php include file.

		 ]]></description>
</field>
<field name='UPDATE_USER' fullname='enumTypes:PHPParameterTypeEnum/UPDATE_USER' type='enumTypes:PHPParameterTypeEnum' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[

		 The parametername to access the updateUser script in the php include file.

		 ]]></description>
</field>
<classRec name='Dimension' fullname='Model:Dimension' sourcefile='C:\lea\Itementwicklung\xmlTest\src\Model\Dimension.as' namespace='Model' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 This class represents a dimension or subject with all its included data.

	 ]]></description>
</classRec>
<method name='Dimension' fullname='Model:Dimension/Dimension' isStatic='false' isFinal='false' isOverride='false'  param_names='_name;des;url' param_types='String;String;String' param_defaults='undefined;undefined;undefined' result_type='*'>
<description><![CDATA[

		 Constructor

		 ]]></description>
</method>
<method name='addCollectionToList' fullname='Model:Dimension/addCollectionToList' isStatic='false' isFinal='false' isOverride='false'  param_names='c' param_types='Model:Collection' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 adds a collection object to the collection list. useful if once the collection is created out of an xmllist.

		 ]]></description>
</method>
<method name='addToCollectionList' fullname='Model:Dimension/addToCollectionList' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='XMLList' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 adds an xmllist to the collection list. usually a collection is stored as an xml file, so it can be decoded by itering an xmllis.

		 ]]></description>
</method>
<method name='getDescription' fullname='Model:Dimension/getDescription' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[

		 returns the description of this dimension

		 ]]></description>
</method>
<method name='getName' fullname='Model:Dimension/getName' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[

		 returns the name of this dimension 

		 ]]></description>
</method>
<method name='getSoundUrl' fullname='Model:Dimension/getSoundUrl' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[

		 returns the soundurl of this dimension

		 ]]></description>
</method>
<method name='returnCollectionAt' fullname='Model:Dimension/returnCollectionAt' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='int' param_defaults='undefined' result_type='Model:Collection'>
<description><![CDATA[

		 returns a specific collection by passing an index number as parameter.

		 

		 ]]></description>
<param><![CDATA[index the index of the desired collection

		 ]]></param>
<return><![CDATA[Collection Object (level)

		 ]]></return>
</method>
<method name='returnCollection' fullname='Model:Dimension/returnCollection' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[

		 returns the entire collectionList as an array

		 ]]></description>
</method>
<field name='collectionList' fullname='Model:Dimension/private:collectionList' type='Array' isStatic='false' isConst='false' >
</field>
<field name='description' fullname='Model:Dimension/private:description' type='String' isStatic='false' isConst='false' >
</field>
<field name='name' fullname='Model:Dimension/private:name' type='String' isStatic='false' isConst='false' >
</field>
<field name='soundUrl' fullname='Model:Dimension/private:soundUrl' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='Collection' fullname='Model:Collection' sourcefile='C:\lea\Itementwicklung\xmlTest\src\Model\Collection.as' namespace='Model' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 A class representing one testcollection of a dimension / subject. 

	 

	 ]]></description>
</classRec>
<method name='Collection' fullname='Model:Collection/Collection' isStatic='false' isFinal='false' isOverride='false'  param_names='_name;des;soundurl' param_types='String;String;String' param_defaults='undefined;undefined;undefined' result_type='*'>
<description><![CDATA[

		 Constructor.

		 

		 ]]></description>
<param><![CDATA[_name the name of the difficulty level

		 ]]></param>
<param><![CDATA[des description of this collection and level

		 ]]></param>
<soundurl><![CDATA[url to the sound file, related with the description text

		 ]]></soundurl>
</method>
<method name='addItems' fullname='Model:Collection/addItems' isStatic='false' isFinal='false' isOverride='false'  param_names='_items' param_types='XMLList' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 adds an xmllist of items and excerps the itemnumbers. Stored in a common array.

		 ]]></description>
</method>
<method name='getDescription' fullname='Model:Collection/getDescription' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[

		 returns the description text of this collection

		 ]]></description>
</method>
<method name='getName' fullname='Model:Collection/getName' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[

		 returns the level of the collection

		 ]]></description>
</method>
<method name='getSound' fullname='Model:Collection/getSound' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[

		 reutrns the soundurl of this collection

		 ]]></description>
</method>
<method name='returnItemAt' fullname='Model:Collection/returnItemAt' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='int' param_defaults='undefined' result_type='String'>
<description><![CDATA[

		 reuturns an itemnumber at a specific index. Usefull if you desire the nth-item of the collection.

		 ]]></description>
</method>
<method name='returnItems' fullname='Model:Collection/returnItems' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[

		 returns the array of items

		 ]]></description>
</method>
<field name='description' fullname='Model:Collection/private:description' type='String' isStatic='false' isConst='false' >
</field>
<field name='items' fullname='Model:Collection/private:items' type='Array' isStatic='false' isConst='false' >
</field>
<field name='name' fullname='Model:Collection/private:name' type='String' isStatic='false' isConst='false' >
</field>
<field name='soundUrl' fullname='Model:Collection/private:soundUrl' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='Session' fullname='Model:Session' sourcefile='C:\lea\Itementwicklung\xmlTest\src\Model\Session.as' namespace='Model' access='public' baseclass='Shared:EventDispatcher' interfaces='Interfaces:ICustomEventDispatcher' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 This is a Data Structure, where each session for one item is stored. In detail, it stores the slected dimension, level and item. This ensures, that application always knows, where the user is at the moment.

	 ]]></description>
</classRec>
<method name='Session' fullname='Model:Session/Session' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='updateSession' fullname='Model:Session/updateSession' isStatic='false' isFinal='false' isOverride='false'  param_names='currentDimension;currentLevel;currentItem' param_types='int;int;String' param_defaults='undefined;undefined;undefined' result_type='void'>
</method>
<method name='dimension' fullname='Model:Session/dimension/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
</method>
<method name='item' fullname='Model:Session/item/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='level' fullname='Model:Session/level/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
</method>
<method name='next' fullname='Model:Session/next/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<field name='_dimension' fullname='Model:Session/private:_dimension' type='int' isStatic='false' isConst='false' >
</field>
<field name='_item' fullname='Model:Session/private:_item' type='String' isStatic='false' isConst='false' >
</field>
<field name='_level' fullname='Model:Session/private:_level' type='int' isStatic='false' isConst='false' >
</field>
<field name='_next' fullname='Model:Session/private:_next' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='UserObject' fullname='Model:UserObject' sourcefile='C:\lea\Itementwicklung\xmlTest\src\Model\UserObject.as' namespace='Model' access='public' baseclass='Shared:EventDispatcher' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 This class represents the login session of a certain user. The information are stored temporarily and usually written in an xml file which will be permanently send to the server.

	 ]]></description>
</classRec>
<method name='UserObject' fullname='Model:UserObject/UserObject' isStatic='false' isFinal='false' isOverride='false'  param_names='scriptUrl;_id;navigate2url' param_types='String;String;Boolean' param_defaults='undefined;undefined;false' result_type='*'>
<description><![CDATA[

		 Constructor, initializes the <code>URLLoader</code> but does not call its <code>load()</code> function.

		 

		 ]]></description>
<param><![CDATA[scriptUrl the include script (php) on the server

		 ]]></param>
<param><![CDATA[_id the user id from the login

		 ]]></param>
<param><![CDATA[navigate2url for debugging purposes, opens the navigated url in a new tab or window to enable a view of php echos or error messages

		 ]]></param>
</method>
<method name='handleUserXML' fullname='Model:UserObject/private:handleUserXML' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='load' fullname='Model:UserObject/load' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 First adds variables to the URLLoader to define the parameter for the include script and the Post variable userid then starts the request.

		 ]]></description>
</method>
<method name='onUpdateComplete' fullname='Model:UserObject/private:onUpdateComplete' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='setDebug' fullname='Model:UserObject/setDebug' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='startSession' fullname='Model:UserObject/startSession' isStatic='false' isFinal='false' isOverride='false'  param_names='itemList;dimension;level;scriptUrl' param_types='Array;String;String;String' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Constructs a new entry for the actual Dimension and level, chosen by the user into. Calls the private <code>updateUserXML(scriptUrl)</code> function, 

		 to send the updated xml to php.

		 

		 ]]></description>
<param><![CDATA[itemList An array of all item names within the chosen dimension and level

		 ]]></param>
<param><![CDATA[dimension the chosen dimension or sometimes called subject

		 ]]></param>
<param><![CDATA[level the level of difficulty

		 ]]></param>
<param><![CDATA[scriptUrl the directlink to the php script, which will handle the data

		 

		 ]]></param>
<see><![CDATA[#updateUserXML()

		 ]]></see>
</method>
<method name='unload' fullname='Model:UserObject/private:unload' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='updateItemXML' fullname='Model:UserObject/private:updateItemXML' isStatic='false' isFinal='false' isOverride='false'  param_names='item;timestamp;finalXml;scriptUrl' param_types='String;String;XML;String' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='updateSession' fullname='Model:UserObject/updateSession' isStatic='false' isFinal='false' isOverride='false'  param_names='item;timestamp;finalXml;scriptUrl' param_types='String;String;XML;String' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Updates a session by adding an entry at the data attribute of the item tag. (After item was completed) The entry consists of the

		 userName, the timestamp and the itemnumber and the ending <code>.xml</code>. 

		 <p>This sequence will also be the name of the immediate path to the completed item xml file, which usually will be placed in the same directory as the user xml file</p>

		 <p>Calls the private function   <code>updateUserXML(scriptUrl)</code> to send the data to the server.</p>

		 ]]></description>
</method>
<method name='updateUserXML' fullname='Model:UserObject/private:updateUserXML' isStatic='false' isFinal='false' isOverride='false'  param_names='scriptUrl' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_userData' fullname='Model:UserObject/_userData/get' isStatic='false' isFinal='false' isOverride='false'  result_type='XML'>
<description><![CDATA[

		 returns the userdata as an xml object

		 

		 ]]></description>
<returns><![CDATA[user data file as an xml object

		 ]]></returns>
</method>
<field name='CREATION_COMPLETE' fullname='Model:UserObject/CREATION_COMPLETE' type='String' isStatic='true' isConst='true' defaultValue='creationComplete' >
</field>
<field name='CREATION_ERROR' fullname='Model:UserObject/CREATION_ERROR' type='String' isStatic='true' isConst='true' defaultValue='creationError' >
</field>
<field name='_test' fullname='Model:UserObject/protected:_test' type='XMLList' isStatic='false' isConst='false' >
</field>
<field name='debug' fullname='Model:UserObject/private:debug' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='loader' fullname='Model:UserObject/private:loader' type='flash.net:URLLoader' isStatic='false' isConst='false' >
</field>
<field name='navigate' fullname='Model:UserObject/private:navigate' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='path' fullname='Model:UserObject/private:path' type='String' isStatic='false' isConst='false' >
</field>
<field name='references' fullname='Model:UserObject/private:references' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='relUrl' fullname='Model:UserObject/relUrl' type='String' isStatic='false' isConst='false' >
</field>
<field name='req' fullname='Model:UserObject/private:req' type='flash.net:URLRequest' isStatic='false' isConst='false' >
</field>
<field name='state' fullname='Model:UserObject/protected:state' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='tempTimeStamp' fullname='Model:UserObject/protected:tempTimeStamp' type='String' isStatic='false' isConst='false' >
</field>
<field name='userData' fullname='Model:UserObject/userData' type='XML' isStatic='false' isConst='false' >
</field>
<field name='userName' fullname='Model:UserObject/userName' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='Globals' fullname='Model:Globals' sourcefile='C:\lea\Itementwicklung\xmlTest\src\Model\Globals.as' namespace='Model' access='public' baseclass='Shared:EventDispatcher' interfaces='Interfaces:ICustomEventDispatcher' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 This class is a model for all global settings like paths and labels.

	 

	 <p>The globals.xml file will be analysed and the particular data will be stored in different arrays</p>

	 ]]></description>
</classRec>
<method name='Globals' fullname='Model:Globals/Globals' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Constructor. Http Service will be set up.

		 ]]></description>
</method>
<method name='http_onFault' fullname='Model:Globals/private:http_onFault' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='mx.rpc.events:FaultEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='http_onResult' fullname='Model:Globals/private:http_onResult' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='mx.rpc.events:ResultEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='returnLabelValue' fullname='Model:Globals/returnLabelValue' isStatic='false' isFinal='false' isOverride='false'  param_names='id' param_types='String' param_defaults='undefined' result_type='String'>
<description><![CDATA[

		 returns a specific label by comparing the id of the path.

		 Usually it will ba an UrlTypeEnum but it can also be any string.

		 

		 ]]></description>
<see><![CDATA[enumTypes.UrlTypeEnums

		 ]]></see>
</method>
<method name='returnPathValue' fullname='Model:Globals/returnPathValue' isStatic='false' isFinal='false' isOverride='false'  param_names='id' param_types='String' param_defaults='undefined' result_type='String'>
<description><![CDATA[

		 returns a specific path by comparing the id of the path.

		 Usually it will ba an UrlTypeEnum but it can also be any string.

		 

		 ]]></description>
<see><![CDATA[enumTypes.UrlTypeEnums

		 ]]></see>
</method>
<method name='debugMode' fullname='Model:Globals/debugMode/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 returns a boolean value, whether debug is enabled or disabled

		 ]]></description>
</method>
<method name='labels' fullname='Model:Globals/labels/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[

		 reutns all labels stored in an array 

		 ]]></description>
</method>
<method name='paths' fullname='Model:Globals/paths/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[

		 returns all paths stored in an array

		 ]]></description>
</method>
<method name='soundIgnore' fullname='Model:Globals/soundIgnore/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 returns a boolean value, whether sound is enabled or disabled

		 ]]></description>
</method>
<method name='labels' fullname='Model:Globals/labels/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 writing to labels

		 ]]></description>
</method>
<method name='paths' fullname='Model:Globals/paths/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 writing to paths

		 ]]></description>
</method>
<field name='GLOBALS_FAULT' fullname='Model:Globals/GLOBALS_FAULT' type='String' isStatic='true' isConst='true' defaultValue='globalsFault' >
</field>
<field name='GLOBALS_LOADED' fullname='Model:Globals/GLOBALS_LOADED' type='String' isStatic='true' isConst='true' defaultValue='globalsLoaded' >
</field>
<field name='_debugMode' fullname='Model:Globals/private:_debugMode' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_labels' fullname='Model:Globals/private:_labels' type='Array' isStatic='false' isConst='false' >
</field>
<field name='_paths' fullname='Model:Globals/private:_paths' type='Array' isStatic='false' isConst='false' >
</field>
<field name='_soundIgnore' fullname='Model:Globals/private:_soundIgnore' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='service' fullname='Model:Globals/private:service' type='mx.rpc.http:HTTPService' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='url' fullname='Model:Globals/private:url' type='String' isStatic='true' isConst='false' defaultValue='Assets/globals.xml' >
</field>
<classRec name='TestCollection' fullname='Model:TestCollection' sourcefile='C:\lea\Itementwicklung\xmlTest\src\Model\TestCollection.as' namespace='Model' access='public' baseclass='Shared:EventDispatcher' interfaces='Interfaces:ICustomEventDispatcher' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 This class loads the xml with the contained information about subjects, levels and item IDs and parse it into an XMLLIST. 

	 <p>The data is read-only and will be written only once when the class will be initialized</p>

	 <p>To overwirte the data, the class must be unloaded and be instanciated again</p>

	 

	 ]]></description>
</classRec>
<method name='TestCollection' fullname='Model:TestCollection/TestCollection' isStatic='false' isFinal='false' isOverride='false'  param_names='_relUrl' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 constructor, immediately initializes http service and loads the testcollection from the related Url

		 

		 ]]></description>
<param><![CDATA[_relUrl the relative path to the xml file on the server, will be combined with the url String

		 ]]></param>
</method>
<method name='getALLDimensions' fullname='Model:TestCollection/getALLDimensions' isStatic='false' isFinal='false' isOverride='false'  result_type='XMLList'>
<description><![CDATA[

		 Returns a reference to the data.

		 

		 ]]></description>
<return><![CDATA[XMLList the testcollection data as an XMLList

		 ]]></return>
</method>
<method name='getDimensionAt' fullname='Model:TestCollection/getDimensionAt' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='int' param_defaults='undefined' result_type='Model:Dimension'>
<description><![CDATA[

		 Returns a specific Dimension with all its related levels and items.

		 

		 ]]></description>
<param><![CDATA[index the number of one of the four possible dimensions. See your testcollection xml to determine which number represents which dimension.

		 

		 ]]></param>
<return><![CDATA[if found it returns the appropiate dimension as a Dimension object, if not it returns an empty Dimension object dummy.

		 ]]></return>
<see><![CDATA[Dimension

		 ]]></see>
</method>
<method name='getDimensionByName' fullname='Model:TestCollection/getDimensionByName' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='String' param_defaults='undefined' result_type='Model:Dimension'>
<description><![CDATA[

		 Returns a specific Dimension with all its related levels and items, determined by its name.

		 

		 ]]></description>
<param><![CDATA[name the name of one of the four possible dimensions.

		 

		 ]]></param>
<return><![CDATA[if found it returns the appropiate dimension as a Dimension object, if not it returns an empty Dimension object dummy.

		 ]]></return>
<see><![CDATA[Dimension

		 ]]></see>
</method>
<method name='getDimensionName' fullname='Model:TestCollection/getDimensionName' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='int' param_defaults='undefined' result_type='String'>
<description><![CDATA[

		 Returns the name of a dimension at a given index.

		 

		 ]]></description>
<param><![CDATA[index the specific index of a dimension, ranges within <code>[0..3]</code>

		 ]]></param>
<return><![CDATA[String the name of the dimension as a String value

		 ]]></return>
</method>
<method name='getLevelName' fullname='Model:TestCollection/getLevelName' isStatic='false' isFinal='false' isOverride='false'  param_names='dindex;lindex' param_types='int;int' param_defaults='undefined;undefined' result_type='String'>
<description><![CDATA[

		 Returns the name of a level at a given index.

		 

		 ]]></description>
<param><![CDATA[index the specific index of a dimension, ranges within the amount of levels

		 ]]></param>
<return><![CDATA[String the name of the level as a String value

		 ]]></return>
</method>
<method name='http_onFault' fullname='Model:TestCollection/private:http_onFault' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='mx.rpc.events:FaultEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 dispatched an error event and unloads the service.

		 ]]></description>
</method>
<method name='http_onResult' fullname='Model:TestCollection/private:http_onResult' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='mx.rpc.events:ResultEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 unloads the service and converts the result into an xmllist object. Dispatched a complete event. 

		 ]]></description>
</method>
<method name='searchNextItem' fullname='Model:TestCollection/searchNextItem' isStatic='false' isFinal='false' isOverride='false'  param_names='currentDimension;currentLevel;currentItem' param_types='int;int;String' param_defaults='undefined;undefined;undefined' result_type='String'>
<description><![CDATA[

		 Tries to find the item number of the follwer item. If nothing is found, the actual item was the last one within the current level.

		 

		 ]]></description>
<param><![CDATA[currentDimension	the current dimension, usually stored in a session object or sent by a custommodule event

		 ]]></param>
<param><![CDATA[currentLevel		the current level, usually stored in a session object or sent by a custommodule event

		 ]]></param>
<param><![CDATA[currentItem		the current item, usually stored in a session object or sent by a custommodule event

		 

		 ]]></param>
<return><![CDATA[String if found, the next item id as a String, else null

		 

		 ]]></return>
<see><![CDATA[Shared.CustomModuleEvents

		 ]]></see>
<see><![CDATA[Session

		 ]]></see>
</method>
<field name='TC_BUILD' fullname='Model:TestCollection/TC_BUILD' type='String' isStatic='true' isConst='true' defaultValue='tcBuild' >
</field>
<field name='TC_ERROR' fullname='Model:TestCollection/TC_ERROR' type='String' isStatic='true' isConst='true' defaultValue='tcError' >
</field>
<field name='allDimensions' fullname='Model:TestCollection/private:allDimensions' type='XMLList' isStatic='false' isConst='false' >
</field>
<field name='service' fullname='Model:TestCollection/private:service' type='mx.rpc.http:HTTPService' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='url' fullname='Model:TestCollection/private:url' type='String' isStatic='true' isConst='false' defaultValue='testcollections.xml' >
</field>
<classRec name='ItemEvent' fullname='ItemApplication:ItemEvent' sourcefile='C:\lea\Itementwicklung\xmlTest\src\ItemApplication\ItemEvent.as' namespace='ItemApplication' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Defines a set of events realted to the item object and its children. Also stores the result xml of the actual item, in order to pass it to other handlers.

	 ]]></description>
</classRec>
<method name='ItemEvent' fullname='ItemApplication:ItemEvent/ItemEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;bubbles;cancelable;_dataObject' param_types='String;Boolean;Boolean;Object' param_defaults='undefined;false;false;null' result_type='*'>
<description><![CDATA[

		 constructor, calls superclass.

		 

		 ]]></description>
<param><![CDATA[required: type the name of the event type, see the event constants

		 

		 ]]></param>
<param><![CDATA[bubbles bubbles on or off

		 ]]></param>
<param><![CDATA[cancelable cancelable on or off

		 ]]></param>
<param><![CDATA[_dataObject the dataobject containing the finished item xml, ready to get sent to the server

		 ]]></param>
</method>
<method name='clone' fullname='ItemApplication:ItemEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='_dataObject' fullname='ItemApplication:ItemEvent/_dataObject/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
</method>
<field name='DATA_RECEIVED' fullname='ItemApplication:ItemEvent/DATA_RECEIVED' type='String' isStatic='true' isConst='true' defaultValue='dataReceived' >
</field>
<field name='DATA_SENT' fullname='ItemApplication:ItemEvent/DATA_SENT' type='String' isStatic='true' isConst='true' defaultValue='dataSent' >
</field>
<field name='ITEM_FINISHED' fullname='ItemApplication:ItemEvent/ITEM_FINISHED' type='String' isStatic='true' isConst='true' defaultValue='itemFinished' >
</field>
<field name='ITEM_ONLOAD' fullname='ItemApplication:ItemEvent/ITEM_ONLOAD' type='String' isStatic='true' isConst='true' defaultValue='itemOnload' >
</field>
<field name='PAGE_CHANGED' fullname='ItemApplication:ItemEvent/PAGE_CHANGED' type='String' isStatic='true' isConst='true' defaultValue='pageChanged' >
</field>
<field name='QPAGE_FINISHED' fullname='ItemApplication:ItemEvent/QPAGE_FINISHED' type='String' isStatic='true' isConst='true' defaultValue='qpageFinished' >
</field>
<field name='QPAGE_LOADED' fullname='ItemApplication:ItemEvent/QPAGE_LOADED' type='String' isStatic='true' isConst='true' defaultValue='qpageLoaded' >
</field>
<field name='dataObject' fullname='ItemApplication:ItemEvent/private:dataObject' type='Object' isStatic='false' isConst='false' >
</field>
<classRec name='xmlLoader' fullname='ItemApplication:xmlLoader' sourcefile='C:\lea\Itementwicklung\xmlTest\src\ItemApplication\xmlLoader.as' namespace='ItemApplication' access='public' baseclass='Object' interfaces='flash.events:IEventDispatcher' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 XML Loader Class

	 

	 Version: 	0.1.6

	 DOC: 		02.11.2010

	 Author: 	Jan Küster

	 

	 Last Update: 09.11.2010

	 ]]></description>
</classRec>
<method name='addEventListener' fullname='ItemApplication:xmlLoader/addEventListener' isStatic='false' isFinal='false' isOverride='false'  param_names='type;listener;useCapture;priority;weakRef' param_types='String;Function;Boolean;int;Boolean' param_defaults='undefined;undefined;false;0;false' result_type='void'>
<description><![CDATA[
 ]]></description>
<inheritDoc><![CDATA[]]></inheritDoc>
</method>
<method name='dispatchEvent' fullname='ItemApplication:xmlLoader/dispatchEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[
 ]]></description>
<inheritDoc><![CDATA[]]></inheritDoc>
</method>
<method name='hasEventListener' fullname='ItemApplication:xmlLoader/hasEventListener' isStatic='false' isFinal='false' isOverride='false'  param_names='type' param_types='String' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[
 ]]></description>
<inheritDoc><![CDATA[]]></inheritDoc>
</method>
<method name='isPreScreen' fullname='ItemApplication:xmlLoader/isPreScreen' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='onFault' fullname='ItemApplication:xmlLoader/private:onFault' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='mx.rpc.events:FaultEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onResult' fullname='ItemApplication:xmlLoader/private:onResult' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='mx.rpc.events:ResultEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='removeEventListener' fullname='ItemApplication:xmlLoader/removeEventListener' isStatic='false' isFinal='false' isOverride='false'  param_names='type;listener;useCapture' param_types='String;Function;Boolean' param_defaults='undefined;undefined;false' result_type='void'>
<description><![CDATA[
 ]]></description>
<inheritDoc><![CDATA[]]></inheritDoc>
</method>
<method name='willTrigger' fullname='ItemApplication:xmlLoader/willTrigger' isStatic='false' isFinal='false' isOverride='false'  param_names='type' param_types='String' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[
 ]]></description>
<inheritDoc><![CDATA[]]></inheritDoc>
</method>
<method name='xmlLoader' fullname='ItemApplication:xmlLoader/xmlLoader' isStatic='false' isFinal='false' isOverride='false'  param_names='url' param_types='String' param_defaults='undefined' result_type='*'>
</method>
<method name='xmlResult' fullname='ItemApplication:xmlLoader/xmlResult/get' isStatic='false' isFinal='false' isOverride='false'  result_type='XML'>
<metadata>
	<Bindable owner='ItemApplication:xmlLoader/xmlResult/get' event='propertyChange' >
	</Bindable>
</metadata>
</method>
<method name='xmlResult' fullname='ItemApplication:xmlLoader/xmlResult/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='XML' param_defaults='undefined' result_type='void'>
</method>
<field name='_bindingEventDispatcher' fullname='ItemApplication:xmlLoader/private:_bindingEventDispatcher' type='flash.events:EventDispatcher' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='n_abilities' fullname='ItemApplication:xmlLoader/n_abilities' type='XMLList' isStatic='false' isConst='false' >
</field>
<field name='n_answers' fullname='ItemApplication:xmlLoader/n_answers' type='XMLList' isStatic='false' isConst='false' >
</field>
<field name='n_correctResponse' fullname='ItemApplication:xmlLoader/n_correctResponse' type='XMLList' isStatic='false' isConst='false' >
</field>
<field name='n_instruction' fullname='ItemApplication:xmlLoader/n_instruction' type='XMLList' isStatic='false' isConst='false' >
</field>
<field name='n_itemCreation' fullname='ItemApplication:xmlLoader/n_itemCreation' type='XMLList' isStatic='false' isConst='false' >
</field>
<field name='n_itemNumber' fullname='ItemApplication:xmlLoader/n_itemNumber' type='XMLList' isStatic='false' isConst='false' >
</field>
<field name='n_marking' fullname='ItemApplication:xmlLoader/n_marking' type='XMLList' isStatic='false' isConst='false' >
</field>
<field name='n_metaItem' fullname='ItemApplication:xmlLoader/n_metaItem' type='XMLList' isStatic='false' isConst='false' >
</field>
<field name='n_nextitem' fullname='ItemApplication:xmlLoader/n_nextitem' type='XMLList' isStatic='false' isConst='false' >
</field>
<field name='n_preScreen' fullname='ItemApplication:xmlLoader/n_preScreen' type='XMLList' isStatic='false' isConst='false' defaultValue='null' >
</field>
<field name='n_presets' fullname='ItemApplication:xmlLoader/n_presets' type='XMLList' isStatic='false' isConst='false' >
</field>
<field name='n_questions' fullname='ItemApplication:xmlLoader/n_questions' type='XMLList' isStatic='false' isConst='false' >
</field>
<field name='n_time' fullname='ItemApplication:xmlLoader/n_time' type='XMLList' isStatic='false' isConst='false' >
</field>
<field name='n_userNumber' fullname='ItemApplication:xmlLoader/n_userNumber' type='XMLList' isStatic='false' isConst='false' >
</field>
<field name='preFlag' fullname='ItemApplication:xmlLoader/private:preFlag' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='xload' fullname='ItemApplication:xmlLoader/xload' type='Shared:XLoader' isStatic='false' isConst='false' >
</field>
<classRec name='ItemObject' fullname='ItemApplication:ItemObject' sourcefile='C:\lea\Itementwicklung\xmlTest\src\ItemApplication\ItemObject.as' namespace='ItemApplication' access='public' baseclass='Shared:EventDispatcher' interfaces='Interfaces:ICustomModule;Interfaces:ICustomEventDispatcher' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Represents a handler for all item releated actions.

	 ]]></description>
</classRec>
<method name='ItemObject' fullname='ItemApplication:ItemObject/ItemObject' isStatic='false' isFinal='false' isOverride='false'  param_names='relative_url;item_ID;_userNumber' param_types='String;String;String' param_defaults='null;null;null' result_type='*'>
<description><![CDATA[

		 Constructor, will only be used by first instantiation.<code>bla</code>

		 

		 ]]></description>
<param><![CDATA[relative_url the relative path to the applications root directory on the server

		 ]]></param>
<param><![CDATA[item_ID alias for itemnumber -> combined  with relative_url will result in path to item data

		 ]]></param>
<param><![CDATA[userNumber user number for writing in user folder and xml

		 ]]></param>
</method>
<method name='alertXMLError' fullname='ItemApplication:ItemObject/alertXMLError' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='buildXML' fullname='ItemApplication:ItemObject/private:buildXML' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 constructs a new xml copy of the origin by constructing the different elements in right order.

		 Be sure that you really have to change this, if you change the xml structure. 

		 ]]></description>
</method>
<method name='checkAnswers' fullname='ItemApplication:ItemObject/private:checkAnswers' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='uint' param_defaults='undefined' result_type='String'>
</method>
<method name='check_exists' fullname='ItemApplication:ItemObject/private:check_exists' isStatic='false' isFinal='false' isOverride='false'  param_names='x' param_types='Object' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 useless but still somewhere in the code

		 ]]></description>
</method>
<method name='clearpreScreen' fullname='ItemApplication:ItemObject/private:clearpreScreen' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='createQuestions' fullname='ItemApplication:ItemObject/private:createQuestions' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ 

		 loads the correct question type by reading the "meta" tag from the item xml

		 content from question object will be displayed as components of view.qwrapper

		 

		 ]]></description>
<see><![CDATA[DisplayApplication.ItemViewContainer

		 ]]></see>
</method>
<method name='evaluation' fullname='ItemApplication:ItemObject/private:evaluation' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Places all the possible marks in the marking section of the xml, by receiving results from the getMark method.

		 Be aware, that if you really have to change this, you will have to change the xml structure as well. 

		 

		 ]]></description>
<see><![CDATA[#getMark()

		 ]]></see>
</method>
<method name='getClassDefinition' fullname='ItemApplication:ItemObject/getClassDefinition' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='getMark' fullname='ItemApplication:ItemObject/private:getMark' isStatic='false' isFinal='false' isOverride='false'  param_names='itNumber;prevMark' param_types='String;String' param_defaults='undefined;undefined' result_type='String'>
<description><![CDATA[

		 This function grabs the user input information and tries to compare the input with the correct response.

		 For different question types, different rules of comparison will apply, so we need to ask for ALL possible rules. See detailed comments within the method-code.

		 Be sure that you really have to change this, if you change the xml structure. 

		 

		 ]]></description>
<param><![CDATA[itNumber the item id which shall be calculated.

		 ]]></param>
</method>
<method name='initComponents' fullname='ItemApplication:ItemObject/private:initComponents' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='load' fullname='ItemApplication:ItemObject/load' isStatic='false' isFinal='false' isOverride='false'  param_names='_globals;_tcollection;_session' param_types='Model:Globals;Model:TestCollection;Model:Session' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Like in the most Classes, this class has a load method seperated from the constructor to ensure a successfull event listener setup.

		 

		 ]]></description>
</method>
<method name='makeClickable' fullname='ItemApplication:ItemObject/private:makeClickable' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='makeQVisible' fullname='ItemApplication:ItemObject/private:makeQVisible' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 In this event driven method, the target is searched in the refernces Array and if found, reduced to

		 the minimum size to ensure a correct display of the questions view component.

		 ]]></description>
</method>
<method name='makeTextVisible' fullname='ItemApplication:ItemObject/private:makeTextVisible' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='nextFlagNoSound' fullname='ItemApplication:ItemObject/private:nextFlagNoSound' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ONLY if soundIgnoreMode is switched to ON!

		 ]]></description>
</method>
<method name='onCompleteHandler' fullname='ItemApplication:ItemObject/private:onCompleteHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 After a successfull xmlresult the method will fetch all required information for further process.

		 The Instructional Part of the XML will be read and the relaevant Objects (text,images, buttons) will be created.

		 Be sure that you change this well, if you change the xml structure. All display components will be load at once but displayed in a different manner. Some Items will implement

		 a prescreen, watch out for the different implementations for prescreen and instruction part.

		 

		 ]]></description>
<see><![CDATA[#load()

		 ]]></see>
<see><![CDATA[ItemApplication.xmlLoader

		 ]]></see>
<see><![CDATA[Shared.XLoader

		 ]]></see>
</method>
<method name='onImageUpdate' fullname='ItemApplication:ItemObject/private:onImageUpdate' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='mx.events:FlexEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onItemFinished' fullname='ItemApplication:ItemObject/private:onItemFinished' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='ItemApplication:ItemEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 If User finishes an item, this function will be called by event and evaluates the user inputs to prepare writing the xml-.

		 ]]></description>
</method>
<method name='onSoundFinished' fullname='ItemApplication:ItemObject/private:onSoundFinished' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='onViewCreationComplete' fullname='ItemApplication:ItemObject/private:onViewCreationComplete' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='mx.events:FlexEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='playAudio' fullname='ItemApplication:ItemObject/private:playAudio' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 This Method is called by a <code>MouseEvent</code> event to trigger the <code>playAudio()</code>

		 function of a <code>MP3Audio</code> class referred by a <code>SoundButton</code>.

		 

		 

		 ]]></description>
<eventType><![CDATA[MouseEvent

		 ]]></eventType>
<see><![CDATA[SoundButton#referringTo

		 ]]></see>
<see><![CDATA[Shared.MP3Audio#playAudio()

		 ]]></see>
</method>
<method name='returnLoadFinishedEvent' fullname='ItemApplication:ItemObject/returnLoadFinishedEvent' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='returnModuleFinishedEvent' fullname='ItemApplication:ItemObject/returnModuleFinishedEvent' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='returnView' fullname='ItemApplication:ItemObject/returnView' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
</method>
<method name='sendTweenFinished' fullname='ItemApplication:ItemObject/sendTweenFinished' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 tells the class, that the screen is tweened

		 ]]></description>
</method>
<method name='set_value' fullname='ItemApplication:ItemObject/set_value' isStatic='false' isFinal='false' isOverride='false'  param_names='_node;_value' param_types='XMLList;String' param_defaults='undefined;undefined' result_type='XMLList'>
<description><![CDATA[

		 Old, not used.

		 ]]></description>
</method>
<method name='showInsElements' fullname='ItemApplication:ItemObject/private:showInsElements' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='unload' fullname='ItemApplication:ItemObject/unload' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 removes all eventlisteners from all stored objects and sets them to null

		 ]]></description>
</method>
<method name='updateSeconds' fullname='ItemApplication:ItemObject/updateSeconds' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:TimerEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Timer for simulating a realtime clock to ensure correct timeStamp entries.

		 

		 ]]></description>
<see><![CDATA[timeStamp

		 ]]></see>
</method>
<method name='currentTime' fullname='ItemApplication:ItemObject/currentTime/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<metadata>
	<Bindable owner='ItemApplication:ItemObject/currentTime/get' event='propertyChange' >
	</Bindable>
</metadata>
</method>
<method name='debug' fullname='ItemApplication:ItemObject/debug/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='soundMode' fullname='ItemApplication:ItemObject/soundMode/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='currentTime' fullname='ItemApplication:ItemObject/currentTime/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='debug' fullname='ItemApplication:ItemObject/debug/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='soundMode' fullname='ItemApplication:ItemObject/soundMode/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<field name='LOAD_COMPLETE' fullname='ItemApplication:ItemObject/LOAD_COMPLETE' type='String' isStatic='true' isConst='true' defaultValue='loadComplete' >
</field>
<field name='_debug' fullname='ItemApplication:ItemObject/private:_debug' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_listeners' fullname='ItemApplication:ItemObject/private:_listeners' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_sound' fullname='ItemApplication:ItemObject/private:_sound' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='answerList' fullname='ItemApplication:ItemObject/private:answerList' type='XMLList' isStatic='false' isConst='false' >
</field>
<field name='create_date' fullname='ItemApplication:ItemObject/private:create_date' type='XMLList' isStatic='false' isConst='false' >
</field>
<field name='create_person' fullname='ItemApplication:ItemObject/private:create_person' type='XMLList' isStatic='false' isConst='false' >
</field>
<field name='create_version' fullname='ItemApplication:ItemObject/private:create_version' type='XMLList' isStatic='false' isConst='false' >
</field>
<field name='currentDay' fullname='ItemApplication:ItemObject/private:currentDay' type='String' isStatic='false' isConst='false' >
</field>
<field name='dimension' fullname='ItemApplication:ItemObject/private:dimension' type='String' isStatic='false' isConst='false' >
</field>
<field name='duration' fullname='ItemApplication:ItemObject/private:duration' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='endTime' fullname='ItemApplication:ItemObject/private:endTime' type='String' isStatic='false' isConst='false' >
</field>
<field name='flag' fullname='ItemApplication:ItemObject/private:flag' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='glass' fullname='ItemApplication:ItemObject/private:glass' type='Class' isStatic='false' isConst='false' >
</field>
<field name='imSource' fullname='ItemApplication:ItemObject/private:imSource' type='String' isStatic='false' isConst='false' >
</field>
<field name='instructionLabels' fullname='ItemApplication:ItemObject/private:instructionLabels' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='itemCorrectResponseList' fullname='ItemApplication:ItemObject/private:itemCorrectResponseList' type='XMLList' isStatic='false' isConst='false' >
</field>
<field name='itemDate' fullname='ItemApplication:ItemObject/private:itemDate' type='Date' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='itemFinalXML' fullname='ItemApplication:ItemObject/private:itemFinalXML' type='XML' isStatic='false' isConst='false' defaultValue='null' >
</field>
<field name='itemID' fullname='ItemApplication:ItemObject/private:itemID' type='String' isStatic='false' isConst='false' >
</field>
<field name='itemNumber' fullname='ItemApplication:ItemObject/private:itemNumber' type='String' isStatic='false' isConst='false' >
</field>
<field name='itemType' fullname='ItemApplication:ItemObject/private:itemType' type='XMLList' isStatic='false' isConst='false' >
</field>
<field name='labels' fullname='ItemApplication:ItemObject/private:labels' type='Array' isStatic='false' isConst='false' >
</field>
<field name='level' fullname='ItemApplication:ItemObject/private:level' type='String' isStatic='false' isConst='false' >
</field>
<field name='loader' fullname='ItemApplication:ItemObject/private:loader' type='flash.net:URLLoader' isStatic='false' isConst='false' >
</field>
<field name='markingList' fullname='ItemApplication:ItemObject/private:markingList' type='XMLList' isStatic='false' isConst='false' >
</field>
<field name='mediaReference' fullname='ItemApplication:ItemObject/private:mediaReference' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='nextItem' fullname='ItemApplication:ItemObject/protected:nextItem' type='String' isStatic='false' isConst='false' >
</field>
<field name='obData' fullname='ItemApplication:ItemObject/obData' type='Object' isStatic='false' isConst='false' >
</field>
<field name='playFinished' fullname='ItemApplication:ItemObject/private:playFinished' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='preScreenReference' fullname='ItemApplication:ItemObject/private:preScreenReference' type='Number' isStatic='false' isConst='false' >
</field>
<field name='preScreen' fullname='ItemApplication:ItemObject/private:preScreen' type='XMLList' isStatic='false' isConst='false' >
</field>
<field name='qRef' fullname='ItemApplication:ItemObject/private:qRef' type='ItemApplication.QuestionTypes:QuestionsObject' isStatic='false' isConst='false' defaultValue='null' >
</field>
<field name='questionsList' fullname='ItemApplication:ItemObject/private:questionsList' type='XMLList' isStatic='false' isConst='false' >
</field>
<field name='references' fullname='ItemApplication:ItemObject/private:references' type='mx.collections:ArrayList' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='relUrl' fullname='ItemApplication:ItemObject/relUrl' type='String' isStatic='false' isConst='false' >
</field>
<field name='req' fullname='ItemApplication:ItemObject/private:req' type='flash.net:URLRequest' isStatic='false' isConst='false' >
</field>
<field name='responseFlag' fullname='ItemApplication:ItemObject/private:responseFlag' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='root' fullname='ItemApplication:ItemObject/private:root' type='String' isStatic='false' isConst='false' >
</field>
<field name='scriptUrl' fullname='ItemApplication:ItemObject/private:scriptUrl' type='String' isStatic='false' isConst='false' >
</field>
<field name='show' fullname='ItemApplication:ItemObject/private:show' type='DisplayApplication.Components:ForwardButton' isStatic='false' isConst='false' >
</field>
<field name='sizes' fullname='ItemApplication:ItemObject/private:sizes' type='Array' isStatic='false' isConst='false' >
</field>
<field name='soundUrl' fullname='ItemApplication:ItemObject/private:soundUrl' type='String' isStatic='false' isConst='false' >
</field>
<field name='startTime' fullname='ItemApplication:ItemObject/private:startTime' type='String' isStatic='false' isConst='false' >
</field>
<field name='timeCount' fullname='ItemApplication:ItemObject/private:timeCount' type='flash.utils:Timer' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='userNumber' fullname='ItemApplication:ItemObject/userNumber' type='String' isStatic='false' isConst='false' >
</field>
<field name='view' fullname='ItemApplication:ItemObject/view' type='DisplayApplication:ItemViewContainer' isStatic='false' isConst='false' >
</field>
<field name='visibleCounter' fullname='ItemApplication:ItemObject/private:visibleCounter' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='visibleFlagsCollector' fullname='ItemApplication:ItemObject/private:visibleFlagsCollector' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[

		 Referencing to already visible components to avoid multiple function call

		 ]]></description>
</field>
<field name='writerObject' fullname='ItemApplication:ItemObject/private:writerObject' type='Shared:XMLWriter' isStatic='false' isConst='false' >
</field>
<classRec name='QuestionsObject' fullname='ItemApplication.QuestionTypes:QuestionsObject' sourcefile='C:\lea\Itementwicklung\xmlTest\src\ItemApplication\QuestionTypes\QuestionsObject.as' namespace='ItemApplication.QuestionTypes' access='public' baseclass='Shared:EventDispatcher' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Defines the basic structure and bahvior of a question object. The detailed behavior like load and display data is defined in each of the extending quesion classes.

	 

	 <p>A special feature is the load content by page behavior. All Data will be loaded immediately after calling the specific questionspage and will be unloaded

	 by calling another questionpage. This frees memory and enables a fluid application.</p>

	 ]]></description>
</classRec>
<method name='QuestionsObject' fullname='ItemApplication.QuestionTypes:QuestionsObject/QuestionsObject' isStatic='false' isFinal='false' isOverride='false'  param_names='_source;scripturl;relativeUrl' param_types='XMLList;String;String' param_defaults='undefined;undefined;undefined' result_type='*'>
<description><![CDATA[

		 Constructor of each questions object contains a xmlList source (of questions) and the relative url path for loading data. Also initializes the view component.

		 

		 

		 ]]></description>
<param><![CDATA[_source the source xmllist containing the item data, defined in each item xml document

		 

		 ]]></param>
<param><![CDATA[scripturl the realtive url the php script which is required to load and store data

		 

		 ]]></param>
<relativeUrl><![CDATA[alias for rooturl (depreaced)

		 ]]></relativeUrl>
</method>
<method name='answerExists' fullname='ItemApplication.QuestionTypes:QuestionsObject/protected:answerExists' isStatic='false' isFinal='false' isOverride='false'  param_names='id' param_types='String' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 iterates the answer array to check if an anser was already given to a specific field. This allows a reload of a previous page with pre-existing answer settings.

		 ]]></description>
</method>
<method name='displayQuestions' fullname='ItemApplication.QuestionTypes:QuestionsObject/displayQuestions' isStatic='false' isFinal='false' isOverride='false'  param_names='param' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 This function is the main process for displaying the content. It will vary for each Questionsobject, so it need to be overridden.

		 ]]></description>
</method>
<method name='getAnswerString' fullname='ItemApplication.QuestionTypes:QuestionsObject/protected:getAnswerString' isStatic='false' isFinal='false' isOverride='false'  param_names='id' param_types='String' param_defaults='undefined' result_type='String'>
<description><![CDATA[

		 returns the answervalue, if value is a string

		 ]]></description>
</method>
<method name='getAnswerValue' fullname='ItemApplication.QuestionTypes:QuestionsObject/protected:getAnswerValue' isStatic='false' isFinal='false' isOverride='false'  param_names='id' param_types='String' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 checks, if a value in the answer array was already given by comparing the ids.

		 ]]></description>
</method>
<method name='hasAtLeastOneListener' fullname='ItemApplication.QuestionTypes:QuestionsObject/hasAtLeastOneListener' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Because this Class is extending <code>Shared.EventDispatcher</code>, we can check if the listeners array is filled with

		 at least one reference to a listener object. This may be required to check if an object's listener is removable.

		 ]]></description>
</method>
<method name='load' fullname='ItemApplication.QuestionTypes:QuestionsObject/load' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 initialization of the xmllist content. Need to be called seperately, because of EventListeners in Parent Object.

		 ]]></description>
</method>
<method name='nextQpage' fullname='ItemApplication.QuestionTypes:QuestionsObject/protected:nextQpage' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 This Method loops the reference array, searching for the Radiobutton Reference and get its ID and selection status.

		 These information represents the user input and is fundamental for evaluation.

		 Evaluation is always done in <code>ItemObject</code>.

		 The clear screen behavior is not defined here but rather the change of the qpState.

		 

		 ]]></description>
<see><![CDATA[qpState

		 ]]></see>
<see><![CDATA[ItemApplication.ItemObject

		 ]]></see>
</method>
<method name='playAudio' fullname='ItemApplication.QuestionTypes:QuestionsObject/protected:playAudio' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 This method is called by event and plays the audio file (MP3Audio), the specific SoundButton is referring to.

		 The reference to the audio file is created in the <code>displayQuestions()</code> method.

		 

		 ]]></description>
<see><![CDATA[#displayQuestions();

		 ]]></see>
<see><![CDATA[DisplayApplication.SoundButton

		 ]]></see>
<see><![CDATA[Shared.MP3Audio

		 ]]></see>
</method>
<method name='prevQpage' fullname='ItemApplication.QuestionTypes:QuestionsObject/protected:prevQpage' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 This method is like an undo function. Important to know: allAnswers.pop() will delete the input on the previous 

		 questionpage and substitude it with the new input.

		 The clear screen behavior is not defined here but rather the change of the qpState.

		 

		 ]]></description>
<see><![CDATA[qpState

		 ]]></see>
</method>
<method name='removeQuestions' fullname='ItemApplication.QuestionTypes:QuestionsObject/protected:removeQuestions' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 This method initially loops the references Array and checks if the reference has listeners or is a specific object.

		 Listeners will be removed, Objects will be set to null.

		 

		 ]]></description>
<see><![CDATA[references

		 ]]></see>
</method>
<method name='returnAnswerList' fullname='ItemApplication.QuestionTypes:QuestionsObject/returnAnswerList' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='returnFirstPulseObject' fullname='ItemApplication.QuestionTypes:QuestionsObject/returnFirstPulseObject' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
</method>
<method name='synchronize' fullname='ItemApplication.QuestionTypes:QuestionsObject/protected:synchronize' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 This function is required to synchronize the answer arrays with the new answers every time a questionpage was build.

		 ]]></description>
</method>
<method name='_moduleState' fullname='ItemApplication.QuestionTypes:QuestionsObject/_moduleState/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='_qpState' fullname='ItemApplication.QuestionTypes:QuestionsObject/_qpState/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Get the current questionspage state.

		 ]]></description>
</method>
<method name='debug' fullname='ItemApplication.QuestionTypes:QuestionsObject/debug/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='ignoreSound' fullname='ItemApplication.QuestionTypes:QuestionsObject/ignoreSound/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='_moduleState' fullname='ItemApplication.QuestionTypes:QuestionsObject/_moduleState/set' isStatic='false' isFinal='false' isOverride='false'  param_names='newState' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Set the current module state. Important for finishing the questions and evaluate the answers in the parent object.

		 ]]></description>
</method>
<method name='_qpState' fullname='ItemApplication.QuestionTypes:QuestionsObject/_qpState/set' isStatic='false' isFinal='false' isOverride='false'  param_names='newState' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Set the current questionpage state.

		 ]]></description>
</method>
<method name='debug' fullname='ItemApplication.QuestionTypes:QuestionsObject/debug/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='ignoreSound' fullname='ItemApplication.QuestionTypes:QuestionsObject/ignoreSound/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<field name='_debug' fullname='ItemApplication.QuestionTypes:QuestionsObject/private:_debug' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_ignoreSound' fullname='ItemApplication.QuestionTypes:QuestionsObject/private:_ignoreSound' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_listeners' fullname='ItemApplication.QuestionTypes:QuestionsObject/protected:_listeners' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[

		 managing listeners (for parent object)

		 ]]></description>
</field>
<field name='allAnswers' fullname='ItemApplication.QuestionTypes:QuestionsObject/allAnswers' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[

		 Stores the summary of all answers arrays (all answers of all questionpages)

		 ]]></description>
</field>
<field name='answers' fullname='ItemApplication.QuestionTypes:QuestionsObject/answers' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[

		 Stores information about the recent user input, this Array is used temporary for each questionpage.

		 ]]></description>
</field>
<field name='firstPulseObject' fullname='ItemApplication.QuestionTypes:QuestionsObject/protected:firstPulseObject' type='Object' isStatic='false' isConst='false' defaultValue='null' >
</field>
<field name='moduleState' fullname='ItemApplication.QuestionTypes:QuestionsObject/protected:moduleState' type='Number' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[

		 The state of the module.

		 ]]></description>
</field>
<field name='qView' fullname='ItemApplication.QuestionTypes:QuestionsObject/qView' type='DisplayApplication:QuestionView' isStatic='false' isConst='false' >
</field>
<field name='qpState' fullname='ItemApplication.QuestionTypes:QuestionsObject/protected:qpState' type='Number' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[

		 This States affects only internal processes --> next page / previous page

		 ]]></description>
</field>
<field name='references' fullname='ItemApplication.QuestionTypes:QuestionsObject/references' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[

		 stores references to all the question related instances to ensure removing

		 ]]></description>
</field>
<field name='relUrl' fullname='ItemApplication.QuestionTypes:QuestionsObject/protected:relUrl' type='String' isStatic='false' isConst='false' >
<description><![CDATA[

		 relative url path for loading data

		 ]]></description>
</field>
<field name='scriptUrl' fullname='ItemApplication.QuestionTypes:QuestionsObject/protected:scriptUrl' type='String' isStatic='false' isConst='false' >
</field>
<field name='source' fullname='ItemApplication.QuestionTypes:QuestionsObject/source' type='XMLList' isStatic='false' isConst='false' >
<description><![CDATA[

		 xml source data, received from itemObject

		 ]]></description>
</field>
<classRec name='MultipleChoice' fullname='ItemApplication.QuestionTypes:MultipleChoice' sourcefile='C:\lea\Itementwicklung\xmlTest\src\ItemApplication\QuestionTypes\MultipleChoice.as' namespace='ItemApplication.QuestionTypes' access='public' baseclass='ItemApplication.QuestionTypes:QuestionsObject' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Represents the process of loading, arranging and displaying data within a multiple choice item. The data model is a checkbox group, which allows one or many or all selected choices as an answer.

	 ]]></description>
</classRec>
<method name='MultipleChoice' fullname='ItemApplication.QuestionTypes:MultipleChoice/MultipleChoice' isStatic='false' isFinal='false' isOverride='false'  param_names='_source;scripturl;relativeUrl' param_types='XMLList;String;String' param_defaults='undefined;undefined;undefined' result_type='*'>
<description><![CDATA[

		 constructor, calls superclass.

		 

		 ]]></description>
<see><![CDATA[QuestionsObject

		 ]]></see>
</method>
<method name='displayQuestions' fullname='ItemApplication.QuestionTypes:MultipleChoice/displayQuestions' isStatic='false' isFinal='false' isOverride='true'  param_names='param' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 

		 

		 ]]></description>
<param><![CDATA[param the number of the questionpage. 0 means page 1

		 ]]></param>
</method>
<method name='onMouseOutBox' fullname='ItemApplication.QuestionTypes:MultipleChoice/private:onMouseOutBox' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onMouseOverBox' fullname='ItemApplication.QuestionTypes:MultipleChoice/private:onMouseOverBox' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<classRec name='SingleChoice' fullname='ItemApplication.QuestionTypes:SingleChoice' sourcefile='C:\lea\Itementwicklung\xmlTest\src\ItemApplication\QuestionTypes\SingleChoice.as' namespace='ItemApplication.QuestionTypes' access='public' baseclass='ItemApplication.QuestionTypes:QuestionsObject' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Representing the process of loading, arranging and displaying data within a single choice item. The data model is a radiobutton group, whcih allows only one choice per question.

	 ]]></description>
</classRec>
<method name='SingleChoice' fullname='ItemApplication.QuestionTypes:SingleChoice/SingleChoice' isStatic='false' isFinal='false' isOverride='false'  param_names='_source;scripturl;relativeUrl' param_types='XMLList;String;String' param_defaults='undefined;undefined;undefined' result_type='*'>
</method>
<method name='displayQuestions' fullname='ItemApplication.QuestionTypes:SingleChoice/displayQuestions' isStatic='false' isFinal='false' isOverride='true'  param_names='param' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Displays a vertical set of Radiobuttons and Labels according to the specific questionspage, determined by the parameter.

		 Optional there can be an image and or a sound button before the answertext.

		 

		 ]]></description>
<param><![CDATA[param the number of the page

		 ]]></param>
</method>
<method name='onAnswerLabelUpdate' fullname='ItemApplication.QuestionTypes:SingleChoice/protected:onAnswerLabelUpdate' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='mx.events:FlexEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onMouseOutRadio' fullname='ItemApplication.QuestionTypes:SingleChoice/protected:onMouseOutRadio' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onMouseOverRadio' fullname='ItemApplication.QuestionTypes:SingleChoice/protected:onMouseOverRadio' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<classRec name='ScCloud' fullname='ItemApplication.QuestionTypes:ScCloud' sourcefile='C:\lea\Itementwicklung\xmlTest\src\ItemApplication\QuestionTypes\ScCloud.as' namespace='ItemApplication.QuestionTypes' access='public' baseclass='ItemApplication.QuestionTypes:SingleChoice' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Provides a cloud of radiobuttons and labels to click. The positions within the cloud will be chosen randomly and the cloud can increase its size by having trouble with positioning elements due to limited space.

	 ]]></description>
</classRec>
<method name='ScCloud' fullname='ItemApplication.QuestionTypes:ScCloud/ScCloud' isStatic='false' isFinal='false' isOverride='false'  param_names='_source;scripturl;relativeUrl' param_types='XMLList;String;String' param_defaults='undefined;undefined;undefined' result_type='*'>
<description><![CDATA[

		 constructor calls superclass.

		 

		 ]]></description>
<see><![CDATA[QuestionsObject

		 ]]></see>
</method>
<method name='displayQuestions' fullname='ItemApplication.QuestionTypes:ScCloud/displayQuestions' isStatic='false' isFinal='false' isOverride='true'  param_names='param' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 

		 ]]></description>
</method>
<method name='onMouseOutRadio' fullname='ItemApplication.QuestionTypes:ScCloud/protected:onMouseOutRadio' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onMouseOverRadio' fullname='ItemApplication.QuestionTypes:ScCloud/protected:onMouseOverRadio' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onRadioClick' fullname='ItemApplication.QuestionTypes:ScCloud/private:onRadioClick' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onUpdateComplete' fullname='ItemApplication.QuestionTypes:ScCloud/private:onUpdateComplete' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='mx.events:FlexEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='shuffle' fullname='ItemApplication.QuestionTypes:ScCloud/private:shuffle' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<field name='cloudElements' fullname='ItemApplication.QuestionTypes:ScCloud/private:cloudElements' type='Array' isStatic='false' isConst='false' >
</field>
<field name='labelsPointer' fullname='ItemApplication.QuestionTypes:ScCloud/private:labelsPointer' type='Array' isStatic='false' isConst='false' >
</field>
<field name='selectionPointer' fullname='ItemApplication.QuestionTypes:ScCloud/private:selectionPointer' type='Array' isStatic='false' isConst='false' >
</field>
<field name='shuffleCounter' fullname='ItemApplication.QuestionTypes:ScCloud/private:shuffleCounter' type='uint' isStatic='false' isConst='false' >
</field>
<classRec name='Cloze' fullname='ItemApplication.QuestionTypes:Cloze' sourcefile='C:\lea\Itementwicklung\xmlTest\src\ItemApplication\QuestionTypes\Cloze.as' namespace='ItemApplication.QuestionTypes' access='public' baseclass='ItemApplication.QuestionTypes:QuestionsObject' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Representing the loading, arranging and displaying data for a cloze text.

	 ]]></description>
</classRec>
<method name='Cloze' fullname='ItemApplication.QuestionTypes:Cloze/Cloze' isStatic='false' isFinal='false' isOverride='false'  param_names='_source;scripturl;relativeUrl' param_types='XMLList;String;String' param_defaults='undefined;undefined;undefined' result_type='*'>
<description><![CDATA[

		 constructor, calls superclass.

		 

		 ]]></description>
<param><![CDATA[_source see <code>QuestionsObject</code>

		 ]]></param>
<param><![CDATA[scripturl see <code>QuestionsObject</code>

		 ]]></param>
<param><![CDATA[relativeUrl see <code>QuestionsObject</code>

		 

		 ]]></param>
<see><![CDATA[QuestionsObject

		 ]]></see>
</method>
<method name='displayQuestions' fullname='ItemApplication.QuestionTypes:Cloze/displayQuestions' isStatic='false' isFinal='false' isOverride='true'  param_names='param' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 loads the certain data and displays it in a way of a text with empty text areas and soundbuttons.

		 <p>it uses the modified <code>HorizontalMultilineLayout</code> to arrange the elements in a row</p> 

		 <p>the Text will be completely split up, so every single word as well as the input area is encapsulated by a <code>Group</code> and can be Designed with css properties.</p>

		 

		 ]]></description>
<param><![CDATA[param the parameter indicates which questionpage is actually displayed

		 

		 ]]></param>
<see><![CDATA[QuestionsObject

		 ]]></see>
<see><![CDATA[Shared.HorizontalMultilineLayout

		 ]]></see>
</method>
<classRec name='SelectAndWrite' fullname='ItemApplication.QuestionTypes:SelectAndWrite' sourcefile='C:\lea\Itementwicklung\xmlTest\src\ItemApplication\QuestionTypes\SelectAndWrite.as' namespace='ItemApplication.QuestionTypes' access='public' baseclass='ItemApplication.QuestionTypes:QuestionsObject' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Represents the process of loading, arrangin and displaying data for a selection of images and a textarea.

	 ]]></description>
</classRec>
<method name='SelectAndWrite' fullname='ItemApplication.QuestionTypes:SelectAndWrite/SelectAndWrite' isStatic='false' isFinal='false' isOverride='false'  param_names='_source;scripturl;relativeUrl' param_types='XMLList;String;String' param_defaults='undefined;undefined;undefined' result_type='*'>
<description><![CDATA[

		 Constructor, calls superclass.

		 

		 ]]></description>
<param><![CDATA[_source the xmllist source file

		 ]]></param>
<param><![CDATA[scripturl path to the php script for loading images, mp3 and other data

		 ]]></param>
<param><![CDATA[relativeUrl the equivalent to rooturl  

		 ]]></param>
</method>
<method name='displayQuestions' fullname='ItemApplication.QuestionTypes:SelectAndWrite/displayQuestions' isStatic='false' isFinal='false' isOverride='true'  param_names='param' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 loads all required data, according to a specific questionspage.

		 <p>Builds questions instruction first</p>

		 <p>loads images and arranges them in a rectangle shaped group of four images</p>

		 <p>creates a textinput area next to the images group</p>

		 ]]></description>
</method>
<method name='onImageClick' fullname='ItemApplication.QuestionTypes:SelectAndWrite/private:onImageClick' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onImageOut' fullname='ItemApplication.QuestionTypes:SelectAndWrite/private:onImageOut' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onImageOver' fullname='ItemApplication.QuestionTypes:SelectAndWrite/private:onImageOver' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='selectables' fullname='ItemApplication.QuestionTypes:SelectAndWrite/private:selectables' type='Array' isStatic='false' isConst='false' >
</field>
<classRec name='SelectableImage' fullname='DisplayApplication.Components:SelectableImage' sourcefile='C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\Components\SelectableImage.as' namespace='DisplayApplication.Components' access='public' baseclass='Shared:CustomImage' interfaces='Interfaces:ICustomSelectable' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 A simple extension of an image, inmplementing the selectable idea. This image can be uses with others to simulate an image based single- or multiple choice construct.

	 ]]></description>
</classRec>
<method name='SelectableImage' fullname='DisplayApplication.Components:SelectableImage/SelectableImage' isStatic='false' isFinal='false' isOverride='false'  param_names='scriptUrl;relativePath' param_types='String;String' param_defaults='undefined;undefined' result_type='*'>
<description><![CDATA[

		 Constructor.

		 

		 ]]></description>
<see><![CDATA[Shared.CustomImage

		 ]]></see>
</method>
<method name='hovered' fullname='DisplayApplication.Components:SelectableImage/hovered/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 access the hovered property

		 

		 ]]></description>
</method>
<method name='selected' fullname='DisplayApplication.Components:SelectableImage/selected/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 access the selected property

		 ]]></description>
</method>
<method name='hovered' fullname='DisplayApplication.Components:SelectableImage/hovered/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 set this component to the hovered status, which will also change the appearance to a colored border.

		 ]]></description>
</method>
<method name='selected' fullname='DisplayApplication.Components:SelectableImage/selected/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 set this component to the selected status, which will also change the appearance to a colored border.

		 ]]></description>
</method>
<field name='_hovered' fullname='DisplayApplication.Components:SelectableImage/private:_hovered' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_selected' fullname='DisplayApplication.Components:SelectableImage/private:_selected' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='hoverColor' fullname='DisplayApplication.Components:SelectableImage/hoverColor' type='uint' isStatic='false' isConst='false' defaultValue='0xFFD779' >
</field>
<field name='selectedColor' fullname='DisplayApplication.Components:SelectableImage/selectedColor' type='uint' isStatic='false' isConst='false' defaultValue='0x4466FF' >
</field>
<packageRec name='DisplayApplication.Components.null' fullname='DisplayApplication.Components.null'>
<description><![CDATA[
  Generated by mxmlc 4.0
  Package: DisplayApplication.Components
 Class:   StartButton
 Source:  C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\Components\StartButton.mxml
 ]]></description>
</packageRec>
<classRec name='StartButton' fullname='DisplayApplication.Components:StartButton' sourcefile='C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\Components\StartButton.mxml' namespace='DisplayApplication.Components' access='public' baseclass='Shared:CustomButton' isFinal='false' isDynamic='false' >
<description><![CDATA[]]></description>
<metadata>
	<DefaultProperty owner='DisplayApplication.Components:StartButton' name='label' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='StartButton' fullname='DisplayApplication.Components:StartButton/StartButton' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[]]></description>
</method>
<method name='initialize' fullname='DisplayApplication.Components:StartButton/initialize' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='moduleFactory' fullname='DisplayApplication.Components:StartButton/moduleFactory/set' isStatic='false' isFinal='false' isOverride='true'  param_names='factory' param_types='mx.core:IFlexModuleFactory' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<packageRec name='DisplayApplication.Components.null' fullname='DisplayApplication.Components.null'>
<description><![CDATA[
  Generated by mxmlc 4.0
  Package: DisplayApplication.Components
 Class:   ForwardButton
 Source:  C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\Components\ForwardButton.mxml
 ]]></description>
</packageRec>
<classRec name='ForwardButton' fullname='DisplayApplication.Components:ForwardButton' sourcefile='C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\Components\ForwardButton.mxml' namespace='DisplayApplication.Components' access='public' baseclass='Shared:CustomButton' isFinal='false' isDynamic='false' >
<description><![CDATA[]]></description>
<metadata>
	<DefaultProperty owner='DisplayApplication.Components:ForwardButton' name='label' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='ForwardButton' fullname='DisplayApplication.Components:ForwardButton/ForwardButton' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[]]></description>
</method>
<method name='initialize' fullname='DisplayApplication.Components:ForwardButton/initialize' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='moduleFactory' fullname='DisplayApplication.Components:ForwardButton/moduleFactory/set' isStatic='false' isFinal='false' isOverride='true'  param_names='factory' param_types='mx.core:IFlexModuleFactory' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<packageRec name='DisplayApplication.Components.null' fullname='DisplayApplication.Components.null'>
<description><![CDATA[
  Generated by mxmlc 4.0
  Package: DisplayApplication.Components
 Class:   MiniSoundButton
 Source:  C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\Components\MiniSoundButton.mxml
 ]]></description>
</packageRec>
<classRec name='MiniSoundButton' fullname='DisplayApplication.Components:MiniSoundButton' sourcefile='C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\Components\MiniSoundButton.mxml' namespace='DisplayApplication.Components' access='public' baseclass='Shared:CustomButton' isFinal='false' isDynamic='false' >
<description><![CDATA[]]></description>
<metadata>
	<DefaultProperty owner='DisplayApplication.Components:MiniSoundButton' name='label' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='MiniSoundButton' fullname='DisplayApplication.Components:MiniSoundButton/MiniSoundButton' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[]]></description>
</method>
<method name='initialize' fullname='DisplayApplication.Components:MiniSoundButton/initialize' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='moduleFactory' fullname='DisplayApplication.Components:MiniSoundButton/moduleFactory/set' isStatic='false' isFinal='false' isOverride='true'  param_names='factory' param_types='mx.core:IFlexModuleFactory' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<packageRec name='DisplayApplication.Components.null' fullname='DisplayApplication.Components.null'>
<description><![CDATA[
  Generated by mxmlc 4.0
  Package: DisplayApplication.Components
 Class:   CustomDesignButton
 Source:  C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\Components\CustomDesignButton.mxml
 ]]></description>
</packageRec>
<classRec name='CustomDesignButton' fullname='DisplayApplication.Components:CustomDesignButton' sourcefile='C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\Components\CustomDesignButton.mxml' namespace='DisplayApplication.Components' access='public' baseclass='Shared:CustomButton' isFinal='false' isDynamic='false' >
<description><![CDATA[]]></description>
<metadata>
	<DefaultProperty owner='DisplayApplication.Components:CustomDesignButton' name='label' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='CustomDesignButton' fullname='DisplayApplication.Components:CustomDesignButton/CustomDesignButton' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[]]></description>
</method>
<method name='initialize' fullname='DisplayApplication.Components:CustomDesignButton/initialize' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='moduleFactory' fullname='DisplayApplication.Components:CustomDesignButton/moduleFactory/set' isStatic='false' isFinal='false' isOverride='true'  param_names='factory' param_types='mx.core:IFlexModuleFactory' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='reference' fullname='DisplayApplication.Components:CustomDesignButton/reference' type='Object' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication.Components:CustomDesignButton/reference' name='Bindable' >
	</Bindable>
</metadata>
</field>
<packageRec name='DisplayApplication.Components.null' fullname='DisplayApplication.Components.null'>
<description><![CDATA[
  Generated by mxmlc 4.0
  Package: DisplayApplication.Components
 Class:   SmallSoundButton
 Source:  C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\Components\SmallSoundButton.mxml
 ]]></description>
</packageRec>
<classRec name='SmallSoundButton' fullname='DisplayApplication.Components:SmallSoundButton' sourcefile='C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\Components\SmallSoundButton.mxml' namespace='DisplayApplication.Components' access='public' baseclass='Shared:CustomButton' isFinal='false' isDynamic='false' >
<description><![CDATA[]]></description>
<metadata>
	<DefaultProperty owner='DisplayApplication.Components:SmallSoundButton' name='label' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='SmallSoundButton' fullname='DisplayApplication.Components:SmallSoundButton/SmallSoundButton' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[]]></description>
</method>
<method name='initialize' fullname='DisplayApplication.Components:SmallSoundButton/initialize' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='moduleFactory' fullname='DisplayApplication.Components:SmallSoundButton/moduleFactory/set' isStatic='false' isFinal='false' isOverride='true'  param_names='factory' param_types='mx.core:IFlexModuleFactory' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<packageRec name='DisplayApplication.Components.null' fullname='DisplayApplication.Components.null'>
<description><![CDATA[
  Generated by mxmlc 4.0
  Package: DisplayApplication.Components
 Class:   SmallEyeButton
 Source:  C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\Components\SmallEyeButton.mxml
 ]]></description>
</packageRec>
<classRec name='SmallEyeButton' fullname='DisplayApplication.Components:SmallEyeButton' sourcefile='C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\Components\SmallEyeButton.mxml' namespace='DisplayApplication.Components' access='public' baseclass='Shared:CustomButton' isFinal='false' isDynamic='false' >
<description><![CDATA[]]></description>
<metadata>
	<DefaultProperty owner='DisplayApplication.Components:SmallEyeButton' name='label' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='SmallEyeButton' fullname='DisplayApplication.Components:SmallEyeButton/SmallEyeButton' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[]]></description>
</method>
<method name='initialize' fullname='DisplayApplication.Components:SmallEyeButton/initialize' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='moduleFactory' fullname='DisplayApplication.Components:SmallEyeButton/moduleFactory/set' isStatic='false' isFinal='false' isOverride='true'  param_names='factory' param_types='mx.core:IFlexModuleFactory' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<packageRec name='DisplayApplication.Components.null' fullname='DisplayApplication.Components.null'>
<description><![CDATA[
  Generated by mxmlc 4.0
  Package: DisplayApplication.Components
 Class:   SoundButton
 Source:  C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\Components\SoundButton.mxml
 ]]></description>
</packageRec>
<classRec name='SoundButton' fullname='DisplayApplication.Components:SoundButton' sourcefile='C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\Components\SoundButton.mxml' namespace='DisplayApplication.Components' access='public' baseclass='Shared:CustomButton' isFinal='false' isDynamic='false' >
<description><![CDATA[]]></description>
<metadata>
	<DefaultProperty owner='DisplayApplication.Components:SoundButton' name='label' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='SoundButton' fullname='DisplayApplication.Components:SoundButton/SoundButton' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[]]></description>
</method>
<method name='initialize' fullname='DisplayApplication.Components:SoundButton/initialize' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='moduleFactory' fullname='DisplayApplication.Components:SoundButton/moduleFactory/set' isStatic='false' isFinal='false' isOverride='true'  param_names='factory' param_types='mx.core:IFlexModuleFactory' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<packageRec name='DisplayApplication.Components.null' fullname='DisplayApplication.Components.null'>
<description><![CDATA[
  Generated by mxmlc 4.0
  Package: DisplayApplication.Components
 Class:   CustomCheckBox
 Source:  C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\Components\CustomCheckBox.mxml
 ]]></description>
</packageRec>
<classRec name='CustomCheckBox' fullname='DisplayApplication.Components:CustomCheckBox' sourcefile='C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\Components\CustomCheckBox.mxml' namespace='DisplayApplication.Components' access='public' baseclass='spark.components:CheckBox' interfaces='Interfaces:ICustomSelectable' isFinal='false' isDynamic='false' >
<description><![CDATA[]]></description>
<metadata>
	<DefaultProperty owner='DisplayApplication.Components:CustomCheckBox' name='label' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='CustomCheckBox' fullname='DisplayApplication.Components:CustomCheckBox/CustomCheckBox' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[]]></description>
</method>
<method name='initialize' fullname='DisplayApplication.Components:CustomCheckBox/initialize' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='moduleFactory' fullname='DisplayApplication.Components:CustomCheckBox/moduleFactory/set' isStatic='false' isFinal='false' isOverride='true'  param_names='factory' param_types='mx.core:IFlexModuleFactory' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<packageRec name='DisplayApplication.Components.null' fullname='DisplayApplication.Components.null'>
<description><![CDATA[
  Generated by mxmlc 4.0
  Package: DisplayApplication.Components
 Class:   CustomTextInput
 Source:  C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\Components\CustomTextInput.mxml
 ]]></description>
</packageRec>
<classRec name='CustomTextInput' fullname='DisplayApplication.Components:CustomTextInput' sourcefile='C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\Components\CustomTextInput.mxml' namespace='DisplayApplication.Components' access='public' baseclass='spark.components:TextInput' interfaces='Interfaces:ICustomWritable' isFinal='false' isDynamic='false' >
<description><![CDATA[]]></description>
<metadata>
	<DefaultProperty owner='DisplayApplication.Components:CustomTextInput' name='text' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='CustomTextInput' fullname='DisplayApplication.Components:CustomTextInput/CustomTextInput' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[]]></description>
</method>
<method name='initialize' fullname='DisplayApplication.Components:CustomTextInput/initialize' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='moduleFactory' fullname='DisplayApplication.Components:CustomTextInput/moduleFactory/set' isStatic='false' isFinal='false' isOverride='true'  param_names='factory' param_types='mx.core:IFlexModuleFactory' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<packageRec name='DisplayApplication.Components.null' fullname='DisplayApplication.Components.null'>
<description><![CDATA[
  Generated by mxmlc 4.0
  Package: DisplayApplication.Components
 Class:   BackButton
 Source:  C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\Components\BackButton.mxml
 ]]></description>
</packageRec>
<classRec name='BackButton' fullname='DisplayApplication.Components:BackButton' sourcefile='C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\Components\BackButton.mxml' namespace='DisplayApplication.Components' access='public' baseclass='Shared:CustomButton' isFinal='false' isDynamic='false' >
<description><![CDATA[]]></description>
<metadata>
	<DefaultProperty owner='DisplayApplication.Components:BackButton' name='label' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='BackButton' fullname='DisplayApplication.Components:BackButton/BackButton' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[]]></description>
</method>
<method name='initialize' fullname='DisplayApplication.Components:BackButton/initialize' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='moduleFactory' fullname='DisplayApplication.Components:BackButton/moduleFactory/set' isStatic='false' isFinal='false' isOverride='true'  param_names='factory' param_types='mx.core:IFlexModuleFactory' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<packageRec name='DisplayApplication.Components.null' fullname='DisplayApplication.Components.null'>
<description><![CDATA[
  Generated by mxmlc 4.0
  Package: DisplayApplication.Components
 Class:   CustomRadioButton
 Source:  C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\Components\CustomRadioButton.mxml
 ]]></description>
</packageRec>
<classRec name='CustomRadioButton' fullname='DisplayApplication.Components:CustomRadioButton' sourcefile='C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\Components\CustomRadioButton.mxml' namespace='DisplayApplication.Components' access='public' baseclass='spark.components:RadioButton' interfaces='Interfaces:ICustomSelectable' isFinal='false' isDynamic='false' >
<description><![CDATA[]]></description>
<metadata>
	<DefaultProperty owner='DisplayApplication.Components:CustomRadioButton' name='label' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='CustomRadioButton' fullname='DisplayApplication.Components:CustomRadioButton/CustomRadioButton' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[]]></description>
</method>
<method name='initialize' fullname='DisplayApplication.Components:CustomRadioButton/initialize' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='moduleFactory' fullname='DisplayApplication.Components:CustomRadioButton/moduleFactory/set' isStatic='false' isFinal='false' isOverride='true'  param_names='factory' param_types='mx.core:IFlexModuleFactory' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<packageRec name='DisplayApplication.null' fullname='DisplayApplication.null'>
<description><![CDATA[
  Generated by mxmlc 4.0
  Package: DisplayApplication
 Class:   ErrorView
 Source:  C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\ErrorView.mxml
 ]]></description>
</packageRec>
<classRec name='ErrorView' fullname='DisplayApplication:ErrorView' sourcefile='C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\ErrorView.mxml' namespace='DisplayApplication' access='public' baseclass='spark.components:Group' isFinal='false' isDynamic='false' >
<description><![CDATA[]]></description>
<metadata>
	<DefaultProperty owner='DisplayApplication:ErrorView' name='mxmlContent' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='ErrorView' fullname='DisplayApplication:ErrorView/ErrorView' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[]]></description>
</method>
<method name='initialize' fullname='DisplayApplication:ErrorView/initialize' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='moduleFactory' fullname='DisplayApplication:ErrorView/moduleFactory/set' isStatic='false' isFinal='false' isOverride='true'  param_names='factory' param_types='mx.core:IFlexModuleFactory' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<packageRec name='DisplayApplication.null' fullname='DisplayApplication.null'>
<description><![CDATA[
  Generated by mxmlc 4.0
  Package: DisplayApplication
 Class:   StartAppView
 Source:  C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\StartAppView.mxml
 ]]></description>
</packageRec>
<classRec name='StartAppView' fullname='DisplayApplication:StartAppView' sourcefile='C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\StartAppView.mxml' namespace='DisplayApplication' access='public' baseclass='spark.components:Group' isFinal='false' isDynamic='false' >
<description><![CDATA[]]></description>
<metadata>
	<DefaultProperty owner='DisplayApplication:StartAppView' name='mxmlContent' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='StartAppView' fullname='DisplayApplication:StartAppView/StartAppView' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[]]></description>
</method>
<method name='initialize' fullname='DisplayApplication:StartAppView/initialize' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='moduleFactory' fullname='DisplayApplication:StartAppView/moduleFactory/set' isStatic='false' isFinal='false' isOverride='true'  param_names='factory' param_types='mx.core:IFlexModuleFactory' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='mainAppStartButton' fullname='DisplayApplication:StartAppView/mainAppStartButton' type='DisplayApplication.Components:StartButton' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:StartAppView/mainAppStartButton' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='videoPlayer' fullname='DisplayApplication:StartAppView/videoPlayer' type='spark.components:VideoPlayer' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:StartAppView/videoPlayer' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='videoSource' fullname='DisplayApplication:StartAppView/videoSource' type='spark.components.mediaClasses:DynamicStreamingVideoSource' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:StartAppView/videoSource' name='Bindable' >
	</Bindable>
</metadata>
</field>
<packageRec name='DisplayApplication.null' fullname='DisplayApplication.null'>
<description><![CDATA[
  Generated by mxmlc 4.0
  Package: DisplayApplication
 Class:   ItemViewContainer
 Source:  C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\ItemViewContainer.mxml
 ]]></description>
</packageRec>
<classRec name='ItemViewContainer' fullname='DisplayApplication:ItemViewContainer' sourcefile='C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\ItemViewContainer.mxml' namespace='DisplayApplication' access='public' baseclass='spark.components:Group' isFinal='false' isDynamic='false' >
<description><![CDATA[]]></description>
<metadata>
	<DefaultProperty owner='DisplayApplication:ItemViewContainer' name='mxmlContent' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='ItemViewContainer' fullname='DisplayApplication:ItemViewContainer/ItemViewContainer' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[]]></description>
</method>
<method name='initialize' fullname='DisplayApplication:ItemViewContainer/initialize' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='moduleFactory' fullname='DisplayApplication:ItemViewContainer/moduleFactory/set' isStatic='false' isFinal='false' isOverride='true'  param_names='factory' param_types='mx.core:IFlexModuleFactory' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='bgContainer' fullname='DisplayApplication:ItemViewContainer/bgContainer' type='spark.components:SkinnableContainer' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:ItemViewContainer/bgContainer' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='instrGroup' fullname='DisplayApplication:ItemViewContainer/instrGroup' type='spark.components:Group' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:ItemViewContainer/instrGroup' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='item_questionWrapperBox' fullname='DisplayApplication:ItemViewContainer/item_questionWrapperBox' type='spark.components:BorderContainer' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:ItemViewContainer/item_questionWrapperBox' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='itembgImage' fullname='DisplayApplication:ItemViewContainer/itembgImage' type='mx.controls:Image' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:ItemViewContainer/itembgImage' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='preGroup' fullname='DisplayApplication:ItemViewContainer/preGroup' type='spark.components:Group' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:ItemViewContainer/preGroup' name='Bindable' >
	</Bindable>
</metadata>
</field>
<packageRec name='DisplayApplication.null' fullname='DisplayApplication.null'>
<description><![CDATA[
  Generated by mxmlc 4.0
  Package: DisplayApplication
 Class:   DisplayWrapper
 Source:  C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\DisplayWrapper.mxml
 ]]></description>
</packageRec>
<classRec name='DisplayWrapper' fullname='DisplayApplication:DisplayWrapper' sourcefile='C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\DisplayWrapper.mxml' namespace='DisplayApplication' access='public' baseclass='spark.components:Group' isFinal='false' isDynamic='false' >
<description><![CDATA[]]></description>
<metadata>
	<DefaultProperty owner='DisplayApplication:DisplayWrapper' name='mxmlContent' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='DisplayWrapper' fullname='DisplayApplication:DisplayWrapper/DisplayWrapper' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[]]></description>
</method>
<method name='initialize' fullname='DisplayApplication:DisplayWrapper/initialize' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='moduleFactory' fullname='DisplayApplication:DisplayWrapper/moduleFactory/set' isStatic='false' isFinal='false' isOverride='true'  param_names='factory' param_types='mx.core:IFlexModuleFactory' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='tile' fullname='DisplayApplication:DisplayWrapper/tile' type='mx.containers:Tile' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:DisplayWrapper/tile' name='Bindable' >
	</Bindable>
</metadata>
</field>
<packageRec name='DisplayApplication.null' fullname='DisplayApplication.null'>
<description><![CDATA[
  Generated by mxmlc 4.0
  Package: DisplayApplication
 Class:   TestFinishedView
 Source:  C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\TestFinishedView.mxml
 ]]></description>
</packageRec>
<classRec name='TestFinishedView' fullname='DisplayApplication:TestFinishedView' sourcefile='C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\TestFinishedView.mxml' namespace='DisplayApplication' access='public' baseclass='spark.components:Group' interfaces='mx.binding:IBindingClient;mx.core:IStateClient2' isFinal='false' isDynamic='false' >
<description><![CDATA[]]></description>
<metadata>
	<DefaultProperty owner='DisplayApplication:TestFinishedView' name='mxmlContent' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='TestFinishedView' fullname='DisplayApplication:TestFinishedView/TestFinishedView' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[]]></description>
</method>
<method name='_TestFinishedView_CustomDesignButton1_i' fullname='DisplayApplication:TestFinishedView/private:_TestFinishedView_CustomDesignButton1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='DisplayApplication.Components:CustomDesignButton'>
</method>
<method name='_TestFinishedView_CustomDesignButton2_i' fullname='DisplayApplication:TestFinishedView/private:_TestFinishedView_CustomDesignButton2_i' isStatic='false' isFinal='false' isOverride='false'  result_type='DisplayApplication.Components:CustomDesignButton'>
</method>
<method name='_TestFinishedView_CustomDesignButton3_i' fullname='DisplayApplication:TestFinishedView/private:_TestFinishedView_CustomDesignButton3_i' isStatic='false' isFinal='false' isOverride='false'  result_type='DisplayApplication.Components:CustomDesignButton'>
</method>
<method name='_TestFinishedView_Group2_i' fullname='DisplayApplication:TestFinishedView/private:_TestFinishedView_Group2_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Group'>
</method>
<method name='_TestFinishedView_Group3_i' fullname='DisplayApplication:TestFinishedView/private:_TestFinishedView_Group3_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Group'>
</method>
<method name='_TestFinishedView_Group4_i' fullname='DisplayApplication:TestFinishedView/private:_TestFinishedView_Group4_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Group'>
</method>
<method name='_TestFinishedView_Group5_i' fullname='DisplayApplication:TestFinishedView/private:_TestFinishedView_Group5_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Group'>
</method>
<method name='_TestFinishedView_HorizontalLayout1_c' fullname='DisplayApplication:TestFinishedView/private:_TestFinishedView_HorizontalLayout1_c' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.layouts:HorizontalLayout'>
</method>
<method name='_TestFinishedView_HorizontalLayout2_c' fullname='DisplayApplication:TestFinishedView/private:_TestFinishedView_HorizontalLayout2_c' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.layouts:HorizontalLayout'>
</method>
<method name='_TestFinishedView_HorizontalLayout3_c' fullname='DisplayApplication:TestFinishedView/private:_TestFinishedView_HorizontalLayout3_c' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.layouts:HorizontalLayout'>
</method>
<method name='_TestFinishedView_HorizontalLayout4_c' fullname='DisplayApplication:TestFinishedView/private:_TestFinishedView_HorizontalLayout4_c' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.layouts:HorizontalLayout'>
</method>
<method name='_TestFinishedView_Image1_i' fullname='DisplayApplication:TestFinishedView/private:_TestFinishedView_Image1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.controls:Image'>
</method>
<method name='_TestFinishedView_Label1_i' fullname='DisplayApplication:TestFinishedView/private:_TestFinishedView_Label1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Label'>
</method>
<method name='_TestFinishedView_Label2_i' fullname='DisplayApplication:TestFinishedView/private:_TestFinishedView_Label2_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Label'>
</method>
<method name='_TestFinishedView_Label3_i' fullname='DisplayApplication:TestFinishedView/private:_TestFinishedView_Label3_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Label'>
</method>
<method name='_TestFinishedView_Object1_i' fullname='DisplayApplication:TestFinishedView/private:_TestFinishedView_Object1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
</method>
<method name='_TestFinishedView_Object2_i' fullname='DisplayApplication:TestFinishedView/private:_TestFinishedView_Object2_i' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
</method>
<method name='_TestFinishedView_SoundButton1_i' fullname='DisplayApplication:TestFinishedView/private:_TestFinishedView_SoundButton1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='DisplayApplication.Components:SoundButton'>
</method>
<method name='_TestFinishedView_SoundButton2_i' fullname='DisplayApplication:TestFinishedView/private:_TestFinishedView_SoundButton2_i' isStatic='false' isFinal='false' isOverride='false'  result_type='DisplayApplication.Components:SoundButton'>
</method>
<method name='_TestFinishedView_SoundButton3_i' fullname='DisplayApplication:TestFinishedView/private:_TestFinishedView_SoundButton3_i' isStatic='false' isFinal='false' isOverride='false'  result_type='DisplayApplication.Components:SoundButton'>
</method>
<method name='_TestFinishedView_bindingsSetup' fullname='DisplayApplication:TestFinishedView/private:_TestFinishedView_bindingsSetup' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='__forwardButton_click' fullname='DisplayApplication:TestFinishedView/__forwardButton_click' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='__newTestButton_click' fullname='DisplayApplication:TestFinishedView/__newTestButton_click' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='finish' fullname='DisplayApplication:TestFinishedView/private:finish' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='initialize' fullname='DisplayApplication:TestFinishedView/initialize' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='moduleFactory' fullname='DisplayApplication:TestFinishedView/moduleFactory/set' isStatic='false' isFinal='false' isOverride='true'  param_names='factory' param_types='mx.core:IFlexModuleFactory' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='watcherSetupUtil' fullname='DisplayApplication:TestFinishedView/watcherSetupUtil/set' isStatic='true' isFinal='false' isOverride='false'  param_names='watcherSetupUtil' param_types='mx.binding:IWatcherSetupUtil2' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='FINISHED' fullname='DisplayApplication:TestFinishedView/FINISHED' type='String' isStatic='true' isConst='true' defaultValue='finished' >
</field>
<field name='PRINT' fullname='DisplayApplication:TestFinishedView/PRINT' type='String' isStatic='true' isConst='true' defaultValue='print' >
</field>
<field name='_TestFinishedView_Group4' fullname='DisplayApplication:TestFinishedView/_TestFinishedView_Group4' type='spark.components:Group' isStatic='false' isConst='false' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication:TestFinishedView/_TestFinishedView_Group4' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='_TestFinishedView_Group5' fullname='DisplayApplication:TestFinishedView/_TestFinishedView_Group5' type='spark.components:Group' isStatic='false' isConst='false' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication:TestFinishedView/_TestFinishedView_Group5' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='__moduleFactoryInitialized' fullname='DisplayApplication:TestFinishedView/private:__moduleFactoryInitialized' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_bindingsBeginWithWord' fullname='DisplayApplication:TestFinishedView/mx_internal:_bindingsBeginWithWord' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_bindingsByDestination' fullname='DisplayApplication:TestFinishedView/mx_internal:_bindingsByDestination' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_bindings' fullname='DisplayApplication:TestFinishedView/mx_internal:_bindings' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_watcherSetupUtil' fullname='DisplayApplication:TestFinishedView/private:_watcherSetupUtil' type='mx.binding:IWatcherSetupUtil2' isStatic='true' isConst='false' >
</field>
<field name='_watchers' fullname='DisplayApplication:TestFinishedView/mx_internal:_watchers' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='congratsContainer' fullname='DisplayApplication:TestFinishedView/congratsContainer' type='spark.components:Group' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:TestFinishedView/congratsContainer' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='congratsSound' fullname='DisplayApplication:TestFinishedView/congratsSound' type='DisplayApplication.Components:SoundButton' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:TestFinishedView/congratsSound' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='congrats' fullname='DisplayApplication:TestFinishedView/congrats' type='spark.components:Label' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:TestFinishedView/congrats' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='endReference' fullname='DisplayApplication:TestFinishedView/endReference' type='Object' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:TestFinishedView/endReference' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='forwardButton' fullname='DisplayApplication:TestFinishedView/forwardButton' type='DisplayApplication.Components:CustomDesignButton' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:TestFinishedView/forwardButton' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='mainAppEndButton' fullname='DisplayApplication:TestFinishedView/mainAppEndButton' type='DisplayApplication.Components:CustomDesignButton' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:TestFinishedView/mainAppEndButton' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='newTReference' fullname='DisplayApplication:TestFinishedView/newTReference' type='Object' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:TestFinishedView/newTReference' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='newTestButton' fullname='DisplayApplication:TestFinishedView/newTestButton' type='DisplayApplication.Components:CustomDesignButton' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:TestFinishedView/newTestButton' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='printIcon' fullname='DisplayApplication:TestFinishedView/printIcon' type='mx.controls:Image' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:TestFinishedView/printIcon' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='printSound' fullname='DisplayApplication:TestFinishedView/printSound' type='DisplayApplication.Components:SoundButton' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:TestFinishedView/printSound' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='printTextContainer' fullname='DisplayApplication:TestFinishedView/printTextContainer' type='spark.components:Group' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:TestFinishedView/printTextContainer' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='whatNextSound' fullname='DisplayApplication:TestFinishedView/whatNextSound' type='DisplayApplication.Components:SoundButton' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:TestFinishedView/whatNextSound' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='whatNext' fullname='DisplayApplication:TestFinishedView/whatNext' type='spark.components:Label' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:TestFinishedView/whatNext' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='youCanPrint' fullname='DisplayApplication:TestFinishedView/youCanPrint' type='spark.components:Label' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:TestFinishedView/youCanPrint' name='Bindable' >
	</Bindable>
</metadata>
</field>
<packageRec name='DisplayApplication.null' fullname='DisplayApplication.null'>
<description><![CDATA[
  Generated by mxmlc 4.0
  Package: DisplayApplication
 Class:   LogInView
 Source:  C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\LogInView.mxml
 ]]></description>
</packageRec>
<classRec name='LogInView' fullname='DisplayApplication:LogInView' sourcefile='C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\LogInView.mxml' namespace='DisplayApplication' access='public' baseclass='spark.components:Group' interfaces='mx.binding:IBindingClient;mx.core:IStateClient2' isFinal='false' isDynamic='false' >
<description><![CDATA[]]></description>
<metadata>
	<DefaultProperty owner='DisplayApplication:LogInView' name='mxmlContent' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='LogInView' fullname='DisplayApplication:LogInView/LogInView' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[]]></description>
</method>
<method name='_LogInView_Button1_i' fullname='DisplayApplication:LogInView/private:_LogInView_Button1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Button'>
</method>
<method name='_LogInView_Button2_i' fullname='DisplayApplication:LogInView/private:_LogInView_Button2_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Button'>
</method>
<method name='_LogInView_Button3_i' fullname='DisplayApplication:LogInView/private:_LogInView_Button3_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Button'>
</method>
<method name='_LogInView_Group2_i' fullname='DisplayApplication:LogInView/private:_LogInView_Group2_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Group'>
</method>
<method name='_LogInView_Group3_i' fullname='DisplayApplication:LogInView/private:_LogInView_Group3_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Group'>
</method>
<method name='_LogInView_Group4_i' fullname='DisplayApplication:LogInView/private:_LogInView_Group4_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Group'>
</method>
<method name='_LogInView_Group5_i' fullname='DisplayApplication:LogInView/private:_LogInView_Group5_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Group'>
</method>
<method name='_LogInView_Group6_i' fullname='DisplayApplication:LogInView/private:_LogInView_Group6_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Group'>
</method>
<method name='_LogInView_Group7_i' fullname='DisplayApplication:LogInView/private:_LogInView_Group7_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Group'>
</method>
<method name='_LogInView_HGroup1_i' fullname='DisplayApplication:LogInView/private:_LogInView_HGroup1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:HGroup'>
</method>
<method name='_LogInView_HGroup2_i' fullname='DisplayApplication:LogInView/private:_LogInView_HGroup2_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:HGroup'>
</method>
<method name='_LogInView_HorizontalLayout1_c' fullname='DisplayApplication:LogInView/private:_LogInView_HorizontalLayout1_c' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.layouts:HorizontalLayout'>
</method>
<method name='_LogInView_HorizontalLayout2_c' fullname='DisplayApplication:LogInView/private:_LogInView_HorizontalLayout2_c' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.layouts:HorizontalLayout'>
</method>
<method name='_LogInView_HorizontalLayout3_c' fullname='DisplayApplication:LogInView/private:_LogInView_HorizontalLayout3_c' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.layouts:HorizontalLayout'>
</method>
<method name='_LogInView_Label1_i' fullname='DisplayApplication:LogInView/private:_LogInView_Label1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Label'>
</method>
<method name='_LogInView_Label2_i' fullname='DisplayApplication:LogInView/private:_LogInView_Label2_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Label'>
</method>
<method name='_LogInView_Label3_i' fullname='DisplayApplication:LogInView/private:_LogInView_Label3_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Label'>
</method>
<method name='_LogInView_Label4_i' fullname='DisplayApplication:LogInView/private:_LogInView_Label4_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Label'>
</method>
<method name='_LogInView_Label5_i' fullname='DisplayApplication:LogInView/private:_LogInView_Label5_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Label'>
</method>
<method name='_LogInView_SmallSoundButton1_i' fullname='DisplayApplication:LogInView/private:_LogInView_SmallSoundButton1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='DisplayApplication.Components:SmallSoundButton'>
</method>
<method name='_LogInView_SoundButton1_i' fullname='DisplayApplication:LogInView/private:_LogInView_SoundButton1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='DisplayApplication.Components:SoundButton'>
</method>
<method name='_LogInView_SoundButton2_i' fullname='DisplayApplication:LogInView/private:_LogInView_SoundButton2_i' isStatic='false' isFinal='false' isOverride='false'  result_type='DisplayApplication.Components:SoundButton'>
</method>
<method name='_LogInView_SoundButton3_i' fullname='DisplayApplication:LogInView/private:_LogInView_SoundButton3_i' isStatic='false' isFinal='false' isOverride='false'  result_type='DisplayApplication.Components:SoundButton'>
</method>
<method name='_LogInView_TextInput1_i' fullname='DisplayApplication:LogInView/private:_LogInView_TextInput1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:TextInput'>
</method>
<method name='_LogInView_TextInput2_i' fullname='DisplayApplication:LogInView/private:_LogInView_TextInput2_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:TextInput'>
</method>
<method name='_LogInView_TextInput3_i' fullname='DisplayApplication:LogInView/private:_LogInView_TextInput3_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:TextInput'>
</method>
<method name='_LogInView_TextInput4_i' fullname='DisplayApplication:LogInView/private:_LogInView_TextInput4_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:TextInput'>
</method>
<method name='_LogInView_TextInput5_i' fullname='DisplayApplication:LogInView/private:_LogInView_TextInput5_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:TextInput'>
</method>
<method name='_LogInView_VerticalLayout1_c' fullname='DisplayApplication:LogInView/private:_LogInView_VerticalLayout1_c' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.layouts:VerticalLayout'>
</method>
<method name='_LogInView_VerticalLayout2_c' fullname='DisplayApplication:LogInView/private:_LogInView_VerticalLayout2_c' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.layouts:VerticalLayout'>
</method>
<method name='_LogInView_bindingsSetup' fullname='DisplayApplication:LogInView/private:_LogInView_bindingsSetup' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='___LogInView_State1_enterState' fullname='DisplayApplication:LogInView/___LogInView_State1_enterState' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='mx.events:FlexEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='___LogInView_State1_exitState' fullname='DisplayApplication:LogInView/___LogInView_State1_exitState' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='mx.events:FlexEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='___LogInView_State3_enterState' fullname='DisplayApplication:LogInView/___LogInView_State3_enterState' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='mx.events:FlexEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='___LogInView_State3_exitState' fullname='DisplayApplication:LogInView/___LogInView_State3_exitState' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='mx.events:FlexEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='___LogInView_State4_enterState' fullname='DisplayApplication:LogInView/___LogInView_State4_enterState' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='mx.events:FlexEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='___LogInView_State4_exitState' fullname='DisplayApplication:LogInView/___LogInView_State4_exitState' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='mx.events:FlexEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='__loginSoundButton_click' fullname='DisplayApplication:LogInView/__loginSoundButton_click' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='__registerSoundButton_click' fullname='DisplayApplication:LogInView/__registerSoundButton_click' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='__yesButton_click' fullname='DisplayApplication:LogInView/__yesButton_click' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='initialize' fullname='DisplayApplication:LogInView/initialize' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='moduleFactory' fullname='DisplayApplication:LogInView/moduleFactory/set' isStatic='false' isFinal='false' isOverride='true'  param_names='factory' param_types='mx.core:IFlexModuleFactory' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='watcherSetupUtil' fullname='DisplayApplication:LogInView/watcherSetupUtil/set' isStatic='true' isFinal='false' isOverride='false'  param_names='watcherSetupUtil' param_types='mx.binding:IWatcherSetupUtil2' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='_LogInView_HGroup2' fullname='DisplayApplication:LogInView/_LogInView_HGroup2' type='spark.components:HGroup' isStatic='false' isConst='false' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='__moduleFactoryInitialized' fullname='DisplayApplication:LogInView/private:__moduleFactoryInitialized' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_bindingsBeginWithWord' fullname='DisplayApplication:LogInView/mx_internal:_bindingsBeginWithWord' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_bindingsByDestination' fullname='DisplayApplication:LogInView/mx_internal:_bindingsByDestination' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_bindings' fullname='DisplayApplication:LogInView/mx_internal:_bindings' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_watcherSetupUtil' fullname='DisplayApplication:LogInView/private:_watcherSetupUtil' type='mx.binding:IWatcherSetupUtil2' isStatic='true' isConst='false' >
</field>
<field name='_watchers' fullname='DisplayApplication:LogInView/mx_internal:_watchers' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='innerLayout' fullname='DisplayApplication:LogInView/innerLayout' type='spark.components:Group' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:LogInView/innerLayout' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='input1' fullname='DisplayApplication:LogInView/input1' type='spark.components:TextInput' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:LogInView/input1' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='input2' fullname='DisplayApplication:LogInView/input2' type='spark.components:TextInput' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:LogInView/input2' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='input3' fullname='DisplayApplication:LogInView/input3' type='spark.components:TextInput' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:LogInView/input3' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='input4' fullname='DisplayApplication:LogInView/input4' type='spark.components:TextInput' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:LogInView/input4' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='inputGroup' fullname='DisplayApplication:LogInView/inputGroup' type='spark.components:Group' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:LogInView/inputGroup' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='input' fullname='DisplayApplication:LogInView/input' type='spark.components:TextInput' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:LogInView/input' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='loginInstructionBox' fullname='DisplayApplication:LogInView/loginInstructionBox' type='spark.components:Group' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:LogInView/loginInstructionBox' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='loginSoundButton' fullname='DisplayApplication:LogInView/loginSoundButton' type='DisplayApplication.Components:SoundButton' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:LogInView/loginSoundButton' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='login_newCode' fullname='DisplayApplication:LogInView/login_newCode' type='spark.components:Label' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:LogInView/login_newCode' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='login_submitButton' fullname='DisplayApplication:LogInView/login_submitButton' type='spark.components:Button' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:LogInView/login_submitButton' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='newuserSoundButton' fullname='DisplayApplication:LogInView/newuserSoundButton' type='DisplayApplication.Components:SoundButton' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:LogInView/newuserSoundButton' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='noButton' fullname='DisplayApplication:LogInView/noButton' type='spark.components:Button' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:LogInView/noButton' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='pleaseEnterCode' fullname='DisplayApplication:LogInView/pleaseEnterCode' type='spark.components:Label' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:LogInView/pleaseEnterCode' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='registerInstructionBox' fullname='DisplayApplication:LogInView/registerInstructionBox' type='spark.components:Group' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:LogInView/registerInstructionBox' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='registerSoundButton' fullname='DisplayApplication:LogInView/registerSoundButton' type='DisplayApplication.Components:SoundButton' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:LogInView/registerSoundButton' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='retryInput' fullname='DisplayApplication:LogInView/retryInput' type='spark.components:Group' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:LogInView/retryInput' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='retrylabel' fullname='DisplayApplication:LogInView/retrylabel' type='spark.components:Label' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:LogInView/retrylabel' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='retrysound' fullname='DisplayApplication:LogInView/retrysound' type='DisplayApplication.Components:SmallSoundButton' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:LogInView/retrysound' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='testMadeInPast' fullname='DisplayApplication:LogInView/testMadeInPast' type='spark.components:Label' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:LogInView/testMadeInPast' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='testedButtons' fullname='DisplayApplication:LogInView/testedButtons' type='spark.components:HGroup' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:LogInView/testedButtons' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='testedQuestionBox' fullname='DisplayApplication:LogInView/testedQuestionBox' type='spark.components:Group' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:LogInView/testedQuestionBox' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='yesButton' fullname='DisplayApplication:LogInView/yesButton' type='spark.components:Button' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:LogInView/yesButton' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='yourNewCode' fullname='DisplayApplication:LogInView/yourNewCode' type='spark.components:Label' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:LogInView/yourNewCode' name='Bindable' >
	</Bindable>
</metadata>
</field>
<packageRec name='DisplayApplication.null' fullname='DisplayApplication.null'>
<description><![CDATA[
  Generated by mxmlc 4.0
  Package: DisplayApplication
 Class:   Overview
 Source:  C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\Overview.mxml
 ]]></description>
</packageRec>
<classRec name='Overview' fullname='DisplayApplication:Overview' sourcefile='C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\Overview.mxml' namespace='DisplayApplication' access='public' baseclass='spark.components:Group' interfaces='mx.binding:IBindingClient;mx.core:IStateClient2' isFinal='false' isDynamic='false' >
<description><![CDATA[]]></description>
<metadata>
	<DefaultProperty owner='DisplayApplication:Overview' name='mxmlContent' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='Overview' fullname='DisplayApplication:Overview/Overview' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[]]></description>
</method>
<method name='_Overview_Button1_i' fullname='DisplayApplication:Overview/private:_Overview_Button1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Button'>
</method>
<method name='_Overview_Button2_i' fullname='DisplayApplication:Overview/private:_Overview_Button2_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Button'>
</method>
<method name='_Overview_Button3_i' fullname='DisplayApplication:Overview/private:_Overview_Button3_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Button'>
</method>
<method name='_Overview_Button4_i' fullname='DisplayApplication:Overview/private:_Overview_Button4_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Button'>
</method>
<method name='_Overview_Group2_i' fullname='DisplayApplication:Overview/private:_Overview_Group2_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Group'>
</method>
<method name='_Overview_Group3_i' fullname='DisplayApplication:Overview/private:_Overview_Group3_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Group'>
</method>
<method name='_Overview_Group4_i' fullname='DisplayApplication:Overview/private:_Overview_Group4_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Group'>
</method>
<method name='_Overview_Group5_i' fullname='DisplayApplication:Overview/private:_Overview_Group5_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Group'>
</method>
<method name='_Overview_HorizontalLayout1_c' fullname='DisplayApplication:Overview/private:_Overview_HorizontalLayout1_c' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.layouts:HorizontalLayout'>
</method>
<method name='_Overview_HorizontalLayout2_c' fullname='DisplayApplication:Overview/private:_Overview_HorizontalLayout2_c' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.layouts:HorizontalLayout'>
</method>
<method name='_Overview_HorizontalLayout3_c' fullname='DisplayApplication:Overview/private:_Overview_HorizontalLayout3_c' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.layouts:HorizontalLayout'>
</method>
<method name='_Overview_HorizontalLayout4_c' fullname='DisplayApplication:Overview/private:_Overview_HorizontalLayout4_c' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.layouts:HorizontalLayout'>
</method>
<method name='_Overview_Label1_i' fullname='DisplayApplication:Overview/private:_Overview_Label1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Label'>
</method>
<method name='_Overview_Label2_i' fullname='DisplayApplication:Overview/private:_Overview_Label2_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Label'>
</method>
<method name='_Overview_SoundButton1_i' fullname='DisplayApplication:Overview/private:_Overview_SoundButton1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='DisplayApplication.Components:SoundButton'>
</method>
<method name='_Overview_SoundButton2_i' fullname='DisplayApplication:Overview/private:_Overview_SoundButton2_i' isStatic='false' isFinal='false' isOverride='false'  result_type='DisplayApplication.Components:SoundButton'>
</method>
<method name='_Overview_bindingsSetup' fullname='DisplayApplication:Overview/private:_Overview_bindingsSetup' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='___Overview_State1_enterState' fullname='DisplayApplication:Overview/___Overview_State1_enterState' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='mx.events:FlexEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='___Overview_State1_exitState' fullname='DisplayApplication:Overview/___Overview_State1_exitState' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='mx.events:FlexEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='___Overview_State2_enterState' fullname='DisplayApplication:Overview/___Overview_State2_enterState' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='mx.events:FlexEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='___Overview_State2_exitState' fullname='DisplayApplication:Overview/___Overview_State2_exitState' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='mx.events:FlexEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='__chooseSubjectSnd_click' fullname='DisplayApplication:Overview/__chooseSubjectSnd_click' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='__levelSoundButton_click' fullname='DisplayApplication:Overview/__levelSoundButton_click' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='initialize' fullname='DisplayApplication:Overview/initialize' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='moduleFactory' fullname='DisplayApplication:Overview/moduleFactory/set' isStatic='false' isFinal='false' isOverride='true'  param_names='factory' param_types='mx.core:IFlexModuleFactory' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='watcherSetupUtil' fullname='DisplayApplication:Overview/watcherSetupUtil/set' isStatic='true' isFinal='false' isOverride='false'  param_names='watcherSetupUtil' param_types='mx.binding:IWatcherSetupUtil2' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='__moduleFactoryInitialized' fullname='DisplayApplication:Overview/private:__moduleFactoryInitialized' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_bindingsBeginWithWord' fullname='DisplayApplication:Overview/mx_internal:_bindingsBeginWithWord' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_bindingsByDestination' fullname='DisplayApplication:Overview/mx_internal:_bindingsByDestination' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_bindings' fullname='DisplayApplication:Overview/mx_internal:_bindings' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_watcherSetupUtil' fullname='DisplayApplication:Overview/private:_watcherSetupUtil' type='mx.binding:IWatcherSetupUtil2' isStatic='true' isConst='false' >
</field>
<field name='_watchers' fullname='DisplayApplication:Overview/mx_internal:_watchers' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='button0' fullname='DisplayApplication:Overview/button0' type='spark.components:Button' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:Overview/button0' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='button1' fullname='DisplayApplication:Overview/button1' type='spark.components:Button' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:Overview/button1' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='button2' fullname='DisplayApplication:Overview/button2' type='spark.components:Button' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:Overview/button2' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='button3' fullname='DisplayApplication:Overview/button3' type='spark.components:Button' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:Overview/button3' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='chooseSubjectSnd' fullname='DisplayApplication:Overview/chooseSubjectSnd' type='DisplayApplication.Components:SoundButton' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:Overview/chooseSubjectSnd' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='chooseSubject' fullname='DisplayApplication:Overview/chooseSubject' type='spark.components:Label' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:Overview/chooseSubject' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='description' fullname='DisplayApplication:Overview/description' type='spark.components:Group' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:Overview/description' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='levelButtonsContainer' fullname='DisplayApplication:Overview/levelButtonsContainer' type='spark.components:Group' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:Overview/levelButtonsContainer' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='levelSoundButton' fullname='DisplayApplication:Overview/levelSoundButton' type='DisplayApplication.Components:SoundButton' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:Overview/levelSoundButton' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='levelgroup' fullname='DisplayApplication:Overview/levelgroup' type='spark.components:Group' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:Overview/levelgroup' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='overviewgroup' fullname='DisplayApplication:Overview/overviewgroup' type='spark.components:Group' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:Overview/overviewgroup' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='whatLevel' fullname='DisplayApplication:Overview/whatLevel' type='spark.components:Label' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:Overview/whatLevel' name='Bindable' >
	</Bindable>
</metadata>
</field>
<packageRec name='DisplayApplication.null' fullname='DisplayApplication.null'>
<description><![CDATA[
  Generated by mxmlc 4.0
  Package: DisplayApplication
 Class:   QuestionView
 Source:  C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\QuestionView.mxml
 ]]></description>
</packageRec>
<classRec name='QuestionView' fullname='DisplayApplication:QuestionView' sourcefile='C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\QuestionView.mxml' namespace='DisplayApplication' access='public' baseclass='spark.components:Group' isFinal='false' isDynamic='false' >
<description><![CDATA[]]></description>
<metadata>
	<DefaultProperty owner='DisplayApplication:QuestionView' name='mxmlContent' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='QuestionView' fullname='DisplayApplication:QuestionView/QuestionView' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[]]></description>
</method>
<method name='initialize' fullname='DisplayApplication:QuestionView/initialize' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='moduleFactory' fullname='DisplayApplication:QuestionView/moduleFactory/set' isStatic='false' isFinal='false' isOverride='true'  param_names='factory' param_types='mx.core:IFlexModuleFactory' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='buttonArea' fullname='DisplayApplication:QuestionView/buttonArea' type='spark.components:Group' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:QuestionView/buttonArea' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='content' fullname='DisplayApplication:QuestionView/content' type='spark.components:Group' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication:QuestionView/content' name='Bindable' >
	</Bindable>
</metadata>
</field>
<packageRec name='DisplayApplication.ItemView.null' fullname='DisplayApplication.ItemView.null'>
<description><![CDATA[
  Generated by mxmlc 4.0
  Package: DisplayApplication.ItemView
 Class:   reaSoundImg
 Source:  C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\ItemView\reaSoundImg.mxml
 ]]></description>
</packageRec>
<classRec name='reaSoundImg' fullname='DisplayApplication.ItemView:reaSoundImg' sourcefile='C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\ItemView\reaSoundImg.mxml' namespace='DisplayApplication.ItemView' access='public' baseclass='mx.controls:Image' isFinal='false' isDynamic='false' >
<description><![CDATA[]]></description>
</classRec>
<method name='initialize' fullname='DisplayApplication.ItemView:reaSoundImg/initialize' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='reaSoundImg' fullname='DisplayApplication.ItemView:reaSoundImg/reaSoundImg' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[]]></description>
</method>
<method name='moduleFactory' fullname='DisplayApplication.ItemView:reaSoundImg/moduleFactory/set' isStatic='false' isFinal='false' isOverride='true'  param_names='factory' param_types='mx.core:IFlexModuleFactory' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<packageRec name='DisplayApplication.ItemView.null' fullname='DisplayApplication.ItemView.null'>
<description><![CDATA[
  Generated by mxmlc 4.0
  Package: DisplayApplication.ItemView
 Class:   reaPanelCom
 Source:  C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\ItemView\reaPanelCom.mxml
 ]]></description>
</packageRec>
<classRec name='reaPanelCom' fullname='DisplayApplication.ItemView:reaPanelCom' sourcefile='C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\ItemView\reaPanelCom.mxml' namespace='DisplayApplication.ItemView' access='public' baseclass='spark.components:Panel' isFinal='false' isDynamic='false' >
<description><![CDATA[]]></description>
<metadata>
	<DefaultProperty owner='DisplayApplication.ItemView:reaPanelCom' name='mxmlContentFactory' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='initialize' fullname='DisplayApplication.ItemView:reaPanelCom/initialize' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='reaPanelCom' fullname='DisplayApplication.ItemView:reaPanelCom/reaPanelCom' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[]]></description>
</method>
<method name='moduleFactory' fullname='DisplayApplication.ItemView:reaPanelCom/moduleFactory/set' isStatic='false' isFinal='false' isOverride='true'  param_names='factory' param_types='mx.core:IFlexModuleFactory' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<packageRec name='DisplayApplication.ItemView.null' fullname='DisplayApplication.ItemView.null'>
<description><![CDATA[
  Generated by mxmlc 4.0
  Package: DisplayApplication.ItemView
 Class:   reaBtnNext
 Source:  C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\ItemView\reaBtnNext.mxml
 ]]></description>
</packageRec>
<classRec name='reaBtnNext' fullname='DisplayApplication.ItemView:reaBtnNext' sourcefile='C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\ItemView\reaBtnNext.mxml' namespace='DisplayApplication.ItemView' access='public' baseclass='spark.components:Button' isFinal='false' isDynamic='false' >
<description><![CDATA[]]></description>
<metadata>
	<DefaultProperty owner='DisplayApplication.ItemView:reaBtnNext' name='label' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='initialize' fullname='DisplayApplication.ItemView:reaBtnNext/initialize' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='reaBtnNext' fullname='DisplayApplication.ItemView:reaBtnNext/reaBtnNext' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[]]></description>
</method>
<method name='moduleFactory' fullname='DisplayApplication.ItemView:reaBtnNext/moduleFactory/set' isStatic='false' isFinal='false' isOverride='true'  param_names='factory' param_types='mx.core:IFlexModuleFactory' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<packageRec name='DisplayApplication.ItemView.null' fullname='DisplayApplication.ItemView.null'>
<description><![CDATA[
  Generated by mxmlc 4.0
  Package: DisplayApplication.ItemView
 Class:   reaBackimg
 Source:  C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\ItemView\reaBackimg.mxml
 ]]></description>
</packageRec>
<classRec name='reaBackimg' fullname='DisplayApplication.ItemView:reaBackimg' sourcefile='C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\ItemView\reaBackimg.mxml' namespace='DisplayApplication.ItemView' access='public' baseclass='mx.controls:Image' isFinal='false' isDynamic='false' >
<description><![CDATA[]]></description>
</classRec>
<method name='initialize' fullname='DisplayApplication.ItemView:reaBackimg/initialize' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='reaBackimg' fullname='DisplayApplication.ItemView:reaBackimg/reaBackimg' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[]]></description>
</method>
<method name='moduleFactory' fullname='DisplayApplication.ItemView:reaBackimg/moduleFactory/set' isStatic='false' isFinal='false' isOverride='true'  param_names='factory' param_types='mx.core:IFlexModuleFactory' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<packageRec name='DisplayApplication.ItemView.null' fullname='DisplayApplication.ItemView.null'>
<description><![CDATA[
  Generated by mxmlc 4.0
  Package: DisplayApplication.ItemView
 Class:   InstructionField
 Source:  C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\ItemView\InstructionField.mxml
 ]]></description>
</packageRec>
<classRec name='InstructionField' fullname='DisplayApplication.ItemView:InstructionField' sourcefile='C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\ItemView\InstructionField.mxml' namespace='DisplayApplication.ItemView' access='public' baseclass='spark.components:Group' isFinal='false' isDynamic='false' >
<description><![CDATA[]]></description>
<metadata>
	<DefaultProperty owner='DisplayApplication.ItemView:InstructionField' name='mxmlContent' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='InstructionField' fullname='DisplayApplication.ItemView:InstructionField/InstructionField' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[]]></description>
</method>
<method name='initialize' fullname='DisplayApplication.ItemView:InstructionField/initialize' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='moduleFactory' fullname='DisplayApplication.ItemView:InstructionField/moduleFactory/set' isStatic='false' isFinal='false' isOverride='true'  param_names='factory' param_types='mx.core:IFlexModuleFactory' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='instruction' fullname='DisplayApplication.ItemView:InstructionField/instruction' type='spark.components:TextArea' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication.ItemView:InstructionField/instruction' name='Bindable' >
	</Bindable>
</metadata>
</field>
<packageRec name='.null' fullname='.null'>
<description><![CDATA[
  Generated by mxmlc 4.0
  Package: 
 Class:   xmlTest
 Source:  C:\lea\Itementwicklung\xmlTest\src\xmlTest.mxml
 ]]></description>
</packageRec>
<classRec name='xmlTest' fullname='xmlTest' sourcefile='C:\lea\Itementwicklung\xmlTest\src\xmlTest.mxml' namespace='' access='public' baseclass='spark.components:Application' isFinal='false' isDynamic='false' >
<description><![CDATA[]]></description>
<metadata>
	<DefaultProperty owner='xmlTest' name='mxmlContentFactory' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='___xmlTest_Application1_creationComplete' fullname='xmlTest/___xmlTest_Application1_creationComplete' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='mx.events:FlexEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_xmlTest_Array1_c' fullname='xmlTest/private:_xmlTest_Array1_c' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='_xmlTest_DisplayManager1_i' fullname='xmlTest/private:_xmlTest_DisplayManager1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='MainApplication:DisplayManager'>
</method>
<method name='_xmlTest_StylesInit' fullname='xmlTest/mx_internal:_xmlTest_StylesInit' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='connectToDisplay' fullname='xmlTest/private:connectToDisplay' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='initApp' fullname='xmlTest/private:initApp' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='initialize' fullname='xmlTest/initialize' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='removeDisplay' fullname='xmlTest/private:removeDisplay' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='tweenFinished' fullname='xmlTest/private:tweenFinished' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='xmlTest' fullname='xmlTest/xmlTest' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[]]></description>
</method>
<method name='moduleFactory' fullname='xmlTest/moduleFactory/set' isStatic='false' isFinal='false' isOverride='true'  param_names='factory' param_types='mx.core:IFlexModuleFactory' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='_embed__font_Ideal_0_medium_normal_1498253841' fullname='xmlTest/private:_embed__font_Ideal_0_medium_normal_1498253841' type='Class' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_embed_css_Assets_BMBF_Logo_png_1931127321' fullname='xmlTest/private:_embed_css_Assets_BMBF_Logo_png_1931127321' type='Class' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_embed_css_Assets_background_language_png_849399167' fullname='xmlTest/private:_embed_css_Assets_background_language_png_849399167' type='Class' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_embed_css_Assets_background_math_png_1023392129' fullname='xmlTest/private:_embed_css_Assets_background_math_png_1023392129' type='Class' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_embed_css_Assets_background_reading_png_1756932185' fullname='xmlTest/private:_embed_css_Assets_background_reading_png_1756932185' type='Class' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_embed_css_Assets_background_writing_png_926441319' fullname='xmlTest/private:_embed_css_Assets_background_writing_png_926441319' type='Class' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_embed_css_Assets_button_back_down_png_2094170983' fullname='xmlTest/private:_embed_css_Assets_button_back_down_png_2094170983' type='Class' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_embed_css_Assets_button_back_over_png_1704099495' fullname='xmlTest/private:_embed_css_Assets_button_back_over_png_1704099495' type='Class' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_embed_css_Assets_button_back_png_313799195' fullname='xmlTest/private:_embed_css_Assets_button_back_png_313799195' type='Class' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_embed_css_Assets_button_forward_down_png_882491419' fullname='xmlTest/private:_embed_css_Assets_button_forward_down_png_882491419' type='Class' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_embed_css_Assets_button_forward_over_png_44499583' fullname='xmlTest/private:_embed_css_Assets_button_forward_over_png_44499583' type='Class' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_embed_css_Assets_button_forward_png_1384140637' fullname='xmlTest/private:_embed_css_Assets_button_forward_png_1384140637' type='Class' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_embed_css_Assets_button_language_down_png_2024722661' fullname='xmlTest/private:_embed_css_Assets_button_language_down_png_2024722661' type='Class' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_embed_css_Assets_button_language_over_png_1926367749' fullname='xmlTest/private:_embed_css_Assets_button_language_over_png_1926367749' type='Class' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_embed_css_Assets_button_language_png_1397375191' fullname='xmlTest/private:_embed_css_Assets_button_language_png_1397375191' type='Class' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_embed_css_Assets_button_lostcode_down_png_1550667559' fullname='xmlTest/private:_embed_css_Assets_button_lostcode_down_png_1550667559' type='Class' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_embed_css_Assets_button_lostcode_over_png_942780103' fullname='xmlTest/private:_embed_css_Assets_button_lostcode_over_png_942780103' type='Class' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_embed_css_Assets_button_lostcode_png_1760377215' fullname='xmlTest/private:_embed_css_Assets_button_lostcode_png_1760377215' type='Class' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_embed_css_Assets_button_math_down_png_1424583035' fullname='xmlTest/private:_embed_css_Assets_button_math_down_png_1424583035' type='Class' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_embed_css_Assets_button_math_over_png_1660122469' fullname='xmlTest/private:_embed_css_Assets_button_math_over_png_1660122469' type='Class' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_embed_css_Assets_button_math_png_113122967' fullname='xmlTest/private:_embed_css_Assets_button_math_png_113122967' type='Class' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_embed_css_Assets_button_mini_sound_down_png_268357913' fullname='xmlTest/private:_embed_css_Assets_button_mini_sound_down_png_268357913' type='Class' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_embed_css_Assets_button_mini_sound_over_png_1274769625' fullname='xmlTest/private:_embed_css_Assets_button_mini_sound_over_png_1274769625' type='Class' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_embed_css_Assets_button_mini_sound_png_1854842081' fullname='xmlTest/private:_embed_css_Assets_button_mini_sound_png_1854842081' type='Class' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_embed_css_Assets_button_reading_down_png_1061287749' fullname='xmlTest/private:_embed_css_Assets_button_reading_down_png_1061287749' type='Class' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_embed_css_Assets_button_reading_over_png_213530313' fullname='xmlTest/private:_embed_css_Assets_button_reading_over_png_213530313' type='Class' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_embed_css_Assets_button_reading_png_1640255449' fullname='xmlTest/private:_embed_css_Assets_button_reading_png_1640255449' type='Class' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_embed_css_Assets_button_small_sound_down_png_790070683' fullname='xmlTest/private:_embed_css_Assets_button_small_sound_down_png_790070683' type='Class' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_embed_css_Assets_button_small_sound_over_png_27732521' fullname='xmlTest/private:_embed_css_Assets_button_small_sound_over_png_27732521' type='Class' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_embed_css_Assets_button_small_sound_png_434910523' fullname='xmlTest/private:_embed_css_Assets_button_small_sound_png_434910523' type='Class' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_embed_css_Assets_button_sound_down_png_1706525913' fullname='xmlTest/private:_embed_css_Assets_button_sound_down_png_1706525913' type='Class' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_embed_css_Assets_button_sound_over_png_1297997637' fullname='xmlTest/private:_embed_css_Assets_button_sound_over_png_1297997637' type='Class' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_embed_css_Assets_button_sound_png_1299655989' fullname='xmlTest/private:_embed_css_Assets_button_sound_png_1299655989' type='Class' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_embed_css_Assets_button_start_down_png_1054288025' fullname='xmlTest/private:_embed_css_Assets_button_start_down_png_1054288025' type='Class' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_embed_css_Assets_button_start_over_png_1546812219' fullname='xmlTest/private:_embed_css_Assets_button_start_over_png_1546812219' type='Class' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_embed_css_Assets_button_start_png_1157933767' fullname='xmlTest/private:_embed_css_Assets_button_start_png_1157933767' type='Class' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_embed_css_Assets_button_writing_down_png_1672923195' fullname='xmlTest/private:_embed_css_Assets_button_writing_down_png_1672923195' type='Class' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_embed_css_Assets_button_writing_over_png_879556105' fullname='xmlTest/private:_embed_css_Assets_button_writing_over_png_879556105' type='Class' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_embed_css_Assets_button_writing_png_1080707609' fullname='xmlTest/private:_embed_css_Assets_button_writing_png_1080707609' type='Class' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_embed_css_Assets_outerFrame_png_646222813' fullname='xmlTest/private:_embed_css_Assets_outerFrame_png_646222813' type='Class' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_embed_css_Assets_readButtonDown_png_1897024349' fullname='xmlTest/private:_embed_css_Assets_readButtonDown_png_1897024349' type='Class' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_embed_css_Assets_readButtonOver_png_598178907' fullname='xmlTest/private:_embed_css_Assets_readButtonOver_png_598178907' type='Class' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_embed_css_Assets_readButtonUp_png_855792167' fullname='xmlTest/private:_embed_css_Assets_readButtonUp_png_855792167' type='Class' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_xmlTest_StylesInit_done' fullname='xmlTest/mx_internal:_xmlTest_StylesInit_done' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='aManager' fullname='xmlTest/private:aManager' type='MainApplication:MainAppManager' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='dManager' fullname='xmlTest/dManager' type='MainApplication:DisplayManager' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='xmlTest/dManager' name='Bindable' >
	</Bindable>
</metadata>
</field>
<classRec name='_7c6d34871b0ac0ad4b3a036660ab5f8c11c45c9128172b6580088b7d06e67c87_mx_core_FlexModuleFactory' fullname='_7c6d34871b0ac0ad4b3a036660ab5f8c11c45c9128172b6580088b7d06e67c87_mx_core_FlexModuleFactory' sourcefile='_7c6d34871b0ac0ad4b3a036660ab5f8c11c45c9128172b6580088b7d06e67c87_mx_core_FlexModuleFactory.as' namespace='' access='public' baseclass='flash.display:Sprite' interfaces='mx.core:IFlexModuleFactory;flashx.textLayout.compose:ISWFContext' isFinal='false' isDynamic='false' >
</classRec>
<method name='RSLRootCompleteListener' fullname='_7c6d34871b0ac0ad4b3a036660ab5f8c11c45c9128172b6580088b7d06e67c87_mx_core_FlexModuleFactory/private:RSLRootCompleteListener' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='_7c6d34871b0ac0ad4b3a036660ab5f8c11c45c9128172b6580088b7d06e67c87_mx_core_FlexModuleFactory' fullname='_7c6d34871b0ac0ad4b3a036660ab5f8c11c45c9128172b6580088b7d06e67c87_mx_core_FlexModuleFactory/_7c6d34871b0ac0ad4b3a036660ab5f8c11c45c9128172b6580088b7d06e67c87_mx_core_FlexModuleFactory' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='allowDomainInRSL' fullname='_7c6d34871b0ac0ad4b3a036660ab5f8c11c45c9128172b6580088b7d06e67c87_mx_core_FlexModuleFactory/allowDomainInRSL' isStatic='false' isFinal='false' isOverride='false'  param_names='domains' param_types='restParam' param_defaults='undefined' result_type='void'>
</method>
<method name='allowDomain' fullname='_7c6d34871b0ac0ad4b3a036660ab5f8c11c45c9128172b6580088b7d06e67c87_mx_core_FlexModuleFactory/allowDomain' isStatic='false' isFinal='false' isOverride='false'  param_names='domains' param_types='restParam' param_defaults='undefined' result_type='void'>
<description><![CDATA[

      Calls Security.allowDomain() for the SWF associated with this IFlexModuleFactory

      plus all the SWFs assocatiated with RSLs preLoaded by this IFlexModuleFactory.

     
     ]]></description>
</method>
<method name='allowInsecureDomainInRSL' fullname='_7c6d34871b0ac0ad4b3a036660ab5f8c11c45c9128172b6580088b7d06e67c87_mx_core_FlexModuleFactory/allowInsecureDomainInRSL' isStatic='false' isFinal='false' isOverride='false'  param_names='domains' param_types='restParam' param_defaults='undefined' result_type='void'>
</method>
<method name='allowInsecureDomain' fullname='_7c6d34871b0ac0ad4b3a036660ab5f8c11c45c9128172b6580088b7d06e67c87_mx_core_FlexModuleFactory/allowInsecureDomain' isStatic='false' isFinal='false' isOverride='false'  param_names='domains' param_types='restParam' param_defaults='undefined' result_type='void'>
<description><![CDATA[

      Calls Security.allowInsecureDomain() for the SWF associated with this IFlexModuleFactory

      plus all the SWFs assocatiated with RSLs preLoaded by this IFlexModuleFactory.

     
     ]]></description>
</method>
<method name='callInContext' fullname='_7c6d34871b0ac0ad4b3a036660ab5f8c11c45c9128172b6580088b7d06e67c87_mx_core_FlexModuleFactory/callInContext' isStatic='false' isFinal='false' isOverride='false'  param_names='fn;thisArg;argArray;returns' param_types='Function;Object;Array;Boolean' param_defaults='undefined;undefined;undefined;true' result_type='*'>
</method>
<method name='create' fullname='_7c6d34871b0ac0ad4b3a036660ab5f8c11c45c9128172b6580088b7d06e67c87_mx_core_FlexModuleFactory/create' isStatic='false' isFinal='false' isOverride='false'  param_names='params' param_types='restParam' param_defaults='undefined' result_type='Object'>
</method>
<method name='getImplementation' fullname='_7c6d34871b0ac0ad4b3a036660ab5f8c11c45c9128172b6580088b7d06e67c87_mx_core_FlexModuleFactory/getImplementation' isStatic='false' isFinal='false' isOverride='false'  param_names='interfaceName' param_types='String' param_defaults='undefined' result_type='Object'>
<description><![CDATA[

      ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='info' fullname='_7c6d34871b0ac0ad4b3a036660ab5f8c11c45c9128172b6580088b7d06e67c87_mx_core_FlexModuleFactory/info' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
</method>
<method name='registerImplementation' fullname='_7c6d34871b0ac0ad4b3a036660ab5f8c11c45c9128172b6580088b7d06e67c87_mx_core_FlexModuleFactory/registerImplementation' isStatic='false' isFinal='false' isOverride='false'  param_names='interfaceName;impl' param_types='String;Object' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

      ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='preloadedRSLs' fullname='_7c6d34871b0ac0ad4b3a036660ab5f8c11c45c9128172b6580088b7d06e67c87_mx_core_FlexModuleFactory/preloadedRSLs/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.utils:Dictionary'>
<description><![CDATA[

      The RSLs loaded by this system manager before the application

      starts. RSLs loaded by the application are not included in this list.

     ]]></description>
</method>
<field name='_preloadedRSLs' fullname='_7c6d34871b0ac0ad4b3a036660ab5f8c11c45c9128172b6580088b7d06e67c87_mx_core_FlexModuleFactory/private:_preloadedRSLs' type='flash.utils:Dictionary' isStatic='false' isConst='false' >
<description><![CDATA[

      ]]></description>
<private><![CDATA[]]></private>
</field>
<packageRec name='DisplayApplication.CustomSkins.null' fullname='DisplayApplication.CustomSkins.null'>
<description><![CDATA[
  Generated by mxmlc 4.0
  Package: DisplayApplication.CustomSkins
 Class:   CustomLoginPanelSkin
 Source:  C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\CustomSkins\CustomLoginPanelSkin.mxml
 ]]></description>
</packageRec>
<classRec name='CustomLoginPanelSkin' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin' sourcefile='C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\CustomSkins\CustomLoginPanelSkin.mxml' namespace='DisplayApplication.CustomSkins' access='public' baseclass='spark.skins:SparkSkin' interfaces='mx.binding:IBindingClient;mx.core:IStateClient2' isFinal='false' isDynamic='false' >
<description><![CDATA[The default skin class for a Spark Panel container.  

    ]]></description>
<langversion><![CDATA[ 3.0
    ]]></langversion>
<playerversion><![CDATA[ Flash 10
    ]]></playerversion>
<playerversion><![CDATA[ AIR 1.5
    ]]></playerversion>
<productversion><![CDATA[ Flex 4]]></productversion>
<see><![CDATA[ spark.components.Panel

    ]]></see>
<metadata>
	<DefaultProperty owner='DisplayApplication.CustomSkins:CustomLoginPanelSkin' name='mxmlContent' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='CustomLoginPanelSkin' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/CustomLoginPanelSkin' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[]]></description>
</method>
<method name='_CustomLoginPanelSkin_GradientEntry1_c' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:_CustomLoginPanelSkin_GradientEntry1_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:GradientEntry'>
</method>
<method name='_CustomLoginPanelSkin_GradientEntry2_c' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:_CustomLoginPanelSkin_GradientEntry2_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:GradientEntry'>
</method>
<method name='_CustomLoginPanelSkin_GradientEntry3_c' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:_CustomLoginPanelSkin_GradientEntry3_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:GradientEntry'>
</method>
<method name='_CustomLoginPanelSkin_GradientEntry4_c' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:_CustomLoginPanelSkin_GradientEntry4_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:GradientEntry'>
</method>
<method name='_CustomLoginPanelSkin_GradientEntry5_c' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:_CustomLoginPanelSkin_GradientEntry5_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:GradientEntry'>
</method>
<method name='_CustomLoginPanelSkin_GradientEntry6_c' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:_CustomLoginPanelSkin_GradientEntry6_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:GradientEntry'>
</method>
<method name='_CustomLoginPanelSkin_GradientEntry7_c' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:_CustomLoginPanelSkin_GradientEntry7_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:GradientEntry'>
</method>
<method name='_CustomLoginPanelSkin_GradientEntry8_c' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:_CustomLoginPanelSkin_GradientEntry8_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:GradientEntry'>
</method>
<method name='_CustomLoginPanelSkin_Group1_i' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:_CustomLoginPanelSkin_Group1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Group'>
</method>
<method name='_CustomLoginPanelSkin_Group2_i' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:_CustomLoginPanelSkin_Group2_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Group'>
</method>
<method name='_CustomLoginPanelSkin_Group3_i' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:_CustomLoginPanelSkin_Group3_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Group'>
</method>
<method name='_CustomLoginPanelSkin_Group4_i' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:_CustomLoginPanelSkin_Group4_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Group'>
</method>
<method name='_CustomLoginPanelSkin_Group5_i' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:_CustomLoginPanelSkin_Group5_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Group'>
</method>
<method name='_CustomLoginPanelSkin_Group6_i' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:_CustomLoginPanelSkin_Group6_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Group'>
</method>
<method name='_CustomLoginPanelSkin_Group7_i' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:_CustomLoginPanelSkin_Group7_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Group'>
</method>
<method name='_CustomLoginPanelSkin_Group8_i' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:_CustomLoginPanelSkin_Group8_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Group'>
</method>
<method name='_CustomLoginPanelSkin_Group9_i' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:_CustomLoginPanelSkin_Group9_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Group'>
</method>
<method name='_CustomLoginPanelSkin_HorizontalLayout1_c' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:_CustomLoginPanelSkin_HorizontalLayout1_c' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.layouts:HorizontalLayout'>
</method>
<method name='_CustomLoginPanelSkin_Label1_i' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:_CustomLoginPanelSkin_Label1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Label'>
</method>
<method name='_CustomLoginPanelSkin_LinearGradient1_c' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:_CustomLoginPanelSkin_LinearGradient1_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:LinearGradient'>
</method>
<method name='_CustomLoginPanelSkin_LinearGradient2_c' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:_CustomLoginPanelSkin_LinearGradient2_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:LinearGradient'>
</method>
<method name='_CustomLoginPanelSkin_LinearGradientStroke1_c' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:_CustomLoginPanelSkin_LinearGradientStroke1_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:LinearGradientStroke'>
</method>
<method name='_CustomLoginPanelSkin_LinearGradientStroke2_c' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:_CustomLoginPanelSkin_LinearGradientStroke2_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:LinearGradientStroke'>
</method>
<method name='_CustomLoginPanelSkin_Rect10_c' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:_CustomLoginPanelSkin_Rect10_c' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.primitives:Rect'>
</method>
<method name='_CustomLoginPanelSkin_Rect1_i' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:_CustomLoginPanelSkin_Rect1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.primitives:Rect'>
</method>
<method name='_CustomLoginPanelSkin_Rect2_i' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:_CustomLoginPanelSkin_Rect2_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.primitives:Rect'>
</method>
<method name='_CustomLoginPanelSkin_Rect3_i' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:_CustomLoginPanelSkin_Rect3_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.primitives:Rect'>
</method>
<method name='_CustomLoginPanelSkin_Rect4_i' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:_CustomLoginPanelSkin_Rect4_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.primitives:Rect'>
</method>
<method name='_CustomLoginPanelSkin_Rect5_i' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:_CustomLoginPanelSkin_Rect5_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.primitives:Rect'>
</method>
<method name='_CustomLoginPanelSkin_Rect6_i' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:_CustomLoginPanelSkin_Rect6_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.primitives:Rect'>
</method>
<method name='_CustomLoginPanelSkin_Rect7_i' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:_CustomLoginPanelSkin_Rect7_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.primitives:Rect'>
</method>
<method name='_CustomLoginPanelSkin_Rect8_c' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:_CustomLoginPanelSkin_Rect8_c' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.primitives:Rect'>
</method>
<method name='_CustomLoginPanelSkin_Rect9_c' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:_CustomLoginPanelSkin_Rect9_c' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.primitives:Rect'>
</method>
<method name='_CustomLoginPanelSkin_RectangularDropShadow1_i' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:_CustomLoginPanelSkin_RectangularDropShadow1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.primitives:RectangularDropShadow'>
</method>
<method name='_CustomLoginPanelSkin_SolidColor1_c' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:_CustomLoginPanelSkin_SolidColor1_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:SolidColor'>
</method>
<method name='_CustomLoginPanelSkin_SolidColor2_c' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:_CustomLoginPanelSkin_SolidColor2_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:SolidColor'>
</method>
<method name='_CustomLoginPanelSkin_SolidColor3_i' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:_CustomLoginPanelSkin_SolidColor3_i' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:SolidColor'>
</method>
<method name='_CustomLoginPanelSkin_SolidColor4_c' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:_CustomLoginPanelSkin_SolidColor4_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:SolidColor'>
</method>
<method name='_CustomLoginPanelSkin_SolidColor5_c' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:_CustomLoginPanelSkin_SolidColor5_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:SolidColor'>
</method>
<method name='_CustomLoginPanelSkin_SolidColorStroke1_i' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:_CustomLoginPanelSkin_SolidColorStroke1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:SolidColorStroke'>
</method>
<method name='_CustomLoginPanelSkin_VerticalLayout1_c' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:_CustomLoginPanelSkin_VerticalLayout1_c' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.layouts:VerticalLayout'>
</method>
<method name='_CustomLoginPanelSkin_bindingsSetup' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:_CustomLoginPanelSkin_bindingsSetup' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='initialize' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/initialize' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='moduleFactory' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/moduleFactory/set' isStatic='false' isFinal='false' isOverride='true'  param_names='factory' param_types='mx.core:IFlexModuleFactory' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='watcherSetupUtil' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/watcherSetupUtil/set' isStatic='true' isFinal='false' isOverride='false'  param_names='watcherSetupUtil' param_types='mx.binding:IWatcherSetupUtil2' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='_CustomLoginPanelSkin_Group1' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/_CustomLoginPanelSkin_Group1' type='spark.components:Group' isStatic='false' isConst='false' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomLoginPanelSkin/_CustomLoginPanelSkin_Group1' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='_CustomLoginPanelSkin_Group8' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/_CustomLoginPanelSkin_Group8' type='spark.components:Group' isStatic='false' isConst='false' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='__moduleFactoryInitialized' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:__moduleFactoryInitialized' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_bindingsBeginWithWord' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/mx_internal:_bindingsBeginWithWord' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_bindingsByDestination' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/mx_internal:_bindingsByDestination' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_bindings' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/mx_internal:_bindings' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_watcherSetupUtil' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/private:_watcherSetupUtil' type='mx.binding:IWatcherSetupUtil2' isStatic='true' isConst='false' >
</field>
<field name='_watchers' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/mx_internal:_watchers' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='backgroundFill' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/backgroundFill' type='mx.graphics:SolidColor' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomLoginPanelSkin/backgroundFill' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='background' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/background' type='spark.primitives:Rect' isStatic='false' isConst='false' >
<description><![CDATA[Defines the appearance of the PanelSkin class's background.]]></description>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomLoginPanelSkin/background' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='borderStroke' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/borderStroke' type='mx.graphics:SolidColorStroke' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomLoginPanelSkin/borderStroke' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='border' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/border' type='spark.primitives:Rect' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomLoginPanelSkin/border' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='bottomGroupMask' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/bottomGroupMask' type='spark.components:Group' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomLoginPanelSkin/bottomGroupMask' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='bottomGroup' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/bottomGroup' type='spark.components:Group' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomLoginPanelSkin/bottomGroup' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='bottomMaskRect' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/bottomMaskRect' type='spark.primitives:Rect' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomLoginPanelSkin/bottomMaskRect' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='contentGroup' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/contentGroup' type='spark.components:Group' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<copy><![CDATA[ spark.components.SkinnableContainer#contentGroup]]></copy>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomLoginPanelSkin/contentGroup' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='contents' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/contents' type='spark.components:Group' isStatic='false' isConst='false' >
<description><![CDATA[Contains the vertical stack of titlebar content and controlbar.]]></description>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomLoginPanelSkin/contents' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='controlBarGroup' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/controlBarGroup' type='spark.components:Group' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<copy><![CDATA[ spark.components.Panel#controlBarGroup]]></copy>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomLoginPanelSkin/controlBarGroup' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='dropShadow' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/dropShadow' type='spark.primitives:RectangularDropShadow' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomLoginPanelSkin/dropShadow' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='hostComponent' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/hostComponent' type='spark.components:Panel' isStatic='false' isConst='false' >
<description><![CDATA[ 
         ]]></description>
<copy><![CDATA[spark.skins.spark.ApplicationSkin#hostComponent
         ]]></copy>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomLoginPanelSkin/hostComponent' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='tbDiv' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/tbDiv' type='spark.primitives:Rect' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomLoginPanelSkin/tbDiv' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='tbFill' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/tbFill' type='spark.primitives:Rect' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomLoginPanelSkin/tbFill' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='tbHilite' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/tbHilite' type='spark.primitives:Rect' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomLoginPanelSkin/tbHilite' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='titleDisplay' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/titleDisplay' type='spark.components:Label' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<copy><![CDATA[ spark.components.Panel#titleDisplay]]></copy>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomLoginPanelSkin/titleDisplay' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='topGroupMask' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/topGroupMask' type='spark.components:Group' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomLoginPanelSkin/topGroupMask' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='topGroup' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/topGroup' type='spark.components:Group' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomLoginPanelSkin/topGroup' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='topMaskRect' fullname='DisplayApplication.CustomSkins:CustomLoginPanelSkin/topMaskRect' type='spark.primitives:Rect' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomLoginPanelSkin/topMaskRect' name='Bindable' >
	</Bindable>
</metadata>
</field>
<packageRec name='DisplayApplication.CustomSkins.null' fullname='DisplayApplication.CustomSkins.null'>
<description><![CDATA[
  Generated by mxmlc 4.0
  Package: DisplayApplication.CustomSkins
 Class:   CustomRadioSkin
 Source:  C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\CustomSkins\CustomRadioSkin.mxml
 ]]></description>
</packageRec>
<classRec name='CustomRadioSkin' fullname='DisplayApplication.CustomSkins:CustomRadioSkin' sourcefile='C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\CustomSkins\CustomRadioSkin.mxml' namespace='DisplayApplication.CustomSkins' access='public' baseclass='spark.skins:SparkSkin' interfaces='mx.core:IStateClient2' isFinal='false' isDynamic='false' >
<description><![CDATA[The default skin class for a Spark RadioButton component.  

       ]]></description>
<langversion><![CDATA[ 3.0
      ]]></langversion>
<playerversion><![CDATA[ Flash 10
      ]]></playerversion>
<playerversion><![CDATA[ AIR 1.5
      ]]></playerversion>
<productversion><![CDATA[ Flex 4]]></productversion>
<see><![CDATA[ spark.components.RadioButton
       ]]></see>
<see><![CDATA[ spark.components.RadioButtonGroup
        
      ]]></see>
<metadata>
	<DefaultProperty owner='DisplayApplication.CustomSkins:CustomRadioSkin' name='mxmlContent' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='CustomRadioSkin' fullname='DisplayApplication.CustomSkins:CustomRadioSkin/CustomRadioSkin' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[]]></description>
</method>
<method name='_CustomRadioSkin_Ellipse1_c' fullname='DisplayApplication.CustomSkins:CustomRadioSkin/private:_CustomRadioSkin_Ellipse1_c' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.primitives:Ellipse'>
</method>
<method name='_CustomRadioSkin_Ellipse2_c' fullname='DisplayApplication.CustomSkins:CustomRadioSkin/private:_CustomRadioSkin_Ellipse2_c' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.primitives:Ellipse'>
</method>
<method name='_CustomRadioSkin_Ellipse3_i' fullname='DisplayApplication.CustomSkins:CustomRadioSkin/private:_CustomRadioSkin_Ellipse3_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.primitives:Ellipse'>
</method>
<method name='_CustomRadioSkin_Ellipse4_i' fullname='DisplayApplication.CustomSkins:CustomRadioSkin/private:_CustomRadioSkin_Ellipse4_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.primitives:Ellipse'>
</method>
<method name='_CustomRadioSkin_GradientEntry1_i' fullname='DisplayApplication.CustomSkins:CustomRadioSkin/private:_CustomRadioSkin_GradientEntry1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:GradientEntry'>
</method>
<method name='_CustomRadioSkin_GradientEntry2_i' fullname='DisplayApplication.CustomSkins:CustomRadioSkin/private:_CustomRadioSkin_GradientEntry2_i' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:GradientEntry'>
</method>
<method name='_CustomRadioSkin_GradientEntry3_i' fullname='DisplayApplication.CustomSkins:CustomRadioSkin/private:_CustomRadioSkin_GradientEntry3_i' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:GradientEntry'>
</method>
<method name='_CustomRadioSkin_GradientEntry4_i' fullname='DisplayApplication.CustomSkins:CustomRadioSkin/private:_CustomRadioSkin_GradientEntry4_i' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:GradientEntry'>
</method>
<method name='_CustomRadioSkin_GradientEntry5_c' fullname='DisplayApplication.CustomSkins:CustomRadioSkin/private:_CustomRadioSkin_GradientEntry5_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:GradientEntry'>
</method>
<method name='_CustomRadioSkin_GradientEntry6_c' fullname='DisplayApplication.CustomSkins:CustomRadioSkin/private:_CustomRadioSkin_GradientEntry6_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:GradientEntry'>
</method>
<method name='_CustomRadioSkin_Group1_i' fullname='DisplayApplication.CustomSkins:CustomRadioSkin/private:_CustomRadioSkin_Group1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Group'>
</method>
<method name='_CustomRadioSkin_LinearGradient1_c' fullname='DisplayApplication.CustomSkins:CustomRadioSkin/private:_CustomRadioSkin_LinearGradient1_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:LinearGradient'>
</method>
<method name='_CustomRadioSkin_LinearGradientStroke1_c' fullname='DisplayApplication.CustomSkins:CustomRadioSkin/private:_CustomRadioSkin_LinearGradientStroke1_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:LinearGradientStroke'>
</method>
<method name='_CustomRadioSkin_LinearGradientStroke2_c' fullname='DisplayApplication.CustomSkins:CustomRadioSkin/private:_CustomRadioSkin_LinearGradientStroke2_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:LinearGradientStroke'>
</method>
<method name='_CustomRadioSkin_SolidColor1_i' fullname='DisplayApplication.CustomSkins:CustomRadioSkin/private:_CustomRadioSkin_SolidColor1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:SolidColor'>
</method>
<method name='initialize' fullname='DisplayApplication.CustomSkins:CustomRadioSkin/initialize' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='focusSkinExclusions' fullname='DisplayApplication.CustomSkins:CustomRadioSkin/focusSkinExclusions/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Array'>
<description><![CDATA[
          ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='moduleFactory' fullname='DisplayApplication.CustomSkins:CustomRadioSkin/moduleFactory/set' isStatic='false' isFinal='false' isOverride='true'  param_names='factory' param_types='mx.core:IFlexModuleFactory' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='_CustomRadioSkin_Ellipse3' fullname='DisplayApplication.CustomSkins:CustomRadioSkin/_CustomRadioSkin_Ellipse3' type='spark.primitives:Ellipse' isStatic='false' isConst='false' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_CustomRadioSkin_GradientEntry1' fullname='DisplayApplication.CustomSkins:CustomRadioSkin/_CustomRadioSkin_GradientEntry1' type='mx.graphics:GradientEntry' isStatic='false' isConst='false' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomRadioSkin/_CustomRadioSkin_GradientEntry1' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='_CustomRadioSkin_GradientEntry2' fullname='DisplayApplication.CustomSkins:CustomRadioSkin/_CustomRadioSkin_GradientEntry2' type='mx.graphics:GradientEntry' isStatic='false' isConst='false' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomRadioSkin/_CustomRadioSkin_GradientEntry2' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='_CustomRadioSkin_GradientEntry3' fullname='DisplayApplication.CustomSkins:CustomRadioSkin/_CustomRadioSkin_GradientEntry3' type='mx.graphics:GradientEntry' isStatic='false' isConst='false' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomRadioSkin/_CustomRadioSkin_GradientEntry3' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='_CustomRadioSkin_GradientEntry4' fullname='DisplayApplication.CustomSkins:CustomRadioSkin/_CustomRadioSkin_GradientEntry4' type='mx.graphics:GradientEntry' isStatic='false' isConst='false' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomRadioSkin/_CustomRadioSkin_GradientEntry4' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='_CustomRadioSkin_Group1' fullname='DisplayApplication.CustomSkins:CustomRadioSkin/_CustomRadioSkin_Group1' type='spark.components:Group' isStatic='false' isConst='false' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomRadioSkin/_CustomRadioSkin_Group1' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='__moduleFactoryInitialized' fullname='DisplayApplication.CustomSkins:CustomRadioSkin/private:__moduleFactoryInitialized' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='dotFill' fullname='DisplayApplication.CustomSkins:CustomRadioSkin/dotFill' type='mx.graphics:SolidColor' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomRadioSkin/dotFill' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='dot' fullname='DisplayApplication.CustomSkins:CustomRadioSkin/dot' type='spark.primitives:Ellipse' isStatic='false' isConst='false' >
<description><![CDATA[Defines the appearance of the RadioButton's dot. To customize the appearance of the dot, create a custom RadioButtonSkin class.]]></description>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomRadioSkin/dot' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='focusExclusions' fullname='DisplayApplication.CustomSkins:CustomRadioSkin/private:focusExclusions' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ 
         ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='hostComponent' fullname='DisplayApplication.CustomSkins:CustomRadioSkin/hostComponent' type='spark.components:RadioButton' isStatic='false' isConst='false' >
<description><![CDATA[ 
         ]]></description>
<copy><![CDATA[spark.skins.spark.ApplicationSkin#hostComponent
         ]]></copy>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomRadioSkin/hostComponent' name='Bindable' >
	</Bindable>
</metadata>
</field>
<packageRec name='DisplayApplication.CustomSkins.null' fullname='DisplayApplication.CustomSkins.null'>
<description><![CDATA[
  Generated by mxmlc 4.0
  Package: DisplayApplication.CustomSkins
 Class:   CustomVideoPlayerSkin
 Source:  C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\CustomSkins\CustomVideoPlayerSkin.mxml
 ]]></description>
</packageRec>
<classRec name='CustomVideoPlayerSkin' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin' sourcefile='C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\CustomSkins\CustomVideoPlayerSkin.mxml' namespace='DisplayApplication.CustomSkins' access='public' baseclass='spark.skins:SparkSkin' interfaces='mx.binding:IBindingClient;mx.core:IStateClient2' isFinal='false' isDynamic='false' >
<description><![CDATA[The default skin class for the Spark VideoPlayer component.  

     ]]></description>
<langversion><![CDATA[ 3.0
      ]]></langversion>
<playerversion><![CDATA[ Flash 10
      ]]></playerversion>
<playerversion><![CDATA[ AIR 1.5
      ]]></playerversion>
<productversion><![CDATA[ Flex 4]]></productversion>
<see><![CDATA[ spark.components.VideoPlayer
        
      ]]></see>
<metadata>
	<DefaultProperty owner='DisplayApplication.CustomSkins:CustomVideoPlayerSkin' name='mxmlContent' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='CustomVideoPlayerSkin' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/CustomVideoPlayerSkin' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[]]></description>
</method>
<method name='_CustomVideoPlayerSkin_GradientEntry1_i' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/private:_CustomVideoPlayerSkin_GradientEntry1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:GradientEntry'>
</method>
<method name='_CustomVideoPlayerSkin_GradientEntry2_i' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/private:_CustomVideoPlayerSkin_GradientEntry2_i' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:GradientEntry'>
</method>
<method name='_CustomVideoPlayerSkin_GradientEntry3_i' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/private:_CustomVideoPlayerSkin_GradientEntry3_i' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:GradientEntry'>
</method>
<method name='_CustomVideoPlayerSkin_GradientEntry4_i' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/private:_CustomVideoPlayerSkin_GradientEntry4_i' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:GradientEntry'>
</method>
<method name='_CustomVideoPlayerSkin_Group1_i' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/private:_CustomVideoPlayerSkin_Group1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Group'>
</method>
<method name='_CustomVideoPlayerSkin_Group2_i' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/private:_CustomVideoPlayerSkin_Group2_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Group'>
</method>
<method name='_CustomVideoPlayerSkin_Group3_i' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/private:_CustomVideoPlayerSkin_Group3_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Group'>
</method>
<method name='_CustomVideoPlayerSkin_Group4_i' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/private:_CustomVideoPlayerSkin_Group4_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Group'>
</method>
<method name='_CustomVideoPlayerSkin_Group5_i' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/private:_CustomVideoPlayerSkin_Group5_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Group'>
</method>
<method name='_CustomVideoPlayerSkin_Group6_c' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/private:_CustomVideoPlayerSkin_Group6_c' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Group'>
</method>
<method name='_CustomVideoPlayerSkin_HorizontalLayout1_c' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/private:_CustomVideoPlayerSkin_HorizontalLayout1_c' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.layouts:HorizontalLayout'>
</method>
<method name='_CustomVideoPlayerSkin_Label1_i' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/private:_CustomVideoPlayerSkin_Label1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Label'>
</method>
<method name='_CustomVideoPlayerSkin_Label2_i' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/private:_CustomVideoPlayerSkin_Label2_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Label'>
</method>
<method name='_CustomVideoPlayerSkin_Label3_i' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/private:_CustomVideoPlayerSkin_Label3_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Label'>
</method>
<method name='_CustomVideoPlayerSkin_LinearGradient1_c' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/private:_CustomVideoPlayerSkin_LinearGradient1_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:LinearGradient'>
</method>
<method name='_CustomVideoPlayerSkin_LinearGradientStroke1_c' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/private:_CustomVideoPlayerSkin_LinearGradientStroke1_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:LinearGradientStroke'>
</method>
<method name='_CustomVideoPlayerSkin_Rect1_i' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/private:_CustomVideoPlayerSkin_Rect1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.primitives:Rect'>
</method>
<method name='_CustomVideoPlayerSkin_Rect2_i' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/private:_CustomVideoPlayerSkin_Rect2_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.primitives:Rect'>
</method>
<method name='_CustomVideoPlayerSkin_Rect3_i' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/private:_CustomVideoPlayerSkin_Rect3_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.primitives:Rect'>
</method>
<method name='_CustomVideoPlayerSkin_Rect4_c' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/private:_CustomVideoPlayerSkin_Rect4_c' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.primitives:Rect'>
</method>
<method name='_CustomVideoPlayerSkin_Rect5_c' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/private:_CustomVideoPlayerSkin_Rect5_c' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.primitives:Rect'>
</method>
<method name='_CustomVideoPlayerSkin_Rect6_c' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/private:_CustomVideoPlayerSkin_Rect6_c' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.primitives:Rect'>
</method>
<method name='_CustomVideoPlayerSkin_Rect7_c' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/private:_CustomVideoPlayerSkin_Rect7_c' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.primitives:Rect'>
</method>
<method name='_CustomVideoPlayerSkin_Rect8_c' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/private:_CustomVideoPlayerSkin_Rect8_c' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.primitives:Rect'>
</method>
<method name='_CustomVideoPlayerSkin_Rect9_i' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/private:_CustomVideoPlayerSkin_Rect9_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.primitives:Rect'>
</method>
<method name='_CustomVideoPlayerSkin_RectangularDropShadow1_i' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/private:_CustomVideoPlayerSkin_RectangularDropShadow1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.primitives:RectangularDropShadow'>
</method>
<method name='_CustomVideoPlayerSkin_ScrubBar1_i' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/private:_CustomVideoPlayerSkin_ScrubBar1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components.mediaClasses:ScrubBar'>
</method>
<method name='_CustomVideoPlayerSkin_SolidColor1_c' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/private:_CustomVideoPlayerSkin_SolidColor1_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:SolidColor'>
</method>
<method name='_CustomVideoPlayerSkin_SolidColor2_c' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/private:_CustomVideoPlayerSkin_SolidColor2_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:SolidColor'>
</method>
<method name='_CustomVideoPlayerSkin_SolidColorStroke1_i' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/private:_CustomVideoPlayerSkin_SolidColorStroke1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:SolidColorStroke'>
</method>
<method name='_CustomVideoPlayerSkin_SolidColorStroke2_c' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/private:_CustomVideoPlayerSkin_SolidColorStroke2_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:SolidColorStroke'>
</method>
<method name='_CustomVideoPlayerSkin_ToggleButton1_i' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/private:_CustomVideoPlayerSkin_ToggleButton1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:ToggleButton'>
</method>
<method name='_CustomVideoPlayerSkin_VideoDisplay1_i' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/private:_CustomVideoPlayerSkin_VideoDisplay1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:VideoDisplay'>
</method>
<method name='_CustomVideoPlayerSkin_VolumeBar1_i' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/private:_CustomVideoPlayerSkin_VolumeBar1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components.mediaClasses:VolumeBar'>
</method>
<method name='_CustomVideoPlayerSkin_bindingsSetup' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/private:_CustomVideoPlayerSkin_bindingsSetup' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='__playPauseButton_focusIn' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/__playPauseButton_focusIn' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:FocusEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='__playPauseButton_focusOut' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/__playPauseButton_focusOut' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:FocusEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='__volumeBar_focusIn' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/__volumeBar_focusIn' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:FocusEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='__volumeBar_focusOut' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/__volumeBar_focusOut' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:FocusEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='initialize' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/initialize' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='moduleFactory' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/moduleFactory/set' isStatic='false' isFinal='false' isOverride='true'  param_names='factory' param_types='mx.core:IFlexModuleFactory' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='watcherSetupUtil' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/watcherSetupUtil/set' isStatic='true' isFinal='false' isOverride='false'  param_names='watcherSetupUtil' param_types='mx.binding:IWatcherSetupUtil2' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='_CustomVideoPlayerSkin_GradientEntry1' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/_CustomVideoPlayerSkin_GradientEntry1' type='mx.graphics:GradientEntry' isStatic='false' isConst='false' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/_CustomVideoPlayerSkin_GradientEntry1' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='_CustomVideoPlayerSkin_GradientEntry2' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/_CustomVideoPlayerSkin_GradientEntry2' type='mx.graphics:GradientEntry' isStatic='false' isConst='false' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/_CustomVideoPlayerSkin_GradientEntry2' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='_CustomVideoPlayerSkin_GradientEntry3' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/_CustomVideoPlayerSkin_GradientEntry3' type='mx.graphics:GradientEntry' isStatic='false' isConst='false' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/_CustomVideoPlayerSkin_GradientEntry3' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='_CustomVideoPlayerSkin_GradientEntry4' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/_CustomVideoPlayerSkin_GradientEntry4' type='mx.graphics:GradientEntry' isStatic='false' isConst='false' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/_CustomVideoPlayerSkin_GradientEntry4' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='_CustomVideoPlayerSkin_Group2' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/_CustomVideoPlayerSkin_Group2' type='spark.components:Group' isStatic='false' isConst='false' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/_CustomVideoPlayerSkin_Group2' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='_CustomVideoPlayerSkin_Group3' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/_CustomVideoPlayerSkin_Group3' type='spark.components:Group' isStatic='false' isConst='false' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_CustomVideoPlayerSkin_Group5' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/_CustomVideoPlayerSkin_Group5' type='spark.components:Group' isStatic='false' isConst='false' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/_CustomVideoPlayerSkin_Group5' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='_CustomVideoPlayerSkin_Rect1' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/_CustomVideoPlayerSkin_Rect1' type='spark.primitives:Rect' isStatic='false' isConst='false' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/_CustomVideoPlayerSkin_Rect1' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='_CustomVideoPlayerSkin_Rect2' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/_CustomVideoPlayerSkin_Rect2' type='spark.primitives:Rect' isStatic='false' isConst='false' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_CustomVideoPlayerSkin_Rect3' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/_CustomVideoPlayerSkin_Rect3' type='spark.primitives:Rect' isStatic='false' isConst='false' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_CustomVideoPlayerSkin_Rect9' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/_CustomVideoPlayerSkin_Rect9' type='spark.primitives:Rect' isStatic='false' isConst='false' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_CustomVideoPlayerSkin_SolidColorStroke1' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/_CustomVideoPlayerSkin_SolidColorStroke1' type='mx.graphics:SolidColorStroke' isStatic='false' isConst='false' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/_CustomVideoPlayerSkin_SolidColorStroke1' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='__moduleFactoryInitialized' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/private:__moduleFactoryInitialized' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_bindingsBeginWithWord' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/mx_internal:_bindingsBeginWithWord' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_bindingsByDestination' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/mx_internal:_bindingsByDestination' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_bindings' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/mx_internal:_bindings' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_watcherSetupUtil' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/private:_watcherSetupUtil' type='mx.binding:IWatcherSetupUtil2' isStatic='true' isConst='false' >
</field>
<field name='_watchers' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/mx_internal:_watchers' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='clippedGroup' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/clippedGroup' type='spark.components:Group' isStatic='false' isConst='false' >
<description><![CDATA[Video and player controls are clipped if they exceed the size of the 
          component, but the drop shadow above is not clipped and sizes to the component.
          We also set verticalScrollPosition so that when we do clip, rather than clipping  
          off the bottom first, we clip off the top fist.  This is so the player controls 
          are still visible when we start clipping.]]></description>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/clippedGroup' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='currentTimeDisplay' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/currentTimeDisplay' type='spark.components:Label' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<copy><![CDATA[ spark.components.VideoPlayer#currentTimeDisplay]]></copy>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/currentTimeDisplay' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='dropShadow' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/dropShadow' type='spark.primitives:RectangularDropShadow' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/dropShadow' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='durationDisplay' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/durationDisplay' type='spark.components:Label' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<copy><![CDATA[ spark.components.VideoPlayer#durationDisplay]]></copy>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/durationDisplay' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='hostComponent' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/hostComponent' type='spark.components:VideoPlayer' isStatic='false' isConst='false' >
<description><![CDATA[ 
         ]]></description>
<copy><![CDATA[spark.skins.spark.ApplicationSkin#hostComponent
         ]]></copy>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/hostComponent' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='playPauseButton' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/playPauseButton' type='spark.components:ToggleButton' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<copy><![CDATA[ spark.components.VideoPlayer#playPauseButton]]></copy>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/playPauseButton' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='playerControls' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/playerControls' type='spark.components:Group' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<copy><![CDATA[ spark.components.VideoPlayer#playerControls]]></copy>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/playerControls' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='scrubBar' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/scrubBar' type='spark.components.mediaClasses:ScrubBar' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<copy><![CDATA[ spark.components.VideoPlayer#scrubBar]]></copy>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/scrubBar' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='timeDivider' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/timeDivider' type='spark.components:Label' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/timeDivider' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='videoDisplay' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/videoDisplay' type='spark.components:VideoDisplay' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<copy><![CDATA[ spark.components.VideoPlayer#videoDisplay]]></copy>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/videoDisplay' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='volumeBar' fullname='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/volumeBar' type='spark.components.mediaClasses:VolumeBar' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<copy><![CDATA[ spark.components.VideoPlayer#volumeBar]]></copy>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomVideoPlayerSkin/volumeBar' name='Bindable' >
	</Bindable>
</metadata>
</field>
<packageRec name='DisplayApplication.CustomSkins.null' fullname='DisplayApplication.CustomSkins.null'>
<description><![CDATA[
  Generated by mxmlc 4.0
  Package: DisplayApplication.CustomSkins
 Class:   CustomSoundButtonSkin
 Source:  C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\CustomSkins\CustomSoundButtonSkin.mxml
 ]]></description>
</packageRec>
<classRec name='CustomSoundButtonSkin' fullname='DisplayApplication.CustomSkins:CustomSoundButtonSkin' sourcefile='C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\CustomSkins\CustomSoundButtonSkin.mxml' namespace='DisplayApplication.CustomSkins' access='public' baseclass='spark.skins:SparkSkin' interfaces='mx.binding:IBindingClient;mx.core:IStateClient2' isFinal='false' isDynamic='false' >
<description><![CDATA[The default skin class for the Spark Button component.  

]]></description>
<langversion><![CDATA[ 3.0
]]></langversion>
<playerversion><![CDATA[ Flash 10
]]></playerversion>
<playerversion><![CDATA[ AIR 1.5
]]></playerversion>
<productversion><![CDATA[ Flex 4]]></productversion>
<see><![CDATA[ spark.components.Button

]]></see>
<metadata>
	<DefaultProperty owner='DisplayApplication.CustomSkins:CustomSoundButtonSkin' name='mxmlContent' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='CustomSoundButtonSkin' fullname='DisplayApplication.CustomSkins:CustomSoundButtonSkin/CustomSoundButtonSkin' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[]]></description>
</method>
<method name='_CustomSoundButtonSkin_Image1_i' fullname='DisplayApplication.CustomSkins:CustomSoundButtonSkin/private:_CustomSoundButtonSkin_Image1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.controls:Image'>
</method>
<method name='_CustomSoundButtonSkin_bindingsSetup' fullname='DisplayApplication.CustomSkins:CustomSoundButtonSkin/private:_CustomSoundButtonSkin_bindingsSetup' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='initialize' fullname='DisplayApplication.CustomSkins:CustomSoundButtonSkin/initialize' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='moduleFactory' fullname='DisplayApplication.CustomSkins:CustomSoundButtonSkin/moduleFactory/set' isStatic='false' isFinal='false' isOverride='true'  param_names='factory' param_types='mx.core:IFlexModuleFactory' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='watcherSetupUtil' fullname='DisplayApplication.CustomSkins:CustomSoundButtonSkin/watcherSetupUtil/set' isStatic='true' isFinal='false' isOverride='false'  param_names='watcherSetupUtil' param_types='mx.binding:IWatcherSetupUtil2' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='_CustomSoundButtonSkin_Image1' fullname='DisplayApplication.CustomSkins:CustomSoundButtonSkin/_CustomSoundButtonSkin_Image1' type='mx.controls:Image' isStatic='false' isConst='false' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='__moduleFactoryInitialized' fullname='DisplayApplication.CustomSkins:CustomSoundButtonSkin/private:__moduleFactoryInitialized' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_bindingsBeginWithWord' fullname='DisplayApplication.CustomSkins:CustomSoundButtonSkin/mx_internal:_bindingsBeginWithWord' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_bindingsByDestination' fullname='DisplayApplication.CustomSkins:CustomSoundButtonSkin/mx_internal:_bindingsByDestination' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_bindings' fullname='DisplayApplication.CustomSkins:CustomSoundButtonSkin/mx_internal:_bindings' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_watcherSetupUtil' fullname='DisplayApplication.CustomSkins:CustomSoundButtonSkin/private:_watcherSetupUtil' type='mx.binding:IWatcherSetupUtil2' isStatic='true' isConst='false' >
</field>
<field name='_watchers' fullname='DisplayApplication.CustomSkins:CustomSoundButtonSkin/mx_internal:_watchers' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='hostComponent' fullname='DisplayApplication.CustomSkins:CustomSoundButtonSkin/hostComponent' type='spark.components:Button' isStatic='false' isConst='false' >
<description><![CDATA[ 
		]]></description>
<copy><![CDATA[spark.skins.spark.ApplicationSkin#hostComponent
		]]></copy>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomSoundButtonSkin/hostComponent' name='Bindable' >
	</Bindable>
</metadata>
</field>
<packageRec name='DisplayApplication.CustomSkins.null' fullname='DisplayApplication.CustomSkins.null'>
<description><![CDATA[
  Generated by mxmlc 4.0
  Package: DisplayApplication.CustomSkins
 Class:   CustomStartButtonSkin
 Source:  C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\CustomSkins\CustomStartButtonSkin.mxml
 ]]></description>
</packageRec>
<classRec name='CustomStartButtonSkin' fullname='DisplayApplication.CustomSkins:CustomStartButtonSkin' sourcefile='C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\CustomSkins\CustomStartButtonSkin.mxml' namespace='DisplayApplication.CustomSkins' access='public' baseclass='spark.skins:SparkSkin' interfaces='mx.binding:IBindingClient;mx.core:IStateClient2' isFinal='false' isDynamic='false' >
<description><![CDATA[The default skin class for the Spark Button component.  

]]></description>
<langversion><![CDATA[ 3.0
]]></langversion>
<playerversion><![CDATA[ Flash 10
]]></playerversion>
<playerversion><![CDATA[ AIR 1.5
]]></playerversion>
<productversion><![CDATA[ Flex 4]]></productversion>
<see><![CDATA[ spark.components.Button

]]></see>
<metadata>
	<DefaultProperty owner='DisplayApplication.CustomSkins:CustomStartButtonSkin' name='mxmlContent' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='CustomStartButtonSkin' fullname='DisplayApplication.CustomSkins:CustomStartButtonSkin/CustomStartButtonSkin' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[]]></description>
</method>
<method name='_CustomStartButtonSkin_Image1_i' fullname='DisplayApplication.CustomSkins:CustomStartButtonSkin/private:_CustomStartButtonSkin_Image1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.controls:Image'>
</method>
<method name='_CustomStartButtonSkin_Label1_i' fullname='DisplayApplication.CustomSkins:CustomStartButtonSkin/private:_CustomStartButtonSkin_Label1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Label'>
</method>
<method name='_CustomStartButtonSkin_bindingsSetup' fullname='DisplayApplication.CustomSkins:CustomStartButtonSkin/private:_CustomStartButtonSkin_bindingsSetup' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='initialize' fullname='DisplayApplication.CustomSkins:CustomStartButtonSkin/initialize' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='moduleFactory' fullname='DisplayApplication.CustomSkins:CustomStartButtonSkin/moduleFactory/set' isStatic='false' isFinal='false' isOverride='true'  param_names='factory' param_types='mx.core:IFlexModuleFactory' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='watcherSetupUtil' fullname='DisplayApplication.CustomSkins:CustomStartButtonSkin/watcherSetupUtil/set' isStatic='true' isFinal='false' isOverride='false'  param_names='watcherSetupUtil' param_types='mx.binding:IWatcherSetupUtil2' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='_CustomStartButtonSkin_Image1' fullname='DisplayApplication.CustomSkins:CustomStartButtonSkin/_CustomStartButtonSkin_Image1' type='mx.controls:Image' isStatic='false' isConst='false' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='__moduleFactoryInitialized' fullname='DisplayApplication.CustomSkins:CustomStartButtonSkin/private:__moduleFactoryInitialized' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_bindingsBeginWithWord' fullname='DisplayApplication.CustomSkins:CustomStartButtonSkin/mx_internal:_bindingsBeginWithWord' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_bindingsByDestination' fullname='DisplayApplication.CustomSkins:CustomStartButtonSkin/mx_internal:_bindingsByDestination' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_bindings' fullname='DisplayApplication.CustomSkins:CustomStartButtonSkin/mx_internal:_bindings' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_watcherSetupUtil' fullname='DisplayApplication.CustomSkins:CustomStartButtonSkin/private:_watcherSetupUtil' type='mx.binding:IWatcherSetupUtil2' isStatic='true' isConst='false' >
</field>
<field name='_watchers' fullname='DisplayApplication.CustomSkins:CustomStartButtonSkin/mx_internal:_watchers' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='hostComponent' fullname='DisplayApplication.CustomSkins:CustomStartButtonSkin/hostComponent' type='spark.components:Button' isStatic='false' isConst='false' >
<description><![CDATA[ 
		]]></description>
<copy><![CDATA[spark.skins.spark.ApplicationSkin#hostComponent
		]]></copy>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomStartButtonSkin/hostComponent' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='labelDisplay' fullname='DisplayApplication.CustomSkins:CustomStartButtonSkin/labelDisplay' type='spark.components:Label' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomStartButtonSkin/labelDisplay' name='Bindable' >
	</Bindable>
</metadata>
</field>
<packageRec name='DisplayApplication.CustomSkins.null' fullname='DisplayApplication.CustomSkins.null'>
<description><![CDATA[
  Generated by mxmlc 4.0
  Package: DisplayApplication.CustomSkins
 Class:   CustomBackButtonSkin
 Source:  C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\CustomSkins\CustomBackButtonSkin.mxml
 ]]></description>
</packageRec>
<classRec name='CustomBackButtonSkin' fullname='DisplayApplication.CustomSkins:CustomBackButtonSkin' sourcefile='C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\CustomSkins\CustomBackButtonSkin.mxml' namespace='DisplayApplication.CustomSkins' access='public' baseclass='spark.skins:SparkSkin' interfaces='mx.binding:IBindingClient;mx.core:IStateClient2' isFinal='false' isDynamic='false' >
<description><![CDATA[The default skin class for the Spark Button component.  

]]></description>
<langversion><![CDATA[ 3.0
]]></langversion>
<playerversion><![CDATA[ Flash 10
]]></playerversion>
<playerversion><![CDATA[ AIR 1.5
]]></playerversion>
<productversion><![CDATA[ Flex 4]]></productversion>
<see><![CDATA[ spark.components.Button

]]></see>
<metadata>
	<DefaultProperty owner='DisplayApplication.CustomSkins:CustomBackButtonSkin' name='mxmlContent' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='CustomBackButtonSkin' fullname='DisplayApplication.CustomSkins:CustomBackButtonSkin/CustomBackButtonSkin' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[]]></description>
</method>
<method name='_CustomBackButtonSkin_Image1_i' fullname='DisplayApplication.CustomSkins:CustomBackButtonSkin/private:_CustomBackButtonSkin_Image1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.controls:Image'>
</method>
<method name='_CustomBackButtonSkin_Label1_i' fullname='DisplayApplication.CustomSkins:CustomBackButtonSkin/private:_CustomBackButtonSkin_Label1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Label'>
</method>
<method name='_CustomBackButtonSkin_bindingsSetup' fullname='DisplayApplication.CustomSkins:CustomBackButtonSkin/private:_CustomBackButtonSkin_bindingsSetup' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='initialize' fullname='DisplayApplication.CustomSkins:CustomBackButtonSkin/initialize' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='moduleFactory' fullname='DisplayApplication.CustomSkins:CustomBackButtonSkin/moduleFactory/set' isStatic='false' isFinal='false' isOverride='true'  param_names='factory' param_types='mx.core:IFlexModuleFactory' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='watcherSetupUtil' fullname='DisplayApplication.CustomSkins:CustomBackButtonSkin/watcherSetupUtil/set' isStatic='true' isFinal='false' isOverride='false'  param_names='watcherSetupUtil' param_types='mx.binding:IWatcherSetupUtil2' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='_CustomBackButtonSkin_Image1' fullname='DisplayApplication.CustomSkins:CustomBackButtonSkin/_CustomBackButtonSkin_Image1' type='mx.controls:Image' isStatic='false' isConst='false' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='__moduleFactoryInitialized' fullname='DisplayApplication.CustomSkins:CustomBackButtonSkin/private:__moduleFactoryInitialized' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_bindingsBeginWithWord' fullname='DisplayApplication.CustomSkins:CustomBackButtonSkin/mx_internal:_bindingsBeginWithWord' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_bindingsByDestination' fullname='DisplayApplication.CustomSkins:CustomBackButtonSkin/mx_internal:_bindingsByDestination' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_bindings' fullname='DisplayApplication.CustomSkins:CustomBackButtonSkin/mx_internal:_bindings' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_watcherSetupUtil' fullname='DisplayApplication.CustomSkins:CustomBackButtonSkin/private:_watcherSetupUtil' type='mx.binding:IWatcherSetupUtil2' isStatic='true' isConst='false' >
</field>
<field name='_watchers' fullname='DisplayApplication.CustomSkins:CustomBackButtonSkin/mx_internal:_watchers' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='hostComponent' fullname='DisplayApplication.CustomSkins:CustomBackButtonSkin/hostComponent' type='spark.components:Button' isStatic='false' isConst='false' >
<description><![CDATA[ 
		]]></description>
<copy><![CDATA[spark.skins.spark.ApplicationSkin#hostComponent
		]]></copy>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomBackButtonSkin/hostComponent' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='labelDisplay' fullname='DisplayApplication.CustomSkins:CustomBackButtonSkin/labelDisplay' type='spark.components:Label' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomBackButtonSkin/labelDisplay' name='Bindable' >
	</Bindable>
</metadata>
</field>
<packageRec name='DisplayApplication.CustomSkins.null' fullname='DisplayApplication.CustomSkins.null'>
<description><![CDATA[
  Generated by mxmlc 4.0
  Package: DisplayApplication.CustomSkins
 Class:   CustomButtonSkin
 Source:  C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\CustomSkins\CustomButtonSkin.mxml
 ]]></description>
</packageRec>
<classRec name='CustomButtonSkin' fullname='DisplayApplication.CustomSkins:CustomButtonSkin' sourcefile='C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\CustomSkins\CustomButtonSkin.mxml' namespace='DisplayApplication.CustomSkins' access='public' baseclass='spark.skins:SparkSkin' interfaces='mx.binding:IBindingClient;mx.core:IStateClient2' isFinal='false' isDynamic='false' >
<description><![CDATA[The default skin class for the Spark Button component.  

]]></description>
<langversion><![CDATA[ 3.0
]]></langversion>
<playerversion><![CDATA[ Flash 10
]]></playerversion>
<playerversion><![CDATA[ AIR 1.5
]]></playerversion>
<productversion><![CDATA[ Flex 4]]></productversion>
<see><![CDATA[ spark.components.Button

]]></see>
<metadata>
	<DefaultProperty owner='DisplayApplication.CustomSkins:CustomButtonSkin' name='mxmlContent' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='CustomButtonSkin' fullname='DisplayApplication.CustomSkins:CustomButtonSkin/CustomButtonSkin' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[]]></description>
</method>
<method name='_CustomButtonSkin_Image1_i' fullname='DisplayApplication.CustomSkins:CustomButtonSkin/private:_CustomButtonSkin_Image1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.controls:Image'>
</method>
<method name='_CustomButtonSkin_Label1_i' fullname='DisplayApplication.CustomSkins:CustomButtonSkin/private:_CustomButtonSkin_Label1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Label'>
</method>
<method name='_CustomButtonSkin_bindingsSetup' fullname='DisplayApplication.CustomSkins:CustomButtonSkin/private:_CustomButtonSkin_bindingsSetup' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='initialize' fullname='DisplayApplication.CustomSkins:CustomButtonSkin/initialize' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='moduleFactory' fullname='DisplayApplication.CustomSkins:CustomButtonSkin/moduleFactory/set' isStatic='false' isFinal='false' isOverride='true'  param_names='factory' param_types='mx.core:IFlexModuleFactory' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='watcherSetupUtil' fullname='DisplayApplication.CustomSkins:CustomButtonSkin/watcherSetupUtil/set' isStatic='true' isFinal='false' isOverride='false'  param_names='watcherSetupUtil' param_types='mx.binding:IWatcherSetupUtil2' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='_CustomButtonSkin_Image1' fullname='DisplayApplication.CustomSkins:CustomButtonSkin/_CustomButtonSkin_Image1' type='mx.controls:Image' isStatic='false' isConst='false' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='__moduleFactoryInitialized' fullname='DisplayApplication.CustomSkins:CustomButtonSkin/private:__moduleFactoryInitialized' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_bindingsBeginWithWord' fullname='DisplayApplication.CustomSkins:CustomButtonSkin/mx_internal:_bindingsBeginWithWord' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_bindingsByDestination' fullname='DisplayApplication.CustomSkins:CustomButtonSkin/mx_internal:_bindingsByDestination' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_bindings' fullname='DisplayApplication.CustomSkins:CustomButtonSkin/mx_internal:_bindings' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_watcherSetupUtil' fullname='DisplayApplication.CustomSkins:CustomButtonSkin/private:_watcherSetupUtil' type='mx.binding:IWatcherSetupUtil2' isStatic='true' isConst='false' >
</field>
<field name='_watchers' fullname='DisplayApplication.CustomSkins:CustomButtonSkin/mx_internal:_watchers' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='hostComponent' fullname='DisplayApplication.CustomSkins:CustomButtonSkin/hostComponent' type='spark.components:Button' isStatic='false' isConst='false' >
<description><![CDATA[ 
		]]></description>
<copy><![CDATA[spark.skins.spark.ApplicationSkin#hostComponent
		]]></copy>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomButtonSkin/hostComponent' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='labelDisplay' fullname='DisplayApplication.CustomSkins:CustomButtonSkin/labelDisplay' type='spark.components:Label' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomButtonSkin/labelDisplay' name='Bindable' >
	</Bindable>
</metadata>
</field>
<packageRec name='DisplayApplication.CustomSkins.null' fullname='DisplayApplication.CustomSkins.null'>
<description><![CDATA[
  Generated by mxmlc 4.0
  Package: DisplayApplication.CustomSkins
 Class:   CustomDimesionButtonSkin
 Source:  C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\CustomSkins\CustomDimesionButtonSkin.mxml
 ]]></description>
</packageRec>
<classRec name='CustomDimesionButtonSkin' fullname='DisplayApplication.CustomSkins:CustomDimesionButtonSkin' sourcefile='C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\CustomSkins\CustomDimesionButtonSkin.mxml' namespace='DisplayApplication.CustomSkins' access='public' baseclass='spark.skins:SparkSkin' interfaces='mx.binding:IBindingClient;mx.core:IStateClient2' isFinal='false' isDynamic='false' >
<description><![CDATA[The default skin class for the Spark Button component.  

]]></description>
<langversion><![CDATA[ 3.0
]]></langversion>
<playerversion><![CDATA[ Flash 10
]]></playerversion>
<playerversion><![CDATA[ AIR 1.5
]]></playerversion>
<productversion><![CDATA[ Flex 4]]></productversion>
<see><![CDATA[ spark.components.Button

]]></see>
<metadata>
	<DefaultProperty owner='DisplayApplication.CustomSkins:CustomDimesionButtonSkin' name='mxmlContent' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='CustomDimesionButtonSkin' fullname='DisplayApplication.CustomSkins:CustomDimesionButtonSkin/CustomDimesionButtonSkin' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[]]></description>
</method>
<method name='_CustomDimesionButtonSkin_Image1_i' fullname='DisplayApplication.CustomSkins:CustomDimesionButtonSkin/private:_CustomDimesionButtonSkin_Image1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.controls:Image'>
</method>
<method name='_CustomDimesionButtonSkin_Label1_i' fullname='DisplayApplication.CustomSkins:CustomDimesionButtonSkin/private:_CustomDimesionButtonSkin_Label1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Label'>
</method>
<method name='_CustomDimesionButtonSkin_bindingsSetup' fullname='DisplayApplication.CustomSkins:CustomDimesionButtonSkin/private:_CustomDimesionButtonSkin_bindingsSetup' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='initialize' fullname='DisplayApplication.CustomSkins:CustomDimesionButtonSkin/initialize' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='moduleFactory' fullname='DisplayApplication.CustomSkins:CustomDimesionButtonSkin/moduleFactory/set' isStatic='false' isFinal='false' isOverride='true'  param_names='factory' param_types='mx.core:IFlexModuleFactory' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='watcherSetupUtil' fullname='DisplayApplication.CustomSkins:CustomDimesionButtonSkin/watcherSetupUtil/set' isStatic='true' isFinal='false' isOverride='false'  param_names='watcherSetupUtil' param_types='mx.binding:IWatcherSetupUtil2' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='_CustomDimesionButtonSkin_Image1' fullname='DisplayApplication.CustomSkins:CustomDimesionButtonSkin/_CustomDimesionButtonSkin_Image1' type='mx.controls:Image' isStatic='false' isConst='false' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='__moduleFactoryInitialized' fullname='DisplayApplication.CustomSkins:CustomDimesionButtonSkin/private:__moduleFactoryInitialized' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_bindingsBeginWithWord' fullname='DisplayApplication.CustomSkins:CustomDimesionButtonSkin/mx_internal:_bindingsBeginWithWord' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_bindingsByDestination' fullname='DisplayApplication.CustomSkins:CustomDimesionButtonSkin/mx_internal:_bindingsByDestination' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_bindings' fullname='DisplayApplication.CustomSkins:CustomDimesionButtonSkin/mx_internal:_bindings' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_watcherSetupUtil' fullname='DisplayApplication.CustomSkins:CustomDimesionButtonSkin/private:_watcherSetupUtil' type='mx.binding:IWatcherSetupUtil2' isStatic='true' isConst='false' >
</field>
<field name='_watchers' fullname='DisplayApplication.CustomSkins:CustomDimesionButtonSkin/mx_internal:_watchers' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='hostComponent' fullname='DisplayApplication.CustomSkins:CustomDimesionButtonSkin/hostComponent' type='spark.components:Button' isStatic='false' isConst='false' >
<description><![CDATA[ 
		]]></description>
<copy><![CDATA[spark.skins.spark.ApplicationSkin#hostComponent
		]]></copy>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomDimesionButtonSkin/hostComponent' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='labelDisplay' fullname='DisplayApplication.CustomSkins:CustomDimesionButtonSkin/labelDisplay' type='spark.components:Label' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomDimesionButtonSkin/labelDisplay' name='Bindable' >
	</Bindable>
</metadata>
</field>
<packageRec name='DisplayApplication.CustomSkins.null' fullname='DisplayApplication.CustomSkins.null'>
<description><![CDATA[
  Generated by mxmlc 4.0
  Package: DisplayApplication.CustomSkins
 Class:   SoundButtonSkin
 Source:  C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\CustomSkins\SoundButtonSkin.mxml
 ]]></description>
</packageRec>
<classRec name='SoundButtonSkin' fullname='DisplayApplication.CustomSkins:SoundButtonSkin' sourcefile='C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\CustomSkins\SoundButtonSkin.mxml' namespace='DisplayApplication.CustomSkins' access='public' baseclass='spark.skins:SparkSkin' interfaces='mx.core:IStateClient2' isFinal='false' isDynamic='false' >
<description><![CDATA[The default skin class for the Spark Button component.  

       ]]></description>
<langversion><![CDATA[ 3.0
      ]]></langversion>
<playerversion><![CDATA[ Flash 10
      ]]></playerversion>
<playerversion><![CDATA[ AIR 1.5
      ]]></playerversion>
<productversion><![CDATA[ Flex 4]]></productversion>
<see><![CDATA[ spark.components.Button
        
      ]]></see>
<metadata>
	<DefaultProperty owner='DisplayApplication.CustomSkins:SoundButtonSkin' name='mxmlContent' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='SoundButtonSkin' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/SoundButtonSkin' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[]]></description>
</method>
<method name='_SoundButtonSkin_GradientEntry10_c' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/private:_SoundButtonSkin_GradientEntry10_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:GradientEntry'>
</method>
<method name='_SoundButtonSkin_GradientEntry11_i' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/private:_SoundButtonSkin_GradientEntry11_i' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:GradientEntry'>
</method>
<method name='_SoundButtonSkin_GradientEntry12_i' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/private:_SoundButtonSkin_GradientEntry12_i' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:GradientEntry'>
</method>
<method name='_SoundButtonSkin_GradientEntry13_c' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/private:_SoundButtonSkin_GradientEntry13_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:GradientEntry'>
</method>
<method name='_SoundButtonSkin_GradientEntry14_c' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/private:_SoundButtonSkin_GradientEntry14_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:GradientEntry'>
</method>
<method name='_SoundButtonSkin_GradientEntry15_c' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/private:_SoundButtonSkin_GradientEntry15_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:GradientEntry'>
</method>
<method name='_SoundButtonSkin_GradientEntry16_c' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/private:_SoundButtonSkin_GradientEntry16_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:GradientEntry'>
</method>
<method name='_SoundButtonSkin_GradientEntry17_c' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/private:_SoundButtonSkin_GradientEntry17_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:GradientEntry'>
</method>
<method name='_SoundButtonSkin_GradientEntry18_c' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/private:_SoundButtonSkin_GradientEntry18_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:GradientEntry'>
</method>
<method name='_SoundButtonSkin_GradientEntry19_c' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/private:_SoundButtonSkin_GradientEntry19_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:GradientEntry'>
</method>
<method name='_SoundButtonSkin_GradientEntry1_i' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/private:_SoundButtonSkin_GradientEntry1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:GradientEntry'>
</method>
<method name='_SoundButtonSkin_GradientEntry20_i' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/private:_SoundButtonSkin_GradientEntry20_i' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:GradientEntry'>
</method>
<method name='_SoundButtonSkin_GradientEntry21_i' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/private:_SoundButtonSkin_GradientEntry21_i' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:GradientEntry'>
</method>
<method name='_SoundButtonSkin_GradientEntry2_i' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/private:_SoundButtonSkin_GradientEntry2_i' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:GradientEntry'>
</method>
<method name='_SoundButtonSkin_GradientEntry3_i' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/private:_SoundButtonSkin_GradientEntry3_i' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:GradientEntry'>
</method>
<method name='_SoundButtonSkin_GradientEntry4_i' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/private:_SoundButtonSkin_GradientEntry4_i' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:GradientEntry'>
</method>
<method name='_SoundButtonSkin_GradientEntry5_c' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/private:_SoundButtonSkin_GradientEntry5_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:GradientEntry'>
</method>
<method name='_SoundButtonSkin_GradientEntry6_c' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/private:_SoundButtonSkin_GradientEntry6_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:GradientEntry'>
</method>
<method name='_SoundButtonSkin_GradientEntry7_c' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/private:_SoundButtonSkin_GradientEntry7_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:GradientEntry'>
</method>
<method name='_SoundButtonSkin_GradientEntry8_i' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/private:_SoundButtonSkin_GradientEntry8_i' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:GradientEntry'>
</method>
<method name='_SoundButtonSkin_GradientEntry9_i' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/private:_SoundButtonSkin_GradientEntry9_i' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:GradientEntry'>
</method>
<method name='_SoundButtonSkin_Image1_i' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/private:_SoundButtonSkin_Image1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.controls:Image'>
</method>
<method name='_SoundButtonSkin_LinearGradient1_c' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/private:_SoundButtonSkin_LinearGradient1_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:LinearGradient'>
</method>
<method name='_SoundButtonSkin_LinearGradient2_c' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/private:_SoundButtonSkin_LinearGradient2_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:LinearGradient'>
</method>
<method name='_SoundButtonSkin_LinearGradient3_c' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/private:_SoundButtonSkin_LinearGradient3_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:LinearGradient'>
</method>
<method name='_SoundButtonSkin_LinearGradient4_c' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/private:_SoundButtonSkin_LinearGradient4_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:LinearGradient'>
</method>
<method name='_SoundButtonSkin_LinearGradientStroke1_c' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/private:_SoundButtonSkin_LinearGradientStroke1_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:LinearGradientStroke'>
</method>
<method name='_SoundButtonSkin_LinearGradientStroke2_c' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/private:_SoundButtonSkin_LinearGradientStroke2_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:LinearGradientStroke'>
</method>
<method name='_SoundButtonSkin_LinearGradientStroke3_c' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/private:_SoundButtonSkin_LinearGradientStroke3_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:LinearGradientStroke'>
</method>
<method name='_SoundButtonSkin_LinearGradientStroke4_c' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/private:_SoundButtonSkin_LinearGradientStroke4_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:LinearGradientStroke'>
</method>
<method name='_SoundButtonSkin_Rect1_i' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/private:_SoundButtonSkin_Rect1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.primitives:Rect'>
</method>
<method name='_SoundButtonSkin_Rect2_i' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/private:_SoundButtonSkin_Rect2_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.primitives:Rect'>
</method>
<method name='_SoundButtonSkin_Rect3_i' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/private:_SoundButtonSkin_Rect3_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.primitives:Rect'>
</method>
<method name='_SoundButtonSkin_Rect4_i' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/private:_SoundButtonSkin_Rect4_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.primitives:Rect'>
</method>
<method name='_SoundButtonSkin_Rect5_i' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/private:_SoundButtonSkin_Rect5_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.primitives:Rect'>
</method>
<method name='_SoundButtonSkin_Rect6_i' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/private:_SoundButtonSkin_Rect6_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.primitives:Rect'>
</method>
<method name='_SoundButtonSkin_Rect7_i' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/private:_SoundButtonSkin_Rect7_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.primitives:Rect'>
</method>
<method name='_SoundButtonSkin_Rect8_i' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/private:_SoundButtonSkin_Rect8_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.primitives:Rect'>
</method>
<method name='initialize' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/initialize' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='moduleFactory' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/moduleFactory/set' isStatic='false' isFinal='false' isOverride='true'  param_names='factory' param_types='mx.core:IFlexModuleFactory' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='_SoundButtonSkin_GradientEntry11' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/_SoundButtonSkin_GradientEntry11' type='mx.graphics:GradientEntry' isStatic='false' isConst='false' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:SoundButtonSkin/_SoundButtonSkin_GradientEntry11' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='_SoundButtonSkin_GradientEntry12' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/_SoundButtonSkin_GradientEntry12' type='mx.graphics:GradientEntry' isStatic='false' isConst='false' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:SoundButtonSkin/_SoundButtonSkin_GradientEntry12' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='_SoundButtonSkin_GradientEntry1' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/_SoundButtonSkin_GradientEntry1' type='mx.graphics:GradientEntry' isStatic='false' isConst='false' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:SoundButtonSkin/_SoundButtonSkin_GradientEntry1' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='_SoundButtonSkin_GradientEntry20' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/_SoundButtonSkin_GradientEntry20' type='mx.graphics:GradientEntry' isStatic='false' isConst='false' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:SoundButtonSkin/_SoundButtonSkin_GradientEntry20' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='_SoundButtonSkin_GradientEntry21' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/_SoundButtonSkin_GradientEntry21' type='mx.graphics:GradientEntry' isStatic='false' isConst='false' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:SoundButtonSkin/_SoundButtonSkin_GradientEntry21' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='_SoundButtonSkin_GradientEntry2' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/_SoundButtonSkin_GradientEntry2' type='mx.graphics:GradientEntry' isStatic='false' isConst='false' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:SoundButtonSkin/_SoundButtonSkin_GradientEntry2' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='_SoundButtonSkin_GradientEntry3' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/_SoundButtonSkin_GradientEntry3' type='mx.graphics:GradientEntry' isStatic='false' isConst='false' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:SoundButtonSkin/_SoundButtonSkin_GradientEntry3' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='_SoundButtonSkin_GradientEntry4' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/_SoundButtonSkin_GradientEntry4' type='mx.graphics:GradientEntry' isStatic='false' isConst='false' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:SoundButtonSkin/_SoundButtonSkin_GradientEntry4' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='_SoundButtonSkin_GradientEntry8' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/_SoundButtonSkin_GradientEntry8' type='mx.graphics:GradientEntry' isStatic='false' isConst='false' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:SoundButtonSkin/_SoundButtonSkin_GradientEntry8' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='_SoundButtonSkin_GradientEntry9' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/_SoundButtonSkin_GradientEntry9' type='mx.graphics:GradientEntry' isStatic='false' isConst='false' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:SoundButtonSkin/_SoundButtonSkin_GradientEntry9' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='_SoundButtonSkin_Image1' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/_SoundButtonSkin_Image1' type='mx.controls:Image' isStatic='false' isConst='false' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='__moduleFactoryInitialized' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/private:__moduleFactoryInitialized' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='border' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/border' type='spark.primitives:Rect' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:SoundButtonSkin/border' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='fill' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/fill' type='spark.primitives:Rect' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:SoundButtonSkin/fill' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='highlightStroke' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/highlightStroke' type='spark.primitives:Rect' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:SoundButtonSkin/highlightStroke' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='highlight' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/highlight' type='spark.primitives:Rect' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:SoundButtonSkin/highlight' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='hldownstroke1' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/hldownstroke1' type='spark.primitives:Rect' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:SoundButtonSkin/hldownstroke1' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='hldownstroke2' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/hldownstroke2' type='spark.primitives:Rect' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:SoundButtonSkin/hldownstroke2' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='hostComponent' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/hostComponent' type='spark.components:Button' isStatic='false' isConst='false' >
<description><![CDATA[ 
         ]]></description>
<copy><![CDATA[spark.skins.spark.ApplicationSkin#hostComponent
         ]]></copy>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:SoundButtonSkin/hostComponent' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='lowlight' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/lowlight' type='spark.primitives:Rect' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:SoundButtonSkin/lowlight' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='shadow' fullname='DisplayApplication.CustomSkins:SoundButtonSkin/shadow' type='spark.primitives:Rect' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:SoundButtonSkin/shadow' name='Bindable' >
	</Bindable>
</metadata>
</field>
<packageRec name='DisplayApplication.CustomSkins.null' fullname='DisplayApplication.CustomSkins.null'>
<description><![CDATA[
  Generated by mxmlc 4.0
  Package: DisplayApplication.CustomSkins
 Class:   CustomForwardButtonSkin
 Source:  C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\CustomSkins\CustomForwardButtonSkin.mxml
 ]]></description>
</packageRec>
<classRec name='CustomForwardButtonSkin' fullname='DisplayApplication.CustomSkins:CustomForwardButtonSkin' sourcefile='C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\CustomSkins\CustomForwardButtonSkin.mxml' namespace='DisplayApplication.CustomSkins' access='public' baseclass='spark.skins:SparkSkin' interfaces='mx.binding:IBindingClient;mx.core:IStateClient2' isFinal='false' isDynamic='false' >
<description><![CDATA[The default skin class for the Spark Button component.  

]]></description>
<langversion><![CDATA[ 3.0
]]></langversion>
<playerversion><![CDATA[ Flash 10
]]></playerversion>
<playerversion><![CDATA[ AIR 1.5
]]></playerversion>
<productversion><![CDATA[ Flex 4]]></productversion>
<see><![CDATA[ spark.components.Button

]]></see>
<metadata>
	<DefaultProperty owner='DisplayApplication.CustomSkins:CustomForwardButtonSkin' name='mxmlContent' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='CustomForwardButtonSkin' fullname='DisplayApplication.CustomSkins:CustomForwardButtonSkin/CustomForwardButtonSkin' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[]]></description>
</method>
<method name='_CustomForwardButtonSkin_Image1_i' fullname='DisplayApplication.CustomSkins:CustomForwardButtonSkin/private:_CustomForwardButtonSkin_Image1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.controls:Image'>
</method>
<method name='_CustomForwardButtonSkin_Label1_i' fullname='DisplayApplication.CustomSkins:CustomForwardButtonSkin/private:_CustomForwardButtonSkin_Label1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:Label'>
</method>
<method name='_CustomForwardButtonSkin_bindingsSetup' fullname='DisplayApplication.CustomSkins:CustomForwardButtonSkin/private:_CustomForwardButtonSkin_bindingsSetup' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='initialize' fullname='DisplayApplication.CustomSkins:CustomForwardButtonSkin/initialize' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='moduleFactory' fullname='DisplayApplication.CustomSkins:CustomForwardButtonSkin/moduleFactory/set' isStatic='false' isFinal='false' isOverride='true'  param_names='factory' param_types='mx.core:IFlexModuleFactory' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='watcherSetupUtil' fullname='DisplayApplication.CustomSkins:CustomForwardButtonSkin/watcherSetupUtil/set' isStatic='true' isFinal='false' isOverride='false'  param_names='watcherSetupUtil' param_types='mx.binding:IWatcherSetupUtil2' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='_CustomForwardButtonSkin_Image1' fullname='DisplayApplication.CustomSkins:CustomForwardButtonSkin/_CustomForwardButtonSkin_Image1' type='mx.controls:Image' isStatic='false' isConst='false' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='__moduleFactoryInitialized' fullname='DisplayApplication.CustomSkins:CustomForwardButtonSkin/private:__moduleFactoryInitialized' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_bindingsBeginWithWord' fullname='DisplayApplication.CustomSkins:CustomForwardButtonSkin/mx_internal:_bindingsBeginWithWord' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_bindingsByDestination' fullname='DisplayApplication.CustomSkins:CustomForwardButtonSkin/mx_internal:_bindingsByDestination' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_bindings' fullname='DisplayApplication.CustomSkins:CustomForwardButtonSkin/mx_internal:_bindings' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_watcherSetupUtil' fullname='DisplayApplication.CustomSkins:CustomForwardButtonSkin/private:_watcherSetupUtil' type='mx.binding:IWatcherSetupUtil2' isStatic='true' isConst='false' >
</field>
<field name='_watchers' fullname='DisplayApplication.CustomSkins:CustomForwardButtonSkin/mx_internal:_watchers' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='hostComponent' fullname='DisplayApplication.CustomSkins:CustomForwardButtonSkin/hostComponent' type='spark.components:Button' isStatic='false' isConst='false' >
<description><![CDATA[ 
		]]></description>
<copy><![CDATA[spark.skins.spark.ApplicationSkin#hostComponent
		]]></copy>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomForwardButtonSkin/hostComponent' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='labelDisplay' fullname='DisplayApplication.CustomSkins:CustomForwardButtonSkin/labelDisplay' type='spark.components:Label' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomForwardButtonSkin/labelDisplay' name='Bindable' >
	</Bindable>
</metadata>
</field>
<packageRec name='DisplayApplication.CustomSkins.null' fullname='DisplayApplication.CustomSkins.null'>
<description><![CDATA[
  Generated by mxmlc 4.0
  Package: DisplayApplication.CustomSkins
 Class:   CustomLoginInputSkin
 Source:  C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\CustomSkins\CustomLoginInputSkin.mxml
 ]]></description>
</packageRec>
<classRec name='CustomLoginInputSkin' fullname='DisplayApplication.CustomSkins:CustomLoginInputSkin' sourcefile='C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\CustomSkins\CustomLoginInputSkin.mxml' namespace='DisplayApplication.CustomSkins' access='public' baseclass='spark.skins:SparkSkin' interfaces='mx.core:IStateClient2' isFinal='false' isDynamic='false' >
<description><![CDATA[The default skin class for Spark TextInput component.  

     ]]></description>
<langversion><![CDATA[ 3.0
      ]]></langversion>
<playerversion><![CDATA[ Flash 10
      ]]></playerversion>
<playerversion><![CDATA[ AIR 1.5
      ]]></playerversion>
<productversion><![CDATA[ Flex 4]]></productversion>
<see><![CDATA[ spark.components.TextInput
        
      ]]></see>
<metadata>
	<DefaultProperty owner='DisplayApplication.CustomSkins:CustomLoginInputSkin' name='mxmlContent' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='CustomLoginInputSkin' fullname='DisplayApplication.CustomSkins:CustomLoginInputSkin/CustomLoginInputSkin' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[]]></description>
</method>
<method name='_CustomLoginInputSkin_RichEditableText1_i' fullname='DisplayApplication.CustomSkins:CustomLoginInputSkin/private:_CustomLoginInputSkin_RichEditableText1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:RichEditableText'>
</method>
<method name='commitProperties' fullname='DisplayApplication.CustomSkins:CustomLoginInputSkin/protected:commitProperties' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
          ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='initializationComplete' fullname='DisplayApplication.CustomSkins:CustomLoginInputSkin/protected:initializationComplete' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
         ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='initialize' fullname='DisplayApplication.CustomSkins:CustomLoginInputSkin/initialize' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='styleChanged' fullname='DisplayApplication.CustomSkins:CustomLoginInputSkin/styleChanged' isStatic='false' isFinal='false' isOverride='true'  param_names='styleProp' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[
          ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='updateDisplayList' fullname='DisplayApplication.CustomSkins:CustomLoginInputSkin/protected:updateDisplayList' isStatic='false' isFinal='false' isOverride='true'  param_names='unscaledWidth;unscaledHeight' param_types='Number;Number' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[
          ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='updatePadding' fullname='DisplayApplication.CustomSkins:CustomLoginInputSkin/private:updatePadding' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
          ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='colorizeExclusions' fullname='DisplayApplication.CustomSkins:CustomLoginInputSkin/colorizeExclusions/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Array'>
<description><![CDATA[
         ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='contentItems' fullname='DisplayApplication.CustomSkins:CustomLoginInputSkin/contentItems/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Array'>
<description><![CDATA[
          ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='focusSkinExclusions' fullname='DisplayApplication.CustomSkins:CustomLoginInputSkin/focusSkinExclusions/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Array'>
<description><![CDATA[
          ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='moduleFactory' fullname='DisplayApplication.CustomSkins:CustomLoginInputSkin/moduleFactory/set' isStatic='false' isFinal='false' isOverride='true'  param_names='factory' param_types='mx.core:IFlexModuleFactory' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='__moduleFactoryInitialized' fullname='DisplayApplication.CustomSkins:CustomLoginInputSkin/private:__moduleFactoryInitialized' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='contentFill' fullname='DisplayApplication.CustomSkins:CustomLoginInputSkin/private:contentFill' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='exclusions' fullname='DisplayApplication.CustomSkins:CustomLoginInputSkin/private:exclusions' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='focusExclusions' fullname='DisplayApplication.CustomSkins:CustomLoginInputSkin/private:focusExclusions' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ 
         ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='hostComponent' fullname='DisplayApplication.CustomSkins:CustomLoginInputSkin/hostComponent' type='spark.components:TextInput' isStatic='false' isConst='false' >
<description><![CDATA[ 
         ]]></description>
<copy><![CDATA[spark.skins.spark.ApplicationSkin#hostComponent
         ]]></copy>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomLoginInputSkin/hostComponent' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='paddingChanged' fullname='DisplayApplication.CustomSkins:CustomLoginInputSkin/private:paddingChanged' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='textDisplay' fullname='DisplayApplication.CustomSkins:CustomLoginInputSkin/textDisplay' type='spark.components:RichEditableText' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<copy><![CDATA[ spark.components.supportClasses.SkinnableTextBase#textDisplay]]></copy>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomLoginInputSkin/textDisplay' name='Bindable' >
	</Bindable>
</metadata>
</field>
<packageRec name='DisplayApplication.CustomSkins.null' fullname='DisplayApplication.CustomSkins.null'>
<description><![CDATA[
  Generated by mxmlc 4.0
  Package: DisplayApplication.CustomSkins
 Class:   CustomTextInputSkin
 Source:  C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\CustomSkins\CustomTextInputSkin.mxml
 ]]></description>
</packageRec>
<classRec name='CustomTextInputSkin' fullname='DisplayApplication.CustomSkins:CustomTextInputSkin' sourcefile='C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\CustomSkins\CustomTextInputSkin.mxml' namespace='DisplayApplication.CustomSkins' access='public' baseclass='spark.skins:SparkSkin' interfaces='mx.binding:IBindingClient;mx.core:IStateClient2' isFinal='false' isDynamic='false' >
<description><![CDATA[The default skin class for Spark TextInput component.  

     ]]></description>
<langversion><![CDATA[ 3.0
      ]]></langversion>
<playerversion><![CDATA[ Flash 10
      ]]></playerversion>
<playerversion><![CDATA[ AIR 1.5
      ]]></playerversion>
<productversion><![CDATA[ Flex 4]]></productversion>
<see><![CDATA[ spark.components.TextInput
        
      ]]></see>
<metadata>
	<DefaultProperty owner='DisplayApplication.CustomSkins:CustomTextInputSkin' name='mxmlContent' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='CustomTextInputSkin' fullname='DisplayApplication.CustomSkins:CustomTextInputSkin/CustomTextInputSkin' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[]]></description>
</method>
<method name='_CustomTextInputSkin_Rect1_i' fullname='DisplayApplication.CustomSkins:CustomTextInputSkin/private:_CustomTextInputSkin_Rect1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.primitives:Rect'>
</method>
<method name='_CustomTextInputSkin_Rect2_i' fullname='DisplayApplication.CustomSkins:CustomTextInputSkin/private:_CustomTextInputSkin_Rect2_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.primitives:Rect'>
</method>
<method name='_CustomTextInputSkin_Rect3_i' fullname='DisplayApplication.CustomSkins:CustomTextInputSkin/private:_CustomTextInputSkin_Rect3_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.primitives:Rect'>
</method>
<method name='_CustomTextInputSkin_RichEditableText1_i' fullname='DisplayApplication.CustomSkins:CustomTextInputSkin/private:_CustomTextInputSkin_RichEditableText1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='spark.components:RichEditableText'>
</method>
<method name='_CustomTextInputSkin_SolidColor1_i' fullname='DisplayApplication.CustomSkins:CustomTextInputSkin/private:_CustomTextInputSkin_SolidColor1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:SolidColor'>
</method>
<method name='_CustomTextInputSkin_SolidColor2_c' fullname='DisplayApplication.CustomSkins:CustomTextInputSkin/private:_CustomTextInputSkin_SolidColor2_c' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:SolidColor'>
</method>
<method name='_CustomTextInputSkin_SolidColorStroke1_i' fullname='DisplayApplication.CustomSkins:CustomTextInputSkin/private:_CustomTextInputSkin_SolidColorStroke1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.graphics:SolidColorStroke'>
</method>
<method name='_CustomTextInputSkin_bindingsSetup' fullname='DisplayApplication.CustomSkins:CustomTextInputSkin/private:_CustomTextInputSkin_bindingsSetup' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='initialize' fullname='DisplayApplication.CustomSkins:CustomTextInputSkin/initialize' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='focusSkinExclusions' fullname='DisplayApplication.CustomSkins:CustomTextInputSkin/focusSkinExclusions/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Array'>
<description><![CDATA[
          ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='moduleFactory' fullname='DisplayApplication.CustomSkins:CustomTextInputSkin/moduleFactory/set' isStatic='false' isFinal='false' isOverride='true'  param_names='factory' param_types='mx.core:IFlexModuleFactory' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='watcherSetupUtil' fullname='DisplayApplication.CustomSkins:CustomTextInputSkin/watcherSetupUtil/set' isStatic='true' isFinal='false' isOverride='false'  param_names='watcherSetupUtil' param_types='mx.binding:IWatcherSetupUtil2' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='__moduleFactoryInitialized' fullname='DisplayApplication.CustomSkins:CustomTextInputSkin/private:__moduleFactoryInitialized' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_bindingsBeginWithWord' fullname='DisplayApplication.CustomSkins:CustomTextInputSkin/mx_internal:_bindingsBeginWithWord' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_bindingsByDestination' fullname='DisplayApplication.CustomSkins:CustomTextInputSkin/mx_internal:_bindingsByDestination' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_bindings' fullname='DisplayApplication.CustomSkins:CustomTextInputSkin/mx_internal:_bindings' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_watcherSetupUtil' fullname='DisplayApplication.CustomSkins:CustomTextInputSkin/private:_watcherSetupUtil' type='mx.binding:IWatcherSetupUtil2' isStatic='true' isConst='false' >
</field>
<field name='_watchers' fullname='DisplayApplication.CustomSkins:CustomTextInputSkin/mx_internal:_watchers' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='background' fullname='DisplayApplication.CustomSkins:CustomTextInputSkin/background' type='spark.primitives:Rect' isStatic='false' isConst='false' >
<description><![CDATA[Defines the appearance of the TextInput component's background.]]></description>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomTextInputSkin/background' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='bgFill' fullname='DisplayApplication.CustomSkins:CustomTextInputSkin/bgFill' type='mx.graphics:SolidColor' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomTextInputSkin/bgFill' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='borderStroke' fullname='DisplayApplication.CustomSkins:CustomTextInputSkin/borderStroke' type='mx.graphics:SolidColorStroke' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomTextInputSkin/borderStroke' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='border' fullname='DisplayApplication.CustomSkins:CustomTextInputSkin/border' type='spark.primitives:Rect' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomTextInputSkin/border' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='focusExclusions' fullname='DisplayApplication.CustomSkins:CustomTextInputSkin/private:focusExclusions' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ 
         ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='hostComponent' fullname='DisplayApplication.CustomSkins:CustomTextInputSkin/hostComponent' type='spark.components:TextInput' isStatic='false' isConst='false' >
<description><![CDATA[ 
         ]]></description>
<copy><![CDATA[spark.skins.spark.ApplicationSkin#hostComponent
         ]]></copy>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomTextInputSkin/hostComponent' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='shadow' fullname='DisplayApplication.CustomSkins:CustomTextInputSkin/shadow' type='spark.primitives:Rect' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<private><![CDATA[]]></private>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomTextInputSkin/shadow' name='Bindable' >
	</Bindable>
</metadata>
</field>
<field name='textDisplay' fullname='DisplayApplication.CustomSkins:CustomTextInputSkin/textDisplay' type='spark.components:RichEditableText' isStatic='false' isConst='false' >
<description><![CDATA[]]></description>
<copy><![CDATA[ spark.components.supportClasses.SkinnableTextBase#textDisplay]]></copy>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomTextInputSkin/textDisplay' name='Bindable' >
	</Bindable>
</metadata>
</field>
<packageRec name='DisplayApplication.CustomSkins.null' fullname='DisplayApplication.CustomSkins.null'>
<description><![CDATA[
  Generated by mxmlc 4.0
  Package: DisplayApplication.CustomSkins
 Class:   CustomEyeButtonSkin
 Source:  C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\CustomSkins\CustomEyeButtonSkin.mxml
 ]]></description>
</packageRec>
<classRec name='CustomEyeButtonSkin' fullname='DisplayApplication.CustomSkins:CustomEyeButtonSkin' sourcefile='C:\lea\Itementwicklung\xmlTest\src\DisplayApplication\CustomSkins\CustomEyeButtonSkin.mxml' namespace='DisplayApplication.CustomSkins' access='public' baseclass='spark.skins:SparkSkin' interfaces='mx.binding:IBindingClient;mx.core:IStateClient2' isFinal='false' isDynamic='false' >
<description><![CDATA[The default skin class for the Spark Button component.  

       ]]></description>
<langversion><![CDATA[ 3.0
      ]]></langversion>
<playerversion><![CDATA[ Flash 10
      ]]></playerversion>
<playerversion><![CDATA[ AIR 1.5
      ]]></playerversion>
<productversion><![CDATA[ Flex 4]]></productversion>
<see><![CDATA[ spark.components.Button
        
      ]]></see>
<metadata>
	<DefaultProperty owner='DisplayApplication.CustomSkins:CustomEyeButtonSkin' name='mxmlContent' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='CustomEyeButtonSkin' fullname='DisplayApplication.CustomSkins:CustomEyeButtonSkin/CustomEyeButtonSkin' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[]]></description>
</method>
<method name='_CustomEyeButtonSkin_Image1_i' fullname='DisplayApplication.CustomSkins:CustomEyeButtonSkin/private:_CustomEyeButtonSkin_Image1_i' isStatic='false' isFinal='false' isOverride='false'  result_type='mx.controls:Image'>
</method>
<method name='_CustomEyeButtonSkin_bindingsSetup' fullname='DisplayApplication.CustomSkins:CustomEyeButtonSkin/private:_CustomEyeButtonSkin_bindingsSetup' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='initialize' fullname='DisplayApplication.CustomSkins:CustomEyeButtonSkin/initialize' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='moduleFactory' fullname='DisplayApplication.CustomSkins:CustomEyeButtonSkin/moduleFactory/set' isStatic='false' isFinal='false' isOverride='true'  param_names='factory' param_types='mx.core:IFlexModuleFactory' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='watcherSetupUtil' fullname='DisplayApplication.CustomSkins:CustomEyeButtonSkin/watcherSetupUtil/set' isStatic='true' isFinal='false' isOverride='false'  param_names='watcherSetupUtil' param_types='mx.binding:IWatcherSetupUtil2' param_defaults='undefined' result_type='void'>
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='_CustomEyeButtonSkin_Image1' fullname='DisplayApplication.CustomSkins:CustomEyeButtonSkin/_CustomEyeButtonSkin_Image1' type='mx.controls:Image' isStatic='false' isConst='false' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='__moduleFactoryInitialized' fullname='DisplayApplication.CustomSkins:CustomEyeButtonSkin/private:__moduleFactoryInitialized' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_bindingsBeginWithWord' fullname='DisplayApplication.CustomSkins:CustomEyeButtonSkin/mx_internal:_bindingsBeginWithWord' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_bindingsByDestination' fullname='DisplayApplication.CustomSkins:CustomEyeButtonSkin/mx_internal:_bindingsByDestination' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_bindings' fullname='DisplayApplication.CustomSkins:CustomEyeButtonSkin/mx_internal:_bindings' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_watcherSetupUtil' fullname='DisplayApplication.CustomSkins:CustomEyeButtonSkin/private:_watcherSetupUtil' type='mx.binding:IWatcherSetupUtil2' isStatic='true' isConst='false' >
</field>
<field name='_watchers' fullname='DisplayApplication.CustomSkins:CustomEyeButtonSkin/mx_internal:_watchers' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='hostComponent' fullname='DisplayApplication.CustomSkins:CustomEyeButtonSkin/hostComponent' type='spark.components:Button' isStatic='false' isConst='false' >
<description><![CDATA[ 
		]]></description>
<copy><![CDATA[spark.skins.spark.ApplicationSkin#hostComponent
		]]></copy>
<metadata>
	<Bindable owner='DisplayApplication.CustomSkins:CustomEyeButtonSkin/hostComponent' name='Bindable' >
	</Bindable>
</metadata>
</field>
</asdoc>
