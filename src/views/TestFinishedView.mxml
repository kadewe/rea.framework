<?xml version="1.0" encoding="utf-8"?>
<!--
/*

"Rich E-Assesment (REA) Framework"
A software framework for the use within the domain of e-assessment.

Copyright (C) 2014  University of Bremen, 
Working Group education media | media education 

Prof. Dr. Karsten Wolf, wolf@uni-bremen.de
Dipl.-Päd. Ilka Koppel, ikoppel@uni-bremen.de
Dipl.-Math. Kai Schwedes, kais@zait.uni-bremen.de
B.Sc. Jan Küster, jank87@tzi.de

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as
published by the Free Software Foundation, either version 3 of the
License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

*/
-->
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:views="views.*" currentState="result_page"  width="1000" height="700" xmlns:SkinnedComponents="components.SkinnedComponents.*"
		 stateChangeComplete="onViewStateChanged(event)">

	<fx:Script>
		<![CDATA[
			import components.CustomSkins.CustomButtonSkin;
			import components.factories.DisplayFactory;
			
			import mx.events.FlexEvent;
			
			import utils.ReaVisualUtils;
			
			public static const HELP:String = "help";
			public static const FINISHED:String = "finished";
			public static const PRINT:String ="print";
			public static const RESULT_PAGE:String = "result_page";
			public static const CHOOSE_NEXT:String = "choose_next_acitivity"
			public static const SAVE_PRINT:String = "save_print_resutls"
			
			
			private function finish():void
			{
				dispatchEvent(new Event(FINISHED));
			}
			
			protected function forwardButton_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if(currentState == RESULT_PAGE)
					setCurrentState(SAVE_PRINT);
				else
					setCurrentState(CHOOSE_NEXT);
			}	
			
			protected function backButton_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if(currentState == SAVE_PRINT)
					setCurrentState(RESULT_PAGE);
				else
					setCurrentState(SAVE_PRINT);
			}
			
			
			
			//intially always prescreen
			private var last_state:String;
			
			protected function onViewStateChanged(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				switch(currentState)
				{
					case HELP:
						help_wrapper.addElement(DisplayFactory.helpDisplay("TestFinishedModule",last_state, stop_vid_ref));
						break;
					default:
						last_state = currentState;
						break;
				}
			}		
			
			protected function vgroup1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var req:URLRequest = new URLRequest("http://www.ich-will-lernen.de");
				navigateToURL(req,"_new");
			}
			
			protected function vgroup1_mouseOverHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				vhs.filters = [ReaVisualUtils.getGloFil()];
				lernen.filters=[ReaVisualUtils.getGloFil()];
			}
			
			protected function vgroup1_mouseOutHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				vhs.filters=null;
				lernen.filters=null;
			}
			
			private function onIconOver(event:MouseEvent):void
			{
				event.target.alpha = 1.0;
				event.target.filters=[ReaVisualUtils.getGloFil()];
			}
			
			private function onIconOut(event:MouseEvent):void
			{
				event.target.alpha = 0.5;
				event.target.filters=null;
			}
			
		]]>
	</fx:Script>
	<s:states>
		<s:State name="result_page"/>
		<s:State name="choose_next_acitivity"/>
		<s:State name="save_print_resutls"/>
		<s:State name="help" />
	</s:states>
	<fx:Declarations>
		<!-- Platzieren Sie nichtvisuelle Elemente (z. B. Dienste, Wertobjekte) hier -->
		<fx:Object id="endReference" />
		<fx:Object id="newTReference" />
	</fx:Declarations>
	
	<!-- FOWARD AND BACK BUTTONS-->
	<s:HGroup width="100%" height="100%" includeIn="choose_next_acitivity,result_page,save_print_resutls" verticalAlign="bottom" paddingBottom="25" horizontalAlign="center" paddingLeft="25" paddingRight="25" depth="1000">
		<SkinnedComponents:BackButton id="backButton" includeIn="save_print_resutls,choose_next_acitivity" styleName="backButton" click="backButton_clickHandler(event)" />
		<s:Group width="100%" />
		<SkinnedComponents:ForwardButton id="forwardButton" includeIn="result_page,save_print_resutls" styleName="forwardButton" click="forwardButton_clickHandler(event)" />
	</s:HGroup>
	
	<!-- ======================================= -->
	<!--  HEADER GROUP FOR GLOBAL NAVIGATION     -->
	<!-- ======================================= -->
	
	<s:VGroup width="100%" includeIn="result_page,choose_next_acitivity,save_print_resutls">
		<s:HGroup id="header_group"  width="100%" height="32" verticalAlign="middle" horizontalAlign="left" paddingLeft="10" paddingRight="10">
			<s:HGroup id="header_navigation" width="100%" height="100%" horizontalAlign="right" verticalAlign="middle">
				<SkinnedComponents:HelpButton id="help_button" label="?"	playHover="true"  height="24" width="24" click="setCurrentState(HELP)" />
			</s:HGroup>
		</s:HGroup>
	</s:VGroup>
	
	<!-- ======================================= -->
	<!--  HELP PAGE    -->
	<!-- ======================================= -->
	
	<s:VGroup id="help_group" includeIn="help" width="100%" height="100%" verticalAlign="middle" horizontalAlign="center" >
		<s:Group id="help_wrapper" width="80%" height="65%" />
		
		<s:HGroup horizontalAlign="right" verticalAlign="middle" width="100%" height="20%" paddingRight="45">
			<SkinnedComponents:ForwardButton id="stop_vid_ref" label="Weiter"   click="setCurrentState(last_state)" />
		</s:HGroup>
	</s:VGroup>
	
	<!-- ======================================= -->
	<!--  RESULT PAGE   -->
	<!-- ======================================= -->
	
	<s:VGroup id="result_group" includeIn="result_page" width="100%" height="100%" top="15" bottom="15" left="15" right="15"
			  horizontalAlign="center" verticalAlign="top" paddingTop="15" gap="15">
		<s:Group id="congratsContainer"  width="850" height="78">
			<s:layout>
				<s:HorizontalLayout verticalAlign="middle" horizontalAlign="left" gap="15" />
			</s:layout>
			<SkinnedComponents:SoundButton id="congratsSound" />
			<s:Line id="congratsLine">
				<s:stroke>
					<s:SolidColorStroke color="0x000000" weight="2" alpha="0.2" joints="bevel" />
				</s:stroke>
			</s:Line>
			<s:Label id="congrats" styleName="Text-large"/>	
		</s:Group>
		
		
	</s:VGroup>
	
	
	<!-- ======================================= -->
	<!--  SAVE PRINT RESULTS    -->
	<!-- ======================================= -->
	
	<s:Group id="finishedGroup" includeIn="save_print_resutls" width="100%" height="85%" top="15" bottom="15" left="15" right="15">
		<s:layout>
			<s:VerticalLayout gap="35" horizontalAlign="center" verticalAlign="top" paddingTop="35"/>
		</s:layout>
		
		<!--
		<s:HGroup width="100%" id="symbols" height="100" horizontalAlign="left" verticalAlign="middle" paddingLeft="10" paddingRight="10">
			<s:HGroup width="100%" verticalAlign="middle">
				<SkinnedComponents:SoundButton id="printSound" />
				<s:Label id="youCanPrint" width="100%"/>
			</s:HGroup>
			<mx:Image id="printIcon" alpha="0.5" source="Assets/printOut.png"/>
		</s:HGroup>
		-->
		
		
		<s:HGroup width="80%" id="save_wrapper" height="100%" horizontalAlign="left" verticalAlign="middle" paddingLeft="10" paddingRight="10">
			<s:HGroup width="100%" verticalAlign="middle">
				<SkinnedComponents:SoundButton id="saveSound" />
				<s:Label id="youCanSave" width="100%" fontSize="22" />
			</s:HGroup>
			<mx:Image id="saveIcon" alpha="0.5" source="Assets/document-save-2.png" mouseOver="onIconOver(event)" mouseOut="onIconOut(event)"/>
		</s:HGroup>
		
		
		<s:HGroup width="100%" horizontalAlign="center" verticalAlign="middle" gap="10">
			<s:VGroup width="100%" click="vgroup1_clickHandler(event)" mouseOver="vgroup1_mouseOverHandler(event)" mouseOut="vgroup1_mouseOutHandler(event)">
				<s:Image id="vhs" source="Assets/vhs.png" smooth="true" width="100%"/>
				<s:Image id="lernen" source="Assets/logo_ich_will_lernen.jpg"  smooth="true" width="100%"/>
			</s:VGroup>
			
			<s:Image id="alphabund" source="Assets/alphabundpng.png" smooth="true" width="100%"/>
			
		</s:HGroup>

	</s:Group>
	
	
	<!-- Choose Activity Group: next test or end -->
	<s:Group id="chooseActivityGroup" includeIn="choose_next_acitivity" width="100%" height="100%">
		<s:layout>
			<s:VerticalLayout gap="100" horizontalAlign="center" verticalAlign="middle"
							  gap.result_page="50"/>
		</s:layout>
		
		<s:Group  width="600" height="100" id="whatNextGroup">
			<s:layout>
				<s:HorizontalLayout verticalAlign="middle" horizontalAlign="center" />
			</s:layout>
			<SkinnedComponents:SoundButton  id="whatNextSound"/>
			<s:Line id="whatNextLine">
				<s:stroke>
					<s:SolidColorStroke color="0x000000" weight="2" alpha="0.2" joints="bevel" />
				</s:stroke>
			</s:Line>
			<s:Label  id="whatNext"/>
		</s:Group>
		
		<s:Group   width="600" height="100">
			<s:layout>
				<s:HorizontalLayout verticalAlign="middle" horizontalAlign="center" />
			</s:layout>
			<SkinnedComponents:CustomDesignButton click="finish()" label="Neuer Test" skinClass="components.CustomSkins.CustomButtonSkin" id="newTestButton" styleName="customButton"/>
			<SkinnedComponents:CustomDesignButton label="Ende" id="mainAppEndButton" skinClass="components.CustomSkins.CustomButtonSkin" styleName="customButton"/>
		</s:Group>
	</s:Group>

</s:Group>